using CMOWebApi.Core;
using CMOWebApi.Models.AdminModel;
using CMOWebApi.Models.AutoGeneratedModels;
using CMOWebApi.Models.GeneralModel;
using CMOWebApi.Services.IServices;
using CMOWebApi.Services.ServiceHelper;
using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Http;
using System.Threading.Tasks;
using System.Web.Http;

namespace CMOWebApi.WebAPI.Areas.Admin.Controllers
{
    public class MenuController : ApiController
    {
        private readonly IMenuService _menuService;
        public MenuController(IMenuService menuService, IndexModel indexModel)
        {
            _menuService = menuService;

        }

        // GET: api/Menu
        [HttpPost]
        public ServiceResponse<List<UserMenuViewModel>> Get(List<AssignedUserPagePermissionViewModel> model)
        {
            ServiceResponse<List<UserMenuViewModel>> objReturn = new ServiceResponse<List<UserMenuViewModel>>();
            try
            {
                objReturn = _menuService.GetAll(model);

            }
            catch (Exception)
            {
                objReturn.Data = null;
                objReturn.IsSuccess = false;
                objReturn.Message = MessageStatus.Error;
            }
            return objReturn;
        }
        // GET: api/Menu
        [HttpGet]
        public ServiceResponse<List<UserMenuViewModel>> GetAllByUserId(int id)
        {
            ServiceResponse<List<UserMenuViewModel>> objReturn = new ServiceResponse<List<UserMenuViewModel>>();
            try
            {
                objReturn = _menuService.GetAllByUserId(id);

            }
            catch (Exception)
            {
                objReturn.Data = null;
                objReturn.IsSuccess = false;
                objReturn.Message = MessageStatus.Error;
            }
            return objReturn;
        }

        // GET: api/Menu/5
        [HttpGet]
        public ServiceResponse<MenuViewModel> Get(int id)
        {
            ServiceResponse<MenuViewModel> objReturn = new ServiceResponse<MenuViewModel>();
            try
            {
                objReturn = _menuService.GetById(id);

            }
            catch (Exception)
            {
                objReturn.Data = null;
                objReturn.IsSuccess = false;
                objReturn.Message = MessageStatus.Error;
            }
            return objReturn;
        }

        // POST: api/Menu
        [HttpPost]
        public async Task<ServiceResponse<string>> Post(MenuViewModel model)
        {
            ServiceResponse<string> objReturn = new ServiceResponse<string>();
            try
            {
                if (ModelState.IsValid)
                {
                    objReturn = await _menuService.Create(model);
                }
                else
                {
                    IEnumerable<System.Web.Http.ModelBinding.ModelError> allErrors = ModelState.Values.SelectMany(v => v.Errors);
                    objReturn.Data = JsonConvert.SerializeObject(allErrors);
                    objReturn.IsSuccess = false;
                    objReturn.Message = MessageStatus.InvalidData;
                }
            }
            catch
            {
                objReturn.IsSuccess = false;
                objReturn.Message = MessageStatus.Error;
            }
            return objReturn;
        }

        // PUT: api/Menu/5
        [HttpPost]
        public async Task<ServiceResponse<string>> Put(int id, MenuViewModel model)
        {
            ServiceResponse<string> objReturn = new ServiceResponse<string>();
            try
            {
                if (ModelState.IsValid && id > 0)
                {
                    model.MenuCode = id;
                    objReturn = await _menuService.Edit(model);
                }
                else
                {
                    IEnumerable<System.Web.Http.ModelBinding.ModelError> allErrors = ModelState.Values.SelectMany(v => v.Errors);
                    objReturn.Data = JsonConvert.SerializeObject(allErrors);
                    objReturn.IsSuccess = false;
                    objReturn.Message = MessageStatus.InvalidData;
                }
            }
            catch
            {
                objReturn.IsSuccess = false;
                objReturn.Message = MessageStatus.Error;
            }
            return objReturn;
        }


        // DELETE: api/Menu/5
        public void Delete(int id)
        {
        }
    }
}
