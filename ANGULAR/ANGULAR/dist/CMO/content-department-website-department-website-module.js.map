{"version":3,"sources":["webpack:///./src/app/content/department-website/classification-pagetype/addupdate-classificationpagetype/addupdate-classificationpagetype.component.html","webpack:///./src/app/content/department-website/classification-pagetype/classification-pagetype.component.html","webpack:///./src/app/content/department-website/department-menu-classification/addupdate-department-menu-classification/addupdate-department-menu-classification.component.html","webpack:///./src/app/content/department-website/department-menu-classification/department-menu-classification.component.html","webpack:///./src/app/content/department-website/department-section-mapping/addupdatedept-section-mapping/addupdatedept-section-mapping.component.html","webpack:///./src/app/content/department-website/department-section-mapping/department-section-mapping.component.html","webpack:///./src/app/content/department-website/department-sub-menu-classification/addupdate-department-sub-menu-classification/addupdate-department-sub-menu-classification.component.html","webpack:///./src/app/content/department-website/department-sub-menu-classification/department-sub-menu-classification.component.html","webpack:///./src/app/content/department-website/import-section-menu-sub-menu/import-section-menu-sub-menu.component.html","webpack:///./src/app/content/department-website/menu-classification/addupdate-menu-classification/addupdate-menu-classification.component.html","webpack:///./src/app/content/department-website/menu-classification/menu-classification.component.html","webpack:///./src/app/content/department-website/section-master/addupdate-section-master/addupdate-section-master.component.html","webpack:///./src/app/content/department-website/section-master/section-master.component.html","webpack:///./src/app/Shared/Model/Master/classification-pagetype-model.ts","webpack:///./src/app/Shared/Model/Master/menu-classification-model.ts","webpack:///./src/app/Shared/Model/department-section-mapping-model.ts","webpack:///./src/app/Shared/Model/section-master-model.ts","webpack:///./src/app/Shared/Service/classification-pagetype.service.ts","webpack:///./src/app/Shared/Service/department-menu-classification.service.ts","webpack:///./src/app/Shared/Service/department-section-mapping.service.ts","webpack:///./src/app/Shared/Service/department-submenu-classification.service.ts","webpack:///./src/app/Shared/Service/menu-classification.service.ts","webpack:///./src/app/Shared/Service/section-master.service.ts","webpack:///./src/app/content/department-website/classification-pagetype/addupdate-classificationpagetype/addupdate-classificationpagetype.component.css","webpack:///./src/app/content/department-website/classification-pagetype/addupdate-classificationpagetype/addupdate-classificationpagetype.component.ts","webpack:///./src/app/content/department-website/classification-pagetype/classification-pagetype.component.css","webpack:///./src/app/content/department-website/classification-pagetype/classification-pagetype.component.ts","webpack:///./src/app/content/department-website/department-menu-classification/addupdate-department-menu-classification/addupdate-department-menu-classification.component.css","webpack:///./src/app/content/department-website/department-menu-classification/addupdate-department-menu-classification/addupdate-department-menu-classification.component.ts","webpack:///./src/app/content/department-website/department-menu-classification/department-menu-classification.component.css","webpack:///./src/app/content/department-website/department-menu-classification/department-menu-classification.component.ts","webpack:///./src/app/content/department-website/department-section-mapping/addupdatedept-section-mapping/addupdatedept-section-mapping.component.css","webpack:///./src/app/content/department-website/department-section-mapping/addupdatedept-section-mapping/addupdatedept-section-mapping.component.ts","webpack:///./src/app/content/department-website/department-section-mapping/department-section-mapping.component.css","webpack:///./src/app/content/department-website/department-section-mapping/department-section-mapping.component.ts","webpack:///./src/app/content/department-website/department-sub-menu-classification/addupdate-department-sub-menu-classification/addupdate-department-sub-menu-classification.component.css","webpack:///./src/app/content/department-website/department-sub-menu-classification/addupdate-department-sub-menu-classification/addupdate-department-sub-menu-classification.component.ts","webpack:///./src/app/content/department-website/department-sub-menu-classification/department-sub-menu-classification.component.css","webpack:///./src/app/content/department-website/department-sub-menu-classification/department-sub-menu-classification.component.ts","webpack:///./src/app/content/department-website/department-website-routing.module.ts","webpack:///./src/app/content/department-website/department-website.module.ts","webpack:///./src/app/content/department-website/import-section-menu-sub-menu/import-section-menu-sub-menu.component.css","webpack:///./src/app/content/department-website/import-section-menu-sub-menu/import-section-menu-sub-menu.component.ts","webpack:///./src/app/content/department-website/menu-classification/addupdate-menu-classification/addupdate-menu-classification.component.css","webpack:///./src/app/content/department-website/menu-classification/addupdate-menu-classification/addupdate-menu-classification.component.ts","webpack:///./src/app/content/department-website/menu-classification/menu-classification.component.css","webpack:///./src/app/content/department-website/menu-classification/menu-classification.component.ts","webpack:///./src/app/content/department-website/section-master/addupdate-section-master/addupdate-section-master.component.css","webpack:///./src/app/content/department-website/section-master/addupdate-section-master/addupdate-section-master.component.ts","webpack:///./src/app/content/department-website/section-master/section-master.component.css","webpack:///./src/app/content/department-website/section-master/section-master.component.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gzGAAgzG,mBAAmB,iBAAiB,wBAAwB,yKAAyK,KAAK,OAAO,mD;;;;;;;;;;;ACAjiH,0ZAA0Z,0BAA0B,uJAAuJ,+BAA+B,yDAAyD,4NAA4N,eAAe,oEAAoE,yBAAyB,4GAA4G,syBAAsyB,yHAAyH,2FAA2F,+LAA+L,2HAA2H,8eAA8e,cAAc,gQAAgQ,wSAAwS,6C;;;;;;;;;;;ACA/6G,ghBAAghB,WAAW,oDAAoD,UAAU,iiBAAiiB,oBAAoB,uCAAuC,qBAAqB,grHAAgrH,eAAe,mPAAmP,mBAAmB,iBAAiB,wBAAwB,iKAAiK,KAAK,OAAO,mD;;;;;;;;;;;ACAr2K,siDAAsiD,oBAAoB,6CAA6C,mBAAmB,oCAAoC,qBAAqB,ijBAAijB,WAAW,oDAAoD,UAAU,glCAAglC,YAAY,oFAAoF,WAAW,yMAAyM,2DAA2D,qgBAAqgB,0BAA0B,uJAAuJ,+BAA+B,yDAAyD,4NAA4N,eAAe,oEAAoE,yBAAyB,qdAAqd,eAAe,kGAAkG,eAAe,iOAAiO,eAAe,kGAAkG,eAAe,0QAA0Q,eAAe,KAAK,uBAAuB,qBAAqB,2FAA2F,2NAA2N,eAAe,iBAAiB,wBAAwB,IAAI,wDAAwD,0ZAA0Z,cAAc,gQAAgQ,0SAA0S,sD;;;;;;;;;;;ACA97O,uhBAAuhB,oBAAoB,uCAAuC,qBAAqB,8wBAA8wB,WAAW,6DAA6D,UAAU,yvEAAyvE,eAAe,0PAA0P,mBAAmB,iBAAiB,0BAA0B,+cAA+c,eAAe,+PAA+P,mBAAmB,iBAAiB,0BAA0B,m7BAAm7B,8HAA8H,oBAAoB,oNAAoN,KAAK,OAAO,mD;;;;;;;;;;;ACAvkM,8kDAA8kD,oBAAoB,6CAA6C,mBAAmB,qBAAqB,qBAAqB,uWAAuW,YAAY,oGAAoG,WAAW,8WAA8W,WAAW,6DAA6D,UAAU,qsCAAqsC,0BAA0B,uJAAuJ,+BAA+B,yDAAyD,4NAA4N,eAAe,oEAAoE,yBAAyB,8dAA8d,eAAe,kGAAkG,eAAe,6NAA6N,eAAe,kGAAkG,eAAe,mRAAmR,eAAe,KAAK,uBAAuB,qBAAqB,2FAA2F,+NAA+N,eAAe,iBAAiB,wBAAwB,IAAI,wDAAwD,kZAAkZ,cAAc,wPAAwP,wSAAwS,6C;;;;;;;;;;;ACAhgO,ogBAAogB,qBAAqB,wFAAwF,oBAAoB,uCAAuC,qBAAqB,qyBAAqyB,WAAW,yCAAyC,UAAU,qjBAAqjB,WAAW,wDAAwD,UAAU,kkBAAkkB,WAAW,2CAA2C,UAAU,siBAAsiB,WAAW,8CAA8C,UAAU,q0EAAq0E,WAAW,2DAA2D,UAAU,qeAAqe,eAAe,mPAAmP,mBAAmB,iBAAiB,wBAAwB,igBAAigB,YAAY,mFAAmF,mBAAmB,WAAW,wiBAAwiB,YAAY,0FAA0F,mBAAmB,WAAW,ysBAAysB,qBAAqB,gLAAgL,2MAA2M,wBAAwB,uJAAuJ,KAAK,OAAO,+C;;;;;;;;;;;ACAvoS,6sDAA6sD,oBAAoB,6CAA6C,mBAAmB,qBAAqB,qBAAqB,0aAA0a,WAAW,yCAAyC,UAAU,6eAA6e,WAAW,wDAAwD,UAAU,iiBAAiiB,WAAW,2CAA2C,UAAU,2eAA2e,WAAW,8CAA8C,UAAU,2XAA2X,YAAY,6FAA6F,WAAW,mbAAmb,WAAW,2DAA2D,UAAU,qcAAqc,WAAW,yFAAyF,QAAQ,qcAAqc,WAAW,gGAAgG,QAAQ,kuCAAkuC,0BAA0B,mKAAmK,mCAAmC,yDAAyD,stBAAstB,yBAAyB,GAAG,yBAAyB,wFAAwF,gCAAgC,GAAG,kCAAkC,mvBAAmvB,mCAAmC,GAAG,mCAAmC,wFAAwF,wCAAwC,GAAG,0CAA0C,mwBAAmwB,2BAA2B,GAAG,2BAA2B,wFAAwF,mCAAmC,GAAG,qCAAqC,swBAAswB,4BAA4B,GAAG,4BAA4B,wFAAwF,0BAA0B,GAAG,4BAA4B,20BAA20B,sBAAsB,kFAAkF,8BAA8B,wFAAwF,kCAAkC,GAAG,oCAAoC,iUAAiU,eAAe,4EAA4E,yBAAyB,8fAA8f,eAAe,sGAAsG,eAAe,gPAAgP,eAAe,sGAAsG,eAAe,kSAAkS,eAAe,KAAK,uBAAuB,wBAAwB,0FAA0F,qOAAqO,eAAe,qBAAqB,wBAAwB,GAAG,uDAAuD,ymBAAymB,eAAe,wGAAwG,eAAe,sPAAsP,eAAe,wGAAwG,eAAe,sRAAsR,cAAc,kTAAkT,yTAAyT,kD;;;;;;;;;;;ACArshB,qzDAAqzD,WAAW,gDAAgD,UAAU,yrBAAyrB,UAAU,mdAAmd,0D;;;;;;;;;;;ACAhhG,4nEAA4nE,YAAY,6DAA6D,2BAA2B,WAAW,yKAAyK,sFAAsF,YAAY,6CAA6C,WAAW,yKAAyK,YAAY,kIAAkI,mCAAmC,WAAW,uXAAuX,yBAAyB,WAAW,wHAAwH,YAAY,2FAA2F,mCAAmC,WAAW,09BAA09B,WAAW,oDAAoD,UAAU,0OAA0O,KAAK,OAAO,mD;;;;;;;;;;;ACAp1J,0ZAA0Z,0BAA0B,uJAAuJ,+BAA+B,yDAAyD,4NAA4N,eAAe,oEAAoE,yBAAyB,weAAwe,eAAe,oGAAoG,eAAe,6NAA6N,eAAe,oGAAoG,eAAe,kbAAkb,cAAc,gQAAgQ,wSAAwS,6C;;;;;;;;;;;ACA55F,igIAAigI,KAAK,OAAO,mD;;;;;;;;;;;ACA7gI,qbAAqb,0BAA0B,uJAAuJ,+BAA+B,yDAAyD,4NAA4N,eAAe,oEAAoE,yBAAyB,qdAAqd,eAAe,kGAAkG,eAAe,iOAAiO,eAAe,kGAAkG,eAAe,wPAAwP,eAAe,iBAAiB,2FAA2F,gOAAgO,eAAe,iBAAiB,wBAAwB,IAAI,wDAAwD,8YAA8Y,cAAc,gQAAgQ,wSAAwS,6C;;;;;;;;;;;;ACCvkH;AAAA;AAAA;IAAA;IAiBC,CAAC;IAAD,kCAAC;AAAD,CAAC;;;;;;;;;;;;;;AClBF;AAAA;AAAA;IAAA;IAiBC,CAAC;IAAD,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACjB2C;AAE7C;IAAA;IAuBA,CAAC;IAAD,oCAAC;AAAD,CAAC;;AAED;IAAyD,6FAAU;IAQnE;QAAA,YACE,iBAAO,SAER;QADC,KAAI,CAAC,MAAM,GAAE,CAAC,CAAC;;IACjB,CAAC;IACD,0CAAC;AAAD,CAAC,CAZwD,yDAAU,GAYlE;;;;;;;;;;;;;;ACvCD;AAAA;AAAA;IAAA;IAgBA,CAAC;IAAD,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AChB0C;AACE;AAEI;AAMjD;IACE,uCAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE1D,+CAAO,GAAP,UAAQ,KAAiB;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3B,4DAAU,CAAC,6BAA6B,EACxC,KAAK,CACN,CAAC;IACJ,CAAC;IAED,2CAAG,GAAH,UAAI,KAAkC;QACpC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3B,4DAAU,CAAC,4BAA4B,EACvC,KAAK,CACN,CAAC;IACJ,CAAC;IAED,4CAAI,GAAJ,UAAK,KAAkC;QACrC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3B,4DAAU,CAAC,+BAA+B,EAC1C,KAAK,CACN,CAAC;IACJ,CAAC;IAED,0DAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,qCAAqC,GAAG,EAAE,CACtD,CAAC;IACJ,CAAC;IAED,+CAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,gCAAgC,GAAG,EAAE,CACjD,CAAC;IACJ,CAAC;;gBAjC0C,yDAAW;;IAD3C,6BAA6B;QAHzC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE2C,yDAAW;OAD3C,6BAA6B,CAqCzC;IAAD,oCAAC;CAAA;AArCyC;;;;;;;;;;;;;;;;;;;;ACTC;AACM;AAGJ;AAK7C;IACE,6CAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE1D,qDAAO,GAAP,UAAQ,KAAiB;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;IACvF,CAAC;IAED,iDAAG,GAAH,UAAI,KAAwC;QAC1C,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;IACtF,CAAC;IAED,qDAAO,GAAP,UAAQ,EAAE;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,sCAAsC,GAAG,EAAE,EACtD,IAAI,CACL,CAAC;IACJ,CAAC;IAED,kDAAI,GAAJ,UAAK,KAAwC;QAC3C,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;IACvF,CAAC;IAED,gEAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,2CAA2C,GAAG,EAAE,CAC5D,CAAC;IACJ,CAAC;;gBAzB0C,yDAAW;;IAD3C,mCAAmC;QAH/C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE2C,yDAAW;OAD3C,mCAAmC,CA2B/C;IAAD,0CAAC;CAAA;AA3B+C;;;;;;;;;;;;;;;;;;;;ACTL;AACM;AAGJ;AAK7C;IACE,yCAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE1D,iDAAO,GAAP,UAAQ,KAAiB;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC;IAED,6CAAG,GAAH,UAAI,KAAoC;QACtC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;IAClF,CAAC;IAED,iDAAO,GAAP,UAAQ,EAAE;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,kCAAkC,GAAG,EAAE,EAClD,IAAI,CACL,CAAC;IACJ,CAAC;IAED,8CAAI,GAAJ,UAAK,KAAoC;QACvC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;IACnF,CAAC;IAED,4DAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,uCAAuC,GAAG,EAAE,CACxD,CAAC;IACJ,CAAC;;gBAzB0C,yDAAW;;IAD3C,+BAA+B;QAH3C,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE2C,yDAAW;OAD3C,+BAA+B,CA2B3C;IAAD,sCAAC;CAAA;AA3B2C;;;;;;;;;;;;;;;;;;;;ACTD;AACM;AAGJ;AAK7C;IACE,gDAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE1D,wDAAO,GAAP,UAAQ,KAAiB;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,oDAAG,GAAH,UAAI,KAA6B;QAC/B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;IAC3E,CAAC;IAED,wDAAO,GAAP,UAAQ,EAAE;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,2BAA2B,GAAG,EAAE,EAC3C,IAAI,CACL,CAAC;IACJ,CAAC;IAED,qDAAI,GAAJ,UAAK,KAA6B;QAChC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,mEAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,gCAAgC,GAAG,EAAE,CACjD,CAAC;IACJ,CAAC;IAED,uCAAuC;IAGvC,4EAA2B,GAA3B,UAA4B,KAA6C;QACzE,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;IAClF,CAAC;;gBAhC4C,yDAAW;;IAD3C,sCAAsC;QAHlD,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE2C,yDAAW;OAD3C,sCAAsC,CAmClD;IAAD,6CAAC;CAAA;AAnCkD;;;;;;;;;;;;;;;;;;;;ACTR;AACE;AAGI;AAKjD;IAEE,mCAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IACtD,CAAC;IAGF,2CAAO,GAAP,UAAQ,KAAiB;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IAC7E,CAAC;IAED,uCAAG,GAAH,UAAI,KAA8B;QAChC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC;IAC5E,CAAC;IAED,wCAAI,GAAJ,UAAK,KAA8B;QACjC,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;IAC/E,CAAC;IAED,sDAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,4DAAU,CAAC,iCAAiC,GAAG,EAAE,CAAC,CAAC;IAClF,CAAC;IAED,2CAAO,GAAP,UAAQ,EAAU;QAChB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,4DAAU,CAAC,4BAA4B,GAAG,EAAE,CAAC,CAAC;IAC7E,CAAC;;gBAtB4C,yDAAW;;IAF3C,yBAAyB;QAHrC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAG2C,yDAAW;OAF3C,yBAAyB,CA2BrC;IAAD,gCAAC;CAAA;AA3BqC;;;;;;;;;;;;;;;;;;;;ACTK;AACM;AAGJ;AAK7C;IACE,8BAA6B,YAAyB;QAAzB,iBAAY,GAAZ,YAAY,CAAa;IAAG,CAAC;IAE1D,sCAAO,GAAP,UAAQ,KAAiB;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAED,kCAAG,GAAH,UAAI,KAAyB;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;IACvE,CAAC;IAED,sCAAO,GAAP,UAAQ,EAAE;QACR,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,uBAAuB,GAAG,EAAE,EACvC,IAAI,CACL,CAAC;IACJ,CAAC;IAED,mCAAI,GAAJ,UAAK,KAAyB;QAC5B,OAAO,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,4DAAU,CAAC,oBAAoB,EAAE,KAAK,CAAC,CAAC;IACxE,CAAC;IAED,iDAAkB,GAAlB,UAAmB,EAAU;QAC3B,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAC1B,4DAAU,CAAC,4BAA4B,GAAG,EAAE,CAC7C,CAAC;IACJ,CAAC;;gBAzB0C,yDAAW;;IAD3C,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EAE2C,yDAAW;OAD3C,oBAAoB,CA2BhC;IAAD,2BAAC;CAAA;AA3BgC;;;;;;;;;;;;ACTjC,+DAA+D,uR;;;;;;;;;;;;;;;;;;;;;;;;;;ACAK;AAClB;AACsD;AACD;AAClD;AACe;AACX;AACS;AACoB;AAChB;AAQtE;IASA,YAAY;IAEZ,2BAA2B;IAE3B,kDACU,UAAwB,EACf,8BAA6D,EAC7D,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,mCAA8B,GAA9B,8BAA8B,CAA+B;QAC7D,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAfhD,2BAAsB,GAAW,EAAE,CAAC;QAiBlC,IAAI,CAAC,KAAK,GAAG,IAAI,qHAA2B,EAAE,CAAC;QAC/C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,wCAAwC,EACxC,oBAAoB,EACpB,cAAc,EACd,4CAA4C,CAC7C,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,qCAAqC,EACrC,oBAAoB,EACpB,cAAc,EACd,4CAA4C,CAC7C,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,2DAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;IAE1E,CAAC;IAED,0DAAO,GAAP;QAAA,iBAeC;QAdC,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAClE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,KAAK,GAAgC,IAAI,CAAC,IAAI,CAAC;aAErD;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,4DAAS,GAAT;QAAA,iBAqCC;QAlCC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAE,CAAC,CAAC,EAAE;gBACzB,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC5D,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC;qBACvE;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,8BAA8B,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC3D,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC;qBACvE;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;SAEF;IAEH,CAAC;IAGD,kEAAe,GAAf;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,SAAS,CAAC;IACvC,CAAC;IAED,kEAAe,GAAf,UAAgB,KAAU;QAA1B,iBAWC;QAVC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACpD,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACzB,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACjD,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,yBAAyB,CAAC;SACzD;IACH,CAAC;IAED,gEAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAC,CAAC,IAAI,CAAC;YACd,GAAG,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/B,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,aAAa,EAAC,CAAC,IAAI,CAAC;SACrB,CAAC,CAAC;IACL,CAAC;;gBAhIqB,kEAAY;gBACiB,oHAA6B;gBAC9C,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,+EAAW;gBACX,mGAAqB;gBACnB,oFAAa;;IAtBnC,wCAAwC;QALpD,+DAAS,CAAC;YACT,QAAQ,EAAE,sCAAsC;YAChD,qRAAgE;;SAEjE,CAAC;+EAeoB,kEAAY;YACiB,oHAA6B;YAC9C,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,+EAAW;YACX,mGAAqB;YACnB,oFAAa;OAtBnC,wCAAwC,CAiJpD;IAAD,+CAAC;CAAA;AAjJoD;;;;;;;;;;;;ACjBrD,+DAA+D,+N;;;;;;;;;;;;;;;;;;;;;;;;ACAO;AACmB;AAC5B;AAGoB;AAC5B;AACe;AACP;AAC0C;AAOvG;IAwCA,YAAY;IAEZ,2BAA2B;IAE3B,yCACU,gBAA8B,EACrB,8BAA6D,EAC7D,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB;QAJ3B,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,mCAA8B,GAA9B,8BAA8B,CAA+B;QAC7D,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QA7CrC,qBAAgB,GAAa;YAC3B,OAAO;YACP,WAAW;YACX,aAAa;YACb,WAAW;YACX,cAAc;YACd,SAAS;YACT,eAAe;YACf,QAAQ;SACT,CAAC;QACF,yBAAoB,GAAwB;YAC1C,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;YAC1C,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE;YAC7C,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;YAChD,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;YACrC,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;SAC3C,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;YAC1C,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE;SAE/C,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAK3D,iCAA4B,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnF,6CAA6C,EAC7C,iDAAiD,EACjD,EAAE,EACF,oDAAoD,CACrD,CAAC;QAaA,IAAI,CAAC,4BAA4B,CAAC,aAAa;YAC7C,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,qCAAqC,EACrC,KAAK,EACL,KAAK,EACL,iDAAiD,CAClD;YACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,qCAAqC,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;IACrC,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,kDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,kDAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,KAAK,CAAC,SAAS,KAAK,0EAAU,CAAC,aAAa;gBAC1C,CAAC,CAAC,0EAAU,CAAC,UAAU;gBACvB,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,0DAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iDAAO,GAAP;QAAA,iBAwBC;QAtBC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,8BAA8B,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CACpE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,SAAS,GAAkC,CAC9C,IAAI,CAAC,IAAI,CAAC,IAAI,CACf,CAAC;gBACF,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,KAAI,CAAC,SAAS,CACf,CAAC;gBACF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qDAAW,GAAX,UAAY,EAAE;QAAd,iBAeC;QAdC,IAAI,CAAC,8BAA8B,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAClE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yDAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,+CAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,qDAAW,GAAX,UAAY,GAAG;QACb,IAAI,GAAG,EAAE;YACP,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,UAAU,CAAC,CAAC;YAC1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;;gBAzG2B,kEAAY;gBACW,oHAA6B;gBAC9C,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;;IApBM;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;sEAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;iEAAC;IA9BvC,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,6BAA6B;YACvC,kOAAuD;;SAExD,CAAC;+EA8C0B,kEAAY;YACW,oHAA6B;YAC9C,iFAAY;YACZ,mFAAa;YACnB,2DAAS;OAjDxB,+BAA+B,CAwJ3C;IAAD,sCAAC;CAAA;AAxJ2C;;;;;;;;;;;;AChB5C,+DAA+D,mT;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACX;AACJ;AACQ;AAEoC;AAE7B;AACkB;AAChB;AAC8C;AAClD;AAOlE;IAUA,YAAY;IAEZ,2BAA2B;IAE3B,wDACU,UAAwB,EACf,oCAAyE,EACzE,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,yCAAoC,GAApC,oCAAoC,CAAqC;QACzE,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAE9C,IAAI,CAAC,KAAK,GAAG,IAAI,8GAAiC,EAAE,CAAC;QACrD,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,yCAAyC,EACzC,oBAAoB,EACpB,cAAc,EACd,mDAAmD,CACpD,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,sCAAsC,EACtC,oBAAoB,EACpB,cAAc,EACd,mDAAmD,CACpD,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,iEAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,sEAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,cAAI;YACF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mEAAU,GAAV;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,0EAAU,CAAC,qCAAqC,CAAC,CAAC,SAAS,CACvF,UAAC,IAAI;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,gEAAO,GAAP;QAAA,iBAsBC;QArBC,IAAI,CAAC,oCAAoC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACxE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,KAAK,GAAsC,IAAI,CAAC,IAAI,CAAC;gBAC3D,IAAG,KAAI,CAAC,KAAK,CAAC,cAAc,EAC5B;oBACE,KAAI,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;iBAC/D;gBACD,IAAG,KAAI,CAAC,KAAK,CAAC,sBAAsB,EACpC;oBACE,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;iBAC/E;aACD;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,6EAAoB,GAApB,UAAqB,KAAU;QAA/B,iBAwBC;QAtBC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACpD,IACE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC/B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAC/C,EACD;gBACA,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAChC,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;oBAEzB,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC3C,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;gBACnC,CAAC,CAAC;gBACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,sBAAsB,GAAI,+BAA+B;oBAC9D,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC;oBACtC,MAAM,CAAC;aACR;SACF;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;SAC9C;IACH,CAAC;IAED,wEAAe,GAAf;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACzB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SAC5B;IACH,CAAC;IAED,kEAAS,GAAT;QAAA,iBAoCC;QAlCC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjB,IAAI,CAAC,oCAAoC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAClE,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,mDAAmD,CAAC,CAAC,CAAC;qBAC9E;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,oCAAoC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACjE,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,mDAAmD,CAAC,CAAC,CAAC;qBAC9E;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;SAEF;IAEH,CAAC;IAED,sEAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,EAAE,EAAC,CAAC,IAAI,CAAC;YACT,cAAc,EAAC,CAAC,IAAI,CAAC;YACrB,sBAAsB,EAAC,CAAC,IAAI,CAAC;YAC7B,kBAAkB,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC9C,gBAAgB,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC5C,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,QAAQ,EAAC,CAAC,IAAI,CAAC;YACf,QAAQ,EAAC,CAAC,IAAI,CAAC;YACf,WAAW,EAAC,CAAC,IAAI,CAAC;YAClB,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,UAAU,EAAC,CAAC,IAAI,CAAC;YACjB,IAAI,EAAC,CAAC,IAAI,CAAC;YACX,aAAa,EAAC,CAAC,IAAI,CAAC;YACpB,WAAW,EAAC,CAAC,IAAI,CAAC;YAClB,WAAW,EAAC,CAAC,IAAI,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;;gBA3LqB,kEAAY;gBACuB,kIAAmC;gBAC1D,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,gFAAW;gBACX,mGAAqB;gBACnB,mFAAa;;IAvBnC,8CAA8C;QAL1D,+DAAS,CAAC;YACT,QAAQ,EAAE,8CAA8C;YACxD,oTAAwE;;SAEzE,CAAC;+EAgBoB,kEAAY;YACuB,kIAAmC;YAC1D,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,gFAAW;YACX,mGAAqB;YACnB,mFAAa;OAvBnC,8CAA8C,CA6M1D;IAAD,qDAAC;CAAA;AA7M0D;;;;;;;;;;;;ACnB3D,+DAA+D,+O;;;;;;;;;;;;;;;;;;;;;;;;;;ACC0B;AAC5B;AACA;AAEyD;AACF;AAC9C;AACjB;AACe;AAGkB;AACpB;AAOlE;IAoDA,YAAY;IAEZ,2BAA2B;IAE3B,+CACU,gBAA8B,EACrB,oCAAyE,EACzE,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB,EAClB,YAAyB,EACzB,YAAmC;QAN5C,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,yCAAoC,GAApC,oCAAoC,CAAqC;QACzE,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QAClB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QApDtD,qBAAgB,GAAa;YAC3B,OAAO;YACP,iBAAiB;YACjB,wBAAwB;YACxB,kBAAkB;YAClB,oBAAoB;YACpB,cAAc;YACd,UAAU;YACV,aAAa;YACb,gBAAgB;YAChB,QAAQ;SACT,CAAC;QACF,yBAAoB,GAAwB;YAC1C,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,EAAE;YACzD,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE,sBAAsB,EAAE;YAC7D,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,YAAY,EAAE;YAChD,EAAE,KAAK,EAAE,wBAAwB,EAAE,IAAI,EAAE,qBAAqB,EAAE;YAChE,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;SACjD,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,EAAE;YACzD,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE,sBAAsB,EAAE;SAE9D,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAK3D,eAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,0GAA6B,EAAE,CAAkC,CAAC;QAGnH,2CAAsC,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAC7F,oDAAoD,EACpD,wDAAwD,EACxD,EAAE,EACF,2DAA2D,CAC5D,CAAC;QAeA,IAAI,CAAC,sCAAsC,CAAC,aAAa;YACvD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,sCAAsC,EACtC,KAAK,EACL,KAAK,EACL,wDAAwD,CACzD;YACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,sCAAsC,CAAC,CAAC;QAChF,yDAAyD;IAE3D,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,wDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAGD,0DAAU,GAAV;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,0EAAU,CAAC,qCAAqC,CAAC,CAAC,SAAS,CACvF,UAAC,IAAI;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6DAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,cAAI;YACF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wDAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,KAAK,CAAC,SAAS,KAAK,0EAAU,CAAC,aAAa;gBAC1C,CAAC,CAAC,0EAAU,CAAC,UAAU;gBACvB,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAGD,gEAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,uDAAO,GAAP;QAAA,iBA+BC;QA7BE,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC9B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;SAC5E;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,sBAAsB,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC,sBAAsB,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;SAC5F;QAED,IAAI,CAAC,oCAAoC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,SAAS,CACjH,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,SAAS,GAA8B,CAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CACf,CAAC;gBACF,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,KAAI,CAAC,SAAS,CACf,CAAC;gBACF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6DAAa,GAAb,UAAc,EAAE;QAAhB,iBAeC;QAdC,IAAI,CAAC,oCAAoC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CACxE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,+DAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC1B,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,WAAW,EAAE,EAC9C,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,EAC3C,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,CAC3C,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,OAAO,CAAC;SAClC;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE;YAC5B,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,EAChD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,QAAQ,EAAE,EAC7C,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,CAC7C,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,OAAO,CAAC;SACpC;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,qDAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,0GAA6B,EAAE,CAAC;QACtD,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;QACvB,IAAI,CAAC,sBAAsB,GAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,qEAAqB,GAArB,UAAsB,IAAI;QACxB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;IAChC,CAAC;;gBAtK2B,kEAAY;gBACiB,iIAAmC;gBAC1D,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;gBACJ,gFAAW;gBACX,mGAAqB;;IAzBX;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;4EAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;uEAAC;IAvCvC,qCAAqC;QALjD,+DAAS,CAAC;YACT,QAAQ,EAAE,oCAAoC;YAC9C,uPAA8D;;SAE/D,CAAC;+EA0D0B,kEAAY;YACiB,iIAAmC;YAC1D,iFAAY;YACZ,mFAAa;YACnB,2DAAS;YACJ,gFAAW;YACX,mGAAqB;OA/DzC,qCAAqC,CAiOjD;IAAD,4CAAC;CAAA;AAjOiD;;;;;;;;;;;;ACpBlD,wBAAwB,qBAAqB,EAAE,WAAW,eAAe,iDAAiD,iBAAiB,iBAAiB,cAAc,mBAAmB,cAAc,wBAAwB,OAAO,0BAA0B,SAAS,YAAY,oBAAoB,eAAe,eAAe,0BAA0B,sBAAsB,iBAAiB,SAAS,aAAa,YAAY,uBAAuB,oBAAoB,0BAA0B,6CAA6C,SAAS,iDAAiD,iBAAiB,gBAAgB,2BAA2B,mBAAmB,mBAAmB,uBAAuB,4BAA4B,uBAAuB,gCAAgC,eAAe,+BAA+B,+BAA+B,YAAY,YAAY,mBAAmB,YAAY,SAAS,cAAc,iBAAiB,SAAS,WAAW,mBAAmB,qBAAqB,uBAAuB,iBAAiB,WAAW,cAAc,kBAAkB,aAAa,WAAW,mBAAmB,gBAAgB,sBAAsB,0BAA0B,mBAAmB,UAAU,0BAA0B,aAAa,mBAAmB,cAAc,0BAA0B,aAAa,YAAY,iBAAiB,0BAA0B,gBAAgB,cAAc,mBAAmB,sBAAsB,eAAe,wBAAwB,6CAA6C,+nH;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp+C;AACpB;AACkB;AACX;AACJ;AAGe;AACkB;AACsB;AAC1C;AACoC;AACzC;AAO7D;IAcA,YAAY;IAEZ,2BAA2B;IAE3B,8CACU,UAAwB,EACf,gCAAiE,EACjE,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,qCAAgC,GAAhC,gCAAgC,CAAiC;QACjE,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAfzC,kBAAa,GAAa,CAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS;YAChL,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;QAiBlI,IAAI,CAAC,KAAK,GAAG,IAAI,oHAA6B,EAAE,CAAC;QACjD,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,qCAAqC,EACrC,oBAAoB,EACpB,cAAc,EACd,+CAA+C,CAChD,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,kCAAkC,EAClC,oBAAoB,EACpB,cAAc,EACd,+CAA+C,CAChD,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,uDAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,4DAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,cAAI;YACF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yDAAU,GAAV;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,2EAAU,CAAC,iCAAiC,CAAC,CAAC,SAAS,CACnF,UAAC,IAAI;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,sDAAO,GAAP;QAAA,iBAuBC;QArBC,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACpE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,KAAK,GAAkC,IAAI,CAAC,IAAI,CAAC;gBACvD,IAAG,KAAI,CAAC,KAAK,CAAC,cAAc,EAC5B;oBACE,KAAI,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;iBAC/D;gBACD,IAAG,KAAI,CAAC,KAAK,CAAC,iBAAiB,EAC/B;oBACE,KAAI,CAAC,KAAK,CAAC,iBAAiB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;iBACrE;aACD;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,qCAAqC;IACrC,KAAK;IACL,4DAA4D;IAC5D,WAAW;IACX,0CAA0C;IAC1C,+CAA+C;IAC/C,yDAAyD;IACzD,UAAU;IACV,UAAU;IACV,yCAAyC;IACzC,0CAA0C;IAC1C,WAAW;IACX,sDAAsD;IACtD,4CAA4C;IAC5C,WAAW;IACX,0DAA0D;IAC1D,eAAe;IACf,yEAAyE;IACzE,iDAAiD;IACjD,gBAAgB;IAChB,QAAQ;IACR,aAAa;IACb,oDAAoD;IACpD,MAAM;IACN,IAAI;IAGJ,mEAAoB,GAApB,UAAqB,KAAU,EAAC,KAAa;QAA7C,iBA8BC;QA5BC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACpD,IACE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC/B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAC/C,EACD;gBACA,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAChC,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;oBACzB,IAAI,KAAK,EAAE;wBACT,KAAI,CAAC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;wBACjD,KAAI,CAAC,wBAAwB,GAAG,EAAE,CAAC;qBACpC;yBACG;wBACF,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;wBAC3C,KAAI,CAAC,0BAA0B,GAAG,EAAE,CAAC;qBACtC;gBAEH,CAAC,CAAC;gBACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,wBAAwB,GAAI,+BAA+B;oBAChE,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC;oBACtC,MAAM,CAAC;aACR;SACF;aAAM;YACL,IAAI,CAAC,wBAAwB,GAAG,cAAc,CAAC;SAChD;IACH,CAAC;IAED,8DAAe,GAAf,UAAgB,KAAa;QAC3B,IAAI,KAAK,EAAE;YACV,IAAI,CAAC,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;SAClC;aACG;YACF,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SAC7B;IACH,CAAC;IAGD,wDAAS,GAAT;QAAA,iBAoCC;QAlCC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjB,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC9D,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;qBAC1E;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,gCAAgC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAC7D,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,+CAA+C,CAAC,CAAC,CAAC;qBAC1E;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;SAEF;IAEH,CAAC;IAED,4DAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAEtC,cAAc,EAAC,CAAC,IAAI,CAAC;YACrB,iBAAiB,EAAC,CAAC,IAAI,CAAC;YACxB,SAAS,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,WAAW,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,eAAe,EAAC,CAAC,IAAI,CAAC;YACtB,eAAe,EAAC,CAAC,IAAI,CAAC;YACtB,OAAO,EAAC,CAAC,IAAI,CAAC;SAEf,CAAC,CAAC;IACL,CAAC;IAGD,uDAAQ,GAAR,UAAS,IAAI;QAEb,IAAI,CAAC,KAAK,CAAC,eAAe,GAAC,IAAI,CAAC;IAChC,CAAC;;gBAlOqB,kEAAY;gBACmB,yHAA+B;gBAClD,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,+EAAW;gBACX,mGAAqB;gBACnB,mFAAa;;IA3BnC,oCAAoC;QALhD,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,+QAA6D;;SAE9D,CAAC;+EAoBoB,kEAAY;YACmB,yHAA+B;YAClD,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,+EAAW;YACX,mGAAqB;YACnB,mFAAa;OA3BnC,oCAAoC,CA0PhD;IAAD,2CAAC;CAAA;AA1PgD;;;;;;;;;;;;ACnBjD,+DAA+D,uO;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AAC5B;AAE8E;AAGvE;AACE;AACJ;AACoB;AACsB;AACvD;AACQ;AAO7D;IAmDA,YAAY;IAEZ,2BAA2B;IAE3B,2CACU,gBAA8B,EACrB,gCAAiE,EACjE,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB,EAClB,YAAyB,EACzB,YAAmC;QAN5C,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,qCAAgC,GAAhC,gCAAgC,CAAiC;QACjE,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QAClB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QAnDtD,qBAAgB,GAAa;YAC3B,OAAO;YACP,iBAAiB;YACjB,mBAAmB;YACnB,WAAW;YACX,aAAa;YACb,cAAc;YACd,UAAU;YACV,iBAAiB;YACjB,gBAAgB;YAChB,QAAQ;SACT,CAAC;QACF,yBAAoB,GAAwB;YAC1C,EAAE,KAAK,EAAE,mBAAmB,EAAE,IAAI,EAAE,cAAc,EAAE;YACpD,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,oBAAoB,EAAE;YAClD,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,sBAAsB,EAAE;YACtD,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;YAChD,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE;SAEvD,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,oBAAoB,EAAE;YAClD,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,sBAAsB,EAAE;YACtD,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE;SACvD,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAG3D,eAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,yHAAmC,EAAE,CAAwC,CAAC;QAE/H,uCAAkC,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACzF,gDAAgD,EAChD,oDAAoD,EACpD,EAAE,EACF,uDAAuD,CACxD,CAAC;QAgBA,IAAI,CAAC,kCAAkC,CAAC,aAAa;YACnD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,kCAAkC,EAClC,KAAK,EACL,KAAK,EACL,oDAAoD,CACrD;YACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,kCAAkC,CAAC,CAAC;IAC9E,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,oDAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sDAAU,GAAV;QAAA,iBAaC;QAXC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,2EAAU,CAAC,iCAAiC,CAAC,CAAC,SAAS,CACnF,cAAI;YAEF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yDAAa,GAAb;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAClE,cAAI;YACF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,oDAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,KAAK,CAAC,SAAS,KAAK,2EAAU,CAAC,aAAa;gBAC1C,CAAC,CAAC,2EAAU,CAAC,UAAU;gBACvB,CAAC,CAAC,2EAAU,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,4DAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,mDAAO,GAAP;QAAA,iBAwBC;QAtBC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,gCAAgC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,SAAS,CAC7G,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,SAAS,GAAoC,CAChD,IAAI,CAAC,IAAI,CAAC,IAAI,CACf,CAAC;gBACF,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,KAAI,CAAC,SAAS,CACf,CAAC;gBACF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,yDAAa,GAAb,UAAc,EAAE;QAAhB,iBAeC;QAdC,IAAI,CAAC,gCAAgC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CACpE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,2DAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YAClC,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,EACtD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,EACnD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CACnD,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,OAAO,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACpC,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE,EACxD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,EACrD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,CACrD,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAC5C;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAC,CAAC,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,iDAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,yHAAmC,EAAE,CAAC;QAC5D,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;QACvB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,iEAAqB,GAArB,UAAsB,IAAI;QACxB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;IAChC,CAAC;;gBA5J2B,kEAAY;gBACa,yHAA+B;gBAClD,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;gBACJ,+EAAW;gBACX,mGAAqB;;IAvBX;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;wEAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;mEAAC;IAxCvC,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,gCAAgC;YAC1C,2OAA0D;;SAE3D,CAAC;+EAyD0B,kEAAY;YACa,yHAA+B;YAClD,iFAAY;YACZ,mFAAa;YACnB,2DAAS;YACJ,+EAAW;YACX,mGAAqB;OA9DzC,iCAAiC,CAuN7C;IAAD,wCAAC;CAAA;AAvN6C;;;;;;;;;;;;ACnB9C,+DAA+D,mU;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACX;AACJ;AACQ;AACiB;AACQ;AAElB;AACkB;AAChB;AACoD;AACxD;AAOlE;IAcE,YAAY;IAEZ,2BAA2B;IAE3B,2DACU,UAAwB,EACf,uCAA+E,EAC/E,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,4CAAuC,GAAvC,uCAAuC,CAAwC;QAC/E,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAnBhD,YAAO,GAAa,IAAI,6EAAQ,EAAE,CAAC;QAqBjC,IAAI,CAAC,KAAK,GAAG,IAAI,mGAAsB,EAAE,CAAC;QAC1C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,6CAA6C,EAAE,oBAAoB,EAC/F,cAAc,EAAE,sDAAsD,CAAC,CAAC;YAC1E,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aACI;YACH,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,0CAA0C,EAAE,oBAAoB,EAC5F,cAAc,EAAE,sDAAsD,CAAC,CAAC;YAC1E,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,oEAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,yEAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACvE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sEAAU,GAAV;QAAA,iBAaC;QAZC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,0EAAU,CAAC,0BAA0B,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAClF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;gBAClC,KAAI,CAAC,OAAO,CAAC,iBAAiB,GAAG,OAAO,CAAC,iBAAiB,CAAC;gBAC3D,KAAI,CAAC,OAAO,CAAC,qBAAqB,GAAG,OAAO,CAAC,qBAAqB,CAAC;gBACnE,2EAA2E;gBAC3E,KAAI,CAAC,OAAO,CAAC,oCAAoC,GAAG,OAAO,CAAC,oCAAoC,CAAC;gBACjG,KAAI,CAAC,OAAO,CAAC,2CAA2C,GAAG,OAAO,CAAC,2CAA2C,CAAC;aAChH;QACH,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8EAAkB,GAAlB;QAAA,iBAUC;QATC,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,0EAAU,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACvF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,IAAI,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;gBAClC,KAAI,CAAC,OAAO,CAAC,wBAAwB,GAAG,OAAO,CAAC,wBAAwB,CAAC;aAC1E;QACH,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2EAAe,GAAf,UAAgB,KAAU;QAA1B,iBAWC;QAVC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE;YAC5D,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACzB,KAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACjD,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;SAClC;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,uBAAuB,CAAC;SACvD;IACH,CAAC;IAED,qEAAS,GAAT;QACE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,SAAS,CAAC;IACvC,CAAC;IAED,0EAAc,GAAd,UAAe,IAAI;QACjB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QACzC,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;QAC3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QAChC,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,mEAAO,GAAP;QAAA,iBAmCC;QAlCC,IAAI,CAAC,uCAAuC,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,KAAK,GAA2B,IAAI,CAAC,IAAI,CAAC;gBAC/C,IAAI,KAAI,CAAC,KAAK,CAAC,cAAc,EAAE;oBAC7B,KAAI,CAAC,KAAK,CAAC,cAAc,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBAC9D,KAAI,CAAC,iCAAiC,CAAC,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;oBAClE,KAAI,CAAC,kBAAkB,EAAE,CAAC;iBAC3B;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE;oBACrC,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,CAAC;iBAC/E;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE;oBACjC,KAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;iBACvE;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,yBAAyB,EAAE;oBACxC,KAAI,CAAC,KAAK,CAAC,yBAAyB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,yBAAyB,CAAC,CAAC;iBACrF;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,UAAU,EAAE;oBACzB,KAAI,CAAC,yBAAyB,CAAC,KAAI,CAAC,KAAK,CAAC,UAAU,CAAC;iBACtD;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACxB,KAAI,CAAC,KAAK,CAAC,qBAAqB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;iBAC7E;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,0BAA0B,EAAE;oBACzC,KAAI,CAAC,KAAK,CAAC,0BAA0B,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;iBACvF;aACF;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACC,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gFAAoB,GAApB,UAAqB,KAAU;QAA/B,iBAsBC;QArBC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;YACpD,IACE,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;gBAC/B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnC,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAC/C,EACD;gBACA,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;gBAChC,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;oBACzB,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;oBAC3C,KAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;gBACnC,CAAC,CAAC;gBACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;aAClD;iBAAM;gBACL,IAAI,CAAC,sBAAsB,GAAG,+BAA+B;oBAC3D,YAAY,CAAC,OAAO,CAAC,gBAAgB,CAAC;oBACtC,MAAM,CAAC;aACV;SACF;aAAM;YACL,IAAI,CAAC,sBAAsB,GAAG,cAAc,CAAC;SAC9C;IACH,CAAC;IAED,2EAAe,GAAf;QACE,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC;SAC7B;IACH,CAAC;IAED,qEAAS,GAAT;QAAA,iBA8BC;QA7BC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjB,IAAI,CAAC,uCAAuC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBAC3E,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,sDAAsD,CAAC,CAAC,CAAC;qBACjF;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EAAE,UAAC,KAAK;oBACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;aACJ;iBACI;gBACH,IAAI,CAAC,uCAAuC,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;oBAC1E,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,sDAAsD,CAAC,CAAC,CAAC;qBACjF;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EAAE,UAAC,KAAK;oBACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CAAC,CAAC;aACJ;SAEF;IAEH,CAAC;IAED,yEAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,EAAE,EAAE,CAAC,IAAI,CAAC;YACV,cAAc,EAAE,CAAC,IAAI,CAAC;YACtB,sBAAsB,EAAE,CAAC,IAAI,CAAC;YAC9B,UAAU,EAAE,CAAC,IAAI,CAAC;YAClB,kBAAkB,EAAE,CAAC,IAAI,CAAC;YAC1B,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,kBAAkB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,gBAAgB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,qBAAqB,EAAE,CAAC,IAAI,CAAC;YAC7B,qBAAqB,EAAE,CAAC,IAAI,CAAC;YAC7B,yBAAyB,EAAE,CAAC,IAAI,CAAC;YACjC,0BAA0B,EAAE,CAAC,IAAI,CAAC;YAClC,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,cAAc,EAAE,CAAC,IAAI,CAAC;SACvB,CAAC,CAAC;IACL,CAAC;IAED,6FAAiC,GAAjC,UAAkC,IAAI;QAAtC,iBAUC;QATC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,iCAAiC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChF,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,eAAe,GAAmB,IAAI,CAAC,IAAI,CAAC;iBAClD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,qFAAyB,GAAzB,UAA0B,IAAI;QAA9B,iBAWC;QAVC,IAAI,CAAC,4BAA4B,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC,CAAC;QAC/E,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxE,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,iBAAiB,GAAmB,IAAI,CAAC,IAAI,CAAC;iBACpD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,wFAA4B,GAA5B,UAA6B,UAAe,EAAE,aAAkB;QAAhE,iBAUC;QAV4B,4CAAe;QAAE,kDAAkB;QAC9D,IAAI,UAAU,IAAI,aAAa,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxG,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,oBAAoB,GAAmB,IAAI,CAAC,IAAI,CAAC;iBACvD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;gBA/PqB,kEAAY;gBAC0B,wIAAsC;gBAChE,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,gFAAW;gBACX,mGAAqB;gBACnB,oFAAa;;IA3BrC,iDAAiD;QAL7D,+DAAS,CAAC;YACT,QAAQ,EAAE,kDAAkD;YAC5D,oUAA4E;;SAE7E,CAAC;+EAoBsB,kEAAY;YAC0B,wIAAsC;YAChE,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,gFAAW;YACX,mGAAqB;YACnB,oFAAa;OA3BrC,iDAAiD,CAqR7D;IAAD,wDAAC;CAAA;AArR6D;;;;;;;;;;;;ACnB9D,+DAA+D,2P;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AAC5B;AAEA;AACR;AACe;AACE;AACkD;AAEE;AAEpC;AACpB;AAQlE;IA4CE,kDACU,gBAA8B,EACrB,uCAA+E,EAC/E,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB,EAClB,YAAyB,EACzB,YAAmC;QAN5C,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,4CAAuC,GAAvC,uCAAuC,CAAwC;QAC/E,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QAClB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QA3CtD,qBAAgB,GAAa,CAAC,OAAO,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE,oBAAoB,EAAE,cAAc;YACzG,iBAAiB;YACjB,YAAY,EAAE,QAAQ,CAAC,CAAC;QAC1B,yBAAoB,GAAwB;QAC1C,6DAA6D;QAC7D,iEAAiE;QACjE,oDAAoD;QACpD,oEAAoE;QACpE,kEAAkE;SACnE,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,kBAAkB,EAAE,IAAI,EAAE,oBAAoB,EAAE;YACzD,EAAE,KAAK,EAAE,oBAAoB,EAAE,IAAI,EAAE,sBAAsB,EAAE;YAC7D,EAAE,KAAK,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE;SACvD,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAG3D,8CAA8C;QAE9C,eAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,yGAA4B,EAAE,CAAiC,CAAC;QAGjH,8CAAyC,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAChG,uDAAuD,EACvD,2DAA2D,EAC3D,EAAE,EACF,8DAA8D,CAC/D,CAAC;QAeA,IAAI,CAAC,yCAAyC,CAAC,aAAa;YAC1D,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACnC,0CAA0C,EAC1C,KAAK,EACL,KAAK,EACL,2DAA2D,CAC5D;YACD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,0CAA0C,CAAC,CAAC;QACpF,wDAAwD;QAExD,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YAClC,IAAI,CAAC,iCAAiC,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;SACxE;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE;YAC9B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC5D;IACH,CAAC;IAED,2DAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;QACxE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,gEAAa,GAAb;QAAA,iBAQC;QAPC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,cAAI;YACvE,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,aAAa,GAA8B,IAAI,CAAC,IAAI,CAAC;aAC3D;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6DAAU,GAAV;QAAA,iBAQC;QAPC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,0EAAU,CAAC,gCAAgC,CAAC,CAAC,SAAS,CAAC,cAAI;YACvF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4EAAyB,GAAzB,UAA0B,IAAI;QAA9B,iBAUC;QATC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxE,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,iBAAiB,GAAmB,IAAI,CAAC,IAAI,CAAC;iBACpD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,2DAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC,SAAS,KAAK,0EAAU,CAAC,aAAa,CAAC,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC;QAC1H,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,mEAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,0DAAO,GAAP;QAAA,iBAmBC;QAlBC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,GAAG,CAAC;QAC/B,IAAI,CAAC,uCAAuC,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YAC1H,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,SAAS,GAAiC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAEhE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;gBACzB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;gBAE5B,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CAA6B,KAAI,CAAC,SAAS,CAAC,CAAC;gBACrF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gEAAa,GAAb,UAAc,EAAE;QAAhB,iBAaC;QAZC,IAAI,CAAC,uCAAuC,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,UAAC,IAAI;YACjF,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBACI;gBACH,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EAAE,UAAC,KAAK;YACP,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,oFAAiC,GAAjC,UAAkC,IAAI;QAAtC,iBAUC;QATC,IAAI,IAAI,EAAE;YACR,IAAI,CAAC,cAAc,CAAC,iCAAiC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,cAAI;gBAChF,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,eAAe,GAAmB,IAAI,CAAC,IAAI,CAAC;iBAClD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,wEAAqB,GAArB,UAAsB,IAAI;QACxB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;IAChC,CAAC;IAED,kEAAe,GAAf,UAAgB,KAAK;QACnB,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;YAClC,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,EACtD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,QAAQ,EAAE,EACnD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,OAAO,EAAE,CACnD,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,cAAc,GAAG,OAAO,CAAC;SAC1C;QACD,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE;YACpC,IAAI,OAAO,GAAG,IAAI,IAAI,CACpB,IAAI,CAAC,GAAG,CACN,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,WAAW,EAAE,EACxD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,EACrD,IAAI,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC,OAAO,EAAE,CACrD,CACF,CAAC,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,UAAU,CAAC,gBAAgB,GAAG,OAAO,CAAC;SAC5C;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,wDAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,yGAA4B,EAAE,CAAC;QACrD,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC;IAC1E,CAAC;IAED,+EAA4B,GAA5B,UAA6B,UAAU,EAAE,aAAa;QAAtD,iBAUC;QATC,IAAI,UAAU,IAAI,aAAa,EAAE;YAC/B,IAAI,CAAC,cAAc,CAAC,4BAA4B,CAAC,UAAU,EAAE,aAAa,CAAC,CAAC,SAAS,CAAC,cAAI;gBACxF,IAAI,IAAI,CAAC,SAAS,EAAE;oBAClB,KAAI,CAAC,oBAAoB,GAAmB,IAAI,CAAC,IAAI,CAAC;iBACvD;YACH,CAAC,EAAE,eAAK;gBACN,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;;gBAjL2B,kEAAY;gBACoB,uIAAsC;gBAChE,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;gBACJ,gFAAW;gBACX,mGAAqB;;IAzBX;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;+EAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;0EAAC;IA3BzC,wCAAwC;QANpD,+DAAS,CAAC;YACT,QAAQ,EAAE,wCAAwC;YAClD,mQAAkE;;SAEnE,CAAC;+EA+C4B,kEAAY;YACoB,uIAAsC;YAChE,iFAAY;YACZ,mFAAa;YACnB,2DAAS;YACJ,gFAAW;YACX,mGAAqB;OAnD3C,wCAAwC,CAgOpD;IAAD,+CAAC;CAAA;AAhOoD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBZ;AACc;AAC2C;AACiD;AACrC;AACmD;AAC/B;AAC4D;AACjD;AACgE;AACnD;AACpC;AACnC;AAC4C;AACL;AAE1H,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,qBAAqB;QAC3B,SAAS,EAAE,8GAA2B;KACvC;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,+JAAoC;KAChD;IACD;QACE,IAAI,EAAE,gCAAgC;QACtC,SAAS,EAAE,+JAAoC;KAChD;IACD;QACE,IAAI,EAAE,yBAAyB;QAC/B,SAAS,EAAE,0HAA+B;KAC3C;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,6KAAwC;KACpD;IACD;QACE,IAAI,EAAE,oCAAoC;QAC1C,SAAS,EAAE,6KAAwC;KACpD;IACD;QACE,IAAI,EAAE,gCAAgC;QACtC,SAAS,EAAE,8IAAqC;KACjD;IACD;QACE,IAAI,EAAE,oCAAoC;QAC1C,SAAS,EAAE,0MAA8C;KAC1D;IACD;QACE,IAAI,EAAE,2CAA2C;QACjD,SAAS,EAAE,0MAA8C;KAC1D;IAED;QACE,IAAI,EAAE,mCAAmC;QACzC,SAAS,EAAE,yJAAwC;KACpD;IACD;QACE,IAAI,EAAE,uCAAuC;QAC7C,SAAS,EAAE,0NAAiD;KAC7D;IACD;QACE,IAAI,EAAE,8CAA8C;QACpD,SAAS,EAAE,0NAAiD;KAC7D;IACD;QACE,IAAI,EAAE,4BAA4B;QAClC,SAAS,EAAE,mIAAiC;KAC7C;IACD;QACE,IAAI,EAAE,gCAAgC;QACtC,SAAS,EAAE,uKAAoC;KAChD;IACD;QACE,IAAI,EAAE,uCAAuC;QAC7C,SAAS,EAAE,uKAAoC;KAChD;IACD;QACE,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,gGAAsB;KAClC;IACD;QACE,IAAI,EAAE,oBAAoB;QAC1B,SAAS,EAAE,4IAA+B;KAC3C;IACD;QACE,IAAI,EAAE,2BAA2B;QACjC,SAAS,EAAE,4IAA+B;KAC3C;IACD;QACE,IAAI,EAAE,6BAA6B;QACnC,SAAS,EAAE,uIAAiC;KAC7C;CACF,CAAC;AAMF;IAAA;IAA8C,CAAC;IAAlC,8BAA8B;QAJ1C,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,8BAA8B,CAAI;IAAD,qCAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpGF;AACM;AAEsC;AACD;AAC7B;AAC2C;AACiD;AACrC;AACmD;AAC/B;AAC4D;AACjD;AACgE;AACvF;AACoC;AACvE;AAC4C;AACL;AAW1H;IAAA;IAAuC,CAAC;IAA3B,uBAAuB;QATnC,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,8GAA2B,EAAE,+JAAoC,EAAE,0HAA+B,EAAE,6KAAwC,EAAE,+IAAqC,EAAE,2MAA8C,EAAE,0JAAwC,EAAE,0NAAiD,EAAE,mIAAiC,EAAE,uKAAoC,EAAE,gGAAsB,EAAE,4IAA+B,EAAE,uIAAiC,CAAC;YACrf,OAAO,EAAE;gBACP,4DAAY;gBACZ,iGAA8B;gBAC9B,iGAAiB;gBACjB,kEAAY;aACb;SACF,CAAC;OACW,uBAAuB,CAAI;IAAD,8BAAC;CAAA;AAAJ;;;;;;;;;;;;AC7BpC,+DAA+D,2O;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACf;AACQ;AAEyC;AAClC;AACE;AACoD;AAO1H;IAME,YAAY;IAEZ,2BAA2B;IAE3B,2CACU,UAAwB,EACf,uCAA+E,EAC/E,aAA2B,EAC3B,WAAwB,EACxB,cAA6B;QAJtC,eAAU,GAAV,UAAU,CAAc;QACf,4CAAuC,GAAvC,uCAAuC,CAAwC;QAC/E,kBAAa,GAAb,aAAa,CAAc;QAC3B,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAe;QAG9C,IAAI,CAAC,KAAK,GAAG,IAAI,mHAAsC,EAAE,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,mFAAmF,EACnF,EAAE,EACF,EAAE,EACF,EAAE,CACH,CAAC;IACJ,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,oDAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,sDAAU,GAAV;QAAA,iBAcC;QAbC,IAAI,CAAC,cAAc;aAChB,SAAS,CAAC,0EAAU,CAAC,oCAAoC,CAAC;aAC1D,SAAS,CACR,UAAC,IAAI;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACN,CAAC;IAED,qDAAS,GAAT;QAAA,iBAsBC;QApBC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,CAAC,KAAK,CAAC,iBAAiB,GAAC,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YACpE,IAAI,CAAC,uCAAuC;iBACzC,2BAA2B,CAAC,IAAI,CAAC,KAAK,CAAC;iBACvC,SAAS,CACR,UAAC,IAAI;gBACH,IAAI,IAAI,CAAC,SAAS,EAAE;oBACpB,uCAAuC;oBACrC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;oBACzC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBAC5B;qBAAM;oBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;iBACxC;YACH,CAAC,EACD,UAAC,KAAK;gBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YAC1C,CAAC,CACF,CAAC;SACL;IACH,CAAC;IAED,yDAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,kBAAkB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC/C,gBAAgB,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC7C,eAAe,EAAE,CAAC,IAAI,CAAC;YACvB,YAAY,EAAE,CAAC,IAAI,CAAC;YACpB,eAAe,EAAE,CAAC,IAAI,CAAC;SACxB,CAAC,CAAC;IACL,CAAC;;gBAzEqB,kEAAY;gBAC0B,uIAAsC;gBAChE,iFAAY;gBACd,0DAAW;gBACR,mFAAa;;IAfrC,iCAAiC;QAL7C,+DAAS,CAAC;YACT,QAAQ,EAAE,kCAAkC;YAC5C,iPAA4D;;SAE7D,CAAC;+EAYsB,kEAAY;YAC0B,uIAAsC;YAChE,iFAAY;YACd,0DAAW;YACR,mFAAa;OAfrC,iCAAiC,CAuF7C;IAAD,wCAAC;CAAA;AAvF6C;;;;;;;;;;;;ACf9C,+DAA+D,uQ;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACG;AAC0C;AAC3B;AACX;AACW;AACF;AACoB;AAChB;AAC0B;AAGnC;AAO7D;IAQC,YAAY;IAEZ,2BAA2B;IAE3B,8CACU,UAAwB,EACf,0BAAqD,EACrD,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,+BAA0B,GAA1B,0BAA0B,CAA2B;QACrD,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAE9C,IAAI,CAAC,KAAK,GAAG,IAAI,8GAAuB,EAAE,CAAC;QAC3C,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,8BAA8B,EAC9B,oBAAoB,EACpB,cAAc,EACd,wCAAwC,CACzC,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,2BAA2B,EAC3B,oBAAoB,EACpB,cAAc,EACd,wCAAwC,CACzC,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,uDAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;IAE1E,CAAC;IAED,yDAAU,GAAV;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,2EAAU,CAAC,2BAA2B,CAAC,CAAC,SAAS,CAC7E,UAAC,IAAI;YAEH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,GAAa,IAAI,CAAC,IAAI,CAAC;aACpC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,sDAAO,GAAP;QAAA,iBAsBC;QArBC,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CAC9D,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,KAAK,GAA4B,IAAI,CAAC,IAAI,CAAC;gBACjD,IAAG,KAAI,CAAC,KAAK,CAAC,kBAAkB,EAChC;oBACE,KAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;iBACvE;gBACD,IAAI,KAAI,CAAC,KAAK,CAAC,SAAS,EAAE;oBACxB,KAAI,CAAC,KAAK,CAAC,sBAAsB,GAAG,MAAM,CAAC,KAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC;iBAC9E;aAED;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,wDAAS,GAAT;QAAA,iBAqCC;QAlCC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjB,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACxD,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,wCAAwC,CAAC,CAAC,CAAC;qBACnE;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,0BAA0B,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACvD,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,wCAAwC,CAAC,CAAC,CAAC;qBACnE;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;SAEF;IAEH,CAAC;IAED,4DAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,WAAW,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,SAAS,EAAE,CAAC,IAAI,CAAC;YACjB,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,OAAO,EAAC,CAAC,IAAI,CAAC;YACd,mBAAmB,EAAE,CAAC,IAAI,CAAC;YAC3B,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,sBAAsB,EAAC,CAAC,IAAI,CAAC;SAC9B,CAAC,CAAC;IACL,CAAC;;gBApIqB,kEAAY;gBACa,4GAAyB;gBACtC,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,+EAAW;gBACX,mGAAqB;gBACnB,mFAAa;;IArBpC,oCAAoC;QALhD,+DAAS,CAAC;YACT,QAAQ,EAAE,mCAAmC;YAC7C,wQAA6D;;SAE9D,CAAC;+EAcqB,kEAAY;YACa,4GAAyB;YACtC,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,+EAAW;YACX,mGAAqB;YACnB,mFAAa;OArBpC,oCAAoC,CAoJhD;IAAD,2CAAC;CAAA;AApJgD;;;;;;;;;;;;ACnBjD,+DAA+D,mN;;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AAC5B;AACoB;AAG5B;AACiB;AACF;AAC2B;AAClC;AAO7D;IAuCC,YAAY;IAEZ,2BAA2B;IAE3B,qCACU,gBAA8B,EACrB,0BAAqD,EACrD,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB;QAJ3B,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,+BAA0B,GAA1B,0BAA0B,CAA2B;QACrD,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QA5CrC,qBAAgB,GAAa;YAC3B,OAAO;YACP,WAAW;YACX,aAAa;YACb,cAAc;YACd,SAAS;YACT,UAAU;YACV,QAAQ;SACT,CAAC;QACF,yBAAoB,GAAwB;YAC1C,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;YAC1C,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,aAAa,EAAE;YAC7C,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;YAChD,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,SAAS,EAAE;SAEtC,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;YAC1C,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE;SAE/C,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAK3D,iCAA4B,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CACnF,yCAAyC,EACzC,6CAA6C,EAC7C,EAAE,EACF,gDAAgD,CACjD,CAAC;QAaA,IAAI,CAAC,4BAA4B,CAAC,aAAa;YAC7C,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,2BAA2B,EAC3B,KAAK,EACL,KAAK,EACL,6CAA6C,CAC9C;YACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,2BAA2B,CAAC,CAAC;QACrE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;IACrC,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,8CAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,8CAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,KAAK,CAAC,SAAS,KAAK,0EAAU,CAAC,aAAa;gBAC1C,CAAC,CAAC,0EAAU,CAAC,UAAU;gBACvB,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,sDAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,6CAAO,GAAP;QAAA,iBAwBC;QAtBC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAChE,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,SAAS,GAA8B,CAC1C,IAAI,CAAC,IAAI,CAAC,IAAI,CACf,CAAC;gBACF,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,KAAI,CAAC,SAAS,CACf,CAAC;gBACF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mDAAa,GAAb,UAAc,EAAE;QAAhB,iBAeC;QAdC,IAAI,CAAC,0BAA0B,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CAC9D,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,qDAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,2CAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;QACnC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;;gBA9F2B,kEAAY;gBACO,4GAAyB;gBACtC,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;;IApBM;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;kEAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;6DAAC;IA7BxC,2BAA2B;QALvC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,sNAAmD;;SAEpD,CAAC;+EA6C2B,kEAAY;YACO,4GAAyB;YACtC,iFAAY;YACZ,mFAAa;YACnB,2DAAS;OAhDzB,2BAA2B,CA4IvC;IAAD,kCAAC;CAAA;AA5IuC;;;;;;;;;;;;AChBxC,+DAA+D,mP;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACkB;AACX;AACJ;AAC0B;AAEX;AACkB;AAChB;AACe;AACnB;AAOlE;IAOA,YAAY;IAEZ,2BAA2B;IAE3B,yCACU,UAAwB,EACf,qBAA2C,EAC3C,aAA2B,EAC3B,OAAe,EACxB,MAAsB,EACb,WAAwB,EACxB,YAAyB,EACzB,YAAmC,EACnC,cAA6B;QARtC,eAAU,GAAV,UAAU,CAAc;QACf,0BAAqB,GAArB,qBAAqB,CAAsB;QAC3C,kBAAa,GAAb,aAAa,CAAc;QAC3B,YAAO,GAAP,OAAO,CAAQ;QACxB,WAAM,GAAN,MAAM,CAAgB;QACb,gBAAW,GAAX,WAAW,CAAa;QACxB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QACnC,mBAAc,GAAd,cAAc,CAAe;QAE9C,IAAI,CAAC,KAAK,GAAG,IAAI,4FAAkB,EAAE,CAAC;QACtC,IAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC1C,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,EAAE,CAAC;YACf,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,yBAAyB,EACzB,oBAAoB,EACpB,cAAc,EACd,oCAAoC,CACrC,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;SACvB;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,aAAa,CAC3B,sBAAsB,EACtB,oBAAoB,EACpB,cAAc,EACd,oCAAoC,CACrC,CAAC;YACF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;SACpB;IACH,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,kDAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;IAC1E,CAAC;IAGD,iDAAO,GAAP;QAAA,iBAcC;QAbC,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,SAAS,CACzD,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,KAAK,GAAuB,IAAI,CAAC,IAAI,CAAC;aAC5C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAGD,mDAAS,GAAT;QAAA,iBAkCC;QAhCC,IAAI,CAAC,SAAS,CAAC,gBAAgB,EAAE,CAAC;QAClC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE;gBACjB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CACnD,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;qBAC/D;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;iBAAM;gBACL,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAClD,UAAC,IAAI;oBACH,IAAI,IAAI,CAAC,SAAS,EAAE;wBAClB,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;wBACzC,KAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;qBAC/D;yBAAM;wBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;qBACxC;gBACH,CAAC,EACD,UAAC,KAAK;oBACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;gBAC1C,CAAC,CACF,CAAC;aACH;SACF;IACH,CAAC;IAED,uDAAa,GAAb;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,EAAE,EAAC,CAAC,IAAI,CAAC;YACT,IAAI,EAAC,CAAC,IAAI,CAAC;YACX,aAAa,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,YAAY,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,gBAAgB,EAAC,CAAC,IAAI,CAAC;YACvB,QAAQ,EAAC,CAAC,IAAI,CAAC;YACf,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,WAAW,EAAC,CAAC,IAAI,CAAC;YAClB,SAAS,EAAC,CAAC,IAAI,CAAC;YAChB,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,UAAU,EAAC,CAAC,IAAI,CAAC;YACjB,YAAY,EAAC,CAAC,IAAI,CAAC;YACnB,WAAW,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,SAAS,EAAC,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrC,aAAa,EAAC,CAAC,IAAI,CAAC;SACrB,CAAC,CAAC;IACL,CAAC;;gBAlHqB,kEAAY;gBACQ,kGAAoB;gBAC5B,iFAAY;gBAClB,sDAAM;gBAChB,8DAAc;gBACA,0DAAW;gBACV,gFAAW;gBACX,mGAAqB;gBACnB,mFAAa;;IApBnC,+BAA+B;QAL3C,+DAAS,CAAC;YACT,QAAQ,EAAE,8BAA8B;YACxC,oPAAwD;;SAEzD,CAAC;+EAaoB,kEAAY;YACQ,kGAAoB;YAC5B,iFAAY;YAClB,sDAAM;YAChB,8DAAc;YACA,0DAAW;YACV,gFAAW;YACX,mGAAqB;YACnB,mFAAa;OApBnC,+BAA+B,CAiI3C;IAAD,sCAAC;CAAA;AAjI2C;;;;;;;;;;;;ACjB5C,+DAA+D,uM;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0B;AAC5B;AACR;AACQ;AACoB;AACb;AACE;AACe;AACnB;AACoB;AAUtF;IAiDA,YAAY;IAEZ,2BAA2B;IAE3B,gCACU,gBAA8B,EACrB,qBAA2C,EAC3C,aAA2B,EAC5B,cAA6B,EAC5B,OAAkB,EAClB,YAAyB,EACzB,YAAmC;QAN5C,qBAAgB,GAAhB,gBAAgB,CAAc;QACrB,0BAAqB,GAArB,qBAAqB,CAAsB;QAC3C,kBAAa,GAAb,aAAa,CAAc;QAC5B,mBAAc,GAAd,cAAc,CAAe;QAC5B,YAAO,GAAP,OAAO,CAAW;QAClB,iBAAY,GAAZ,YAAY,CAAa;QACzB,iBAAY,GAAZ,YAAY,CAAuB;QAnDtD,qBAAgB,GAAa;YAC3B,OAAO;YACP,eAAe;YACf,cAAc;YACd,aAAa;YACb,WAAW;YACX,cAAc;YACd,UAAU;YACV,aAAa;YACb,oBAAoB;YACpB,QAAQ;SACT,CAAC;QACF,yBAAoB,GAAwB;YAC1C,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAClD,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;YAChD,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE;YAC9C,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;YAC1C,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;SACjD,CAAC;QAEF,kBAAa,GAAwB;YACnC,EAAE,KAAK,EAAE,eAAe,EAAE,IAAI,EAAE,gBAAgB,EAAE;YAClD,EAAE,KAAK,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE;YAChD,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE;YAC9C,EAAE,KAAK,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE;SAE3C,CAAC;QAEF,qBAAgB,GAAa,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAK3D,2CAAsC,GAAoB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAC7F,oCAAoC,EACpC,wCAAwC,EACxC,EAAE,EACF,2CAA2C,CAC5C,CAAC;QAeA,IAAI,CAAC,sCAAsC,CAAC,aAAa;YACvD,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CACjC,sBAAsB,EACtB,KAAK,EACL,KAAK,EACL,wCAAwC,CACzC;YACH,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;QAChE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;IACrC,CAAC;IAED,YAAY;IAEZ,sBAAsB;IAEtB,yCAAQ,GAAR;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,oBAAoB,EAAE,CAAC,aAAa,CAAC;IAE1E,CAAC;IAGD,yCAAQ,GAAR,UAAS,KAAK;QACZ,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,UAAU;YACxB,KAAK,CAAC,SAAS,KAAK,0EAAU,CAAC,aAAa;gBAC1C,CAAC,CAAC,0EAAU,CAAC,UAAU;gBACvB,CAAC,CAAC,0EAAU,CAAC,UAAU,CAAC;QAC5B,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,iDAAgB,GAAhB,UAAiB,KAAK;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,UAAU,GAAG,IAAI,CAAC;QAClC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,wCAAO,GAAP;QAAA,iBAwBC;QAtBC,IAAI,CAAC,UAAU,CAAC,QAAQ,GAAC,GAAG,CAAC;QAC7B,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAC3D,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAElB,KAAI,CAAC,SAAS,GAAyB,CACrC,IAAI,CAAC,IAAI,CAAC,IAAI,CACf,CAAC;gBACF,KAAI,CAAC,UAAU,GAAG,IAAI,oEAAkB,CACtC,KAAI,CAAC,SAAS,CACf,CAAC;gBACF,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;gBAC3C,IAAI,CAAC,KAAI,CAAC,UAAU,CAAC,UAAU,EAAE;oBAC/B,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;oBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;iBAClC;aACF;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,8CAAa,GAAb,UAAc,EAAE;QAAhB,iBAeC;QAdC,IAAI,CAAC,qBAAqB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,SAAS,CACzD,UAAC,IAAI;YACH,IAAI,IAAI,CAAC,SAAS,EAAE;gBAClB,KAAI,CAAC,OAAO,EAAE,CAAC;gBACf,KAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aAC1C;iBAAM;gBACL,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACxC;QACH,CAAC,EACD,UAAC,KAAK;YACJ,KAAI,CAAC,aAAa,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CACF,CAAC;IACJ,CAAC;IAED,gDAAe,GAAf,UAAgB,KAAK;QAEnB,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,KAAK,CAAC;QAC/B,IAAI,CAAC,UAAU,CAAC,kBAAkB,GAAC,EAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAC,wBAAwB,EAAE,IAAI,CAAC,sBAAsB,EAAE;QACjI,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,sCAAK,GAAL;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,6EAAU,EAAE,CAAC;QACnC,IAAI,CAAC,cAAc,GAAC,EAAE,CAAC;QACvB,IAAI,CAAC,sBAAsB,GAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;;gBAtG2B,kEAAY;gBACE,kGAAoB;gBAC5B,iFAAY;gBACZ,mFAAa;gBACnB,2DAAS;gBACJ,+EAAW;gBACX,oGAAqB;;IAtBX;QAA1C,+DAAS,CAAC,8DAAY,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAY,8DAAY;6DAAC;IAC7B;QAArC,+DAAS,CAAC,yDAAO,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;wEAAO,yDAAO;wDAAC;IAvCvC,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,uMAA8C;;SAE/C,CAAC;+EAuD0B,kEAAY;YACE,kGAAoB;YAC5B,iFAAY;YACZ,mFAAa;YACnB,2DAAS;YACJ,+EAAW;YACX,oGAAqB;OA5DzC,sBAAsB,CA8JlC;IAAD,6BAAC;CAAA;AA9JkC","file":"content-department-website-department-website-module.js","sourcesContent":["module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Name English\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Name English\\\" [(ngModel)]=\\\"model.NameEnglish\\\"\\r\\n          formControlName=\\\"NameEnglish\\\" >\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('NameEnglish').hasError('required') && (formGroup.get('NameEnglish').touched && formGroup.get('NameEnglish').invalid)\\\">\\r\\n      Name English is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Name Hindi\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Name Hindi\\\" [(ngModel)]=\\\"model.NameHindi\\\"\\r\\n          formControlName=\\\"NameHindi\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Order\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Order\\\" [(ngModel)]=\\\"model.DisplayOrder\\\"\\r\\n          formControlName=\\\"DisplayOrder\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Remarks\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Remarks\\\" [(ngModel)]=\\\"model.Remarks\\\"\\r\\n          formControlName=\\\"Remarks\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Url\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Url\\\" [(ngModel)]=\\\"model.Url\\\"\\r\\n          formControlName=\\\"Url\\\" >\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('Url').hasError('required') && (formGroup.get('Url').touched && formGroup.get('Url').invalid)\\\">\\r\\n      Url is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Sample Url\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Sample URl\\\" [(ngModel)]=\\\"model.SampleURl\\\"\\r\\n          formControlName=\\\"SampleURl\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label>Attachment</label>\\r\\n        <input type=\\\"file\\\" id=\\\"AttachmentURl\\\" formControlName=\\\"AttachmentURl\\\" (change)=\\\"handleFileInput($event)\\\" accept=\\\"image/*\\\">\\r\\n\\r\\n      </div>\\r\\n      <ul class=\\\"image-list\\\">\\r\\n        <li *ngIf=\\\"model!=undefined && model.AttachmentURl!=undefined && model.AttachmentURl.length>0\\\">\\r\\n\\r\\n          <div> <img [src]=\\\"model.AttachmentURl\\\" /> <a title=\\\"Remove\\\" (click)=\\\"RemoveImageFile()\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </a></div>\\r\\n\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n      <!-- <mat-error *ngIf=\\\"ImagefileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">\\r\\n        {{ImagefileValidationMsg}}\\r\\n      </mat-error> -->\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n    <ng-container matColumnDef=\\\"index\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n        {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n        {{ column.Text }}\\r\\n      </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"AttachmentURl\\\" style=\\\"width: 10%;\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Image</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <ul class=\\\"image-list\\\">\\r\\n          <li>\\r\\n            <div class=\\\"image-list\\\" *ngIf=\\\"element.AttachmentURl\\\"> <img [src]=\\\"element.AttachmentURl\\\" height=\\\"100px\\\" width=\\\"100px\\\"/></div>\\r\\n          </li>\\r\\n        </ul>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Status\\\">\\r\\n\\r\\n      <th mat-header-cell *matHeaderCellDef>Active Status</th>\\r\\n      <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"toogle-btn\\\">\\r\\n        <div>\\r\\n          <ng-container>\\r\\n            <div  *ngIf=\\\"group.IsLock \\\" title=\\\"This is Locked record\\\">\\r\\n              <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n              <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n            </div>\\r\\n            <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"!group.IsLock \\\" (click)=\\\"statusClick(group.Id)\\\" title=\\\"This is Saved record\\\">\\r\\n                <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n              </a>\\r\\n\\r\\n           </ng-container>\\r\\n\\r\\n        </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n          <a *ngIf=\\\"this.MenuClassificationPermission.UpdatePageAccess && !element.IsLock \\\" routerLink=\\\"/department-website/classification-Pagetype/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n        class=\\\"btn_edit\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n\\r\\n\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n  <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n    [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons style=\\\"display: none;\\\"> </mat-paginator>\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Menu Classifiaction<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n          <mat-select formControlName=\\\"MenuClassificationCode\\\" #MenuClassificationCode [(ngModel)]=\\\"model.MenuClassificationCode\\\">\\r\\n              <mat-option>--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlClassification\\\">{{ k.Text }}\\r\\n              </mat-option>\\r\\n          </mat-select>\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label> Department<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n            <mat-select  name=\\\"DepartmentCode\\\" id=\\\"DepartmentCode\\\"   [(ngModel)]=\\\"model.DepartmentCode\\\" formControlName=\\\"DepartmentCode\\\" >\\r\\n              <mat-option>--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{ k.DepartmentTitle }}</mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          <mat-error  *ngIf=\\\"formGroup.get('DepartmentCode').hasError('required') && (formGroup.get('DepartmentCode').touched && formGroup.get('DepartmentCode').invalid)\\\">\\r\\n            Department is <strong>required!</strong>\\r\\n        </mat-error>\\r\\n</div>\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Name English\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Name English\\\" [(ngModel)]=\\\"model.DisplayNameEnglish\\\"\\r\\n          formControlName=\\\"DisplayNameEnglish\\\" >\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('DisplayNameEnglish').hasError('required') && (formGroup.get('DisplayNameEnglish').touched && formGroup.get('DisplayNameEnglish').invalid)\\\">\\r\\n      Display Name English is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Name Hindi\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Name Hindi\\\" [(ngModel)]=\\\"model.DisplayNameHindi\\\"\\r\\n          formControlName=\\\"DisplayNameHindi\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Order\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Order\\\" [(ngModel)]=\\\"model.DisplayOrder\\\"\\r\\n          formControlName=\\\"DisplayOrder\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"col l4 m6 s12 \\\">\\r\\n        <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Is Sub Menu </mat-label>\\r\\n          <mat-checkbox  Id=\\\"IsSubMenu\\\" #IsSubMenu [(ngModel)]=\\\"model.IsSubMenu\\\"  formControlName=\\\"IsSubMenu\\\" >Is Sub Menu</mat-checkbox>\\r\\n        </section>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l4 m6 s12\\\">\\r\\n        <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Is External URL </mat-label>\\r\\n          <mat-checkbox  Id=\\\"IsExternalUrl\\\" #IsExternalUrl [(ngModel)]=\\\"model.IsExternalUrl\\\"  formControlName=\\\"IsExternalUrl\\\" >Is External URL</mat-checkbox>\\r\\n        </section>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l4 m6 s12\\\" *ngIf=\\\"model.IsExternalUrl\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>External URL\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"External URL\\\" [(ngModel)]=\\\"model.ExternalUrl\\\"\\r\\n            formControlName=\\\"ExternalUrl\\\" >\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Internal URL\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Internal URL\\\" [(ngModel)]=\\\"model.InternalUrl\\\"\\r\\n            formControlName=\\\"InternalUrl\\\" >\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label> Icon Image</label>\\r\\n        <input type=\\\"file\\\" id=\\\"IconImage\\\" formControlName=\\\"IconImage\\\" (change)=\\\"handleImageFileInput($event)\\\"\\r\\n          accept=\\\"image/*\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"model?.IconImage\\\"> <img [src]=\\\"model.IconImage\\\" style=\\\"width: 100px; height: 100px;\\\" /> <a\\r\\n          title=\\\"Remove\\\" (click)=\\\"RemoveImageFile()\\\" *ngIf=\\\"model?.IconImage\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </a></div>\\r\\n      <mat-error *ngIf=\\\"ImagefileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">\\r\\n        {{ImagefileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\\r\\n  <div class=\\\"col l12 s12\\\">\\r\\n\\r\\n    <div class=\\\"row m-20 mb-0 scheme-sear-bg-1 no-margin\\\">\\r\\n      <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>From Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"Date\\\" [(ngModel)]=\\\"indexModel.FromDate\\\" [max]=\\\"indexModel.ToDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Date\\\" [(ngModel)]=\\\"indexModel.ToDate\\\" [min]=\\\"indexModel.FromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Department</mat-label>\\r\\n                    <mat-select  [(ngModel)]=\\\"indexModel.DepartmentCode\\\">\\r\\n                        <mat-option value=\\\"\\\">--Select Department--</mat-option>\\r\\n                        <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\" title={{k.DepartmentTitle}} >\\r\\n                            {{ k.DepartmentTitle }}</mat-option>\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                  <mat-label> Menu Classification </mat-label>\\r\\n                              <mat-select  [(ngModel)]=\\\"indexModel.MenuClassificationCode\\\">\\r\\n                                  <mat-option value=\\\"\\\">--Select Menu Classification--</mat-option>\\r\\n                                  <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlClassification\\\">{{ k.Text }}</mat-option>\\r\\n                              </mat-select>\\r\\n                          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col l3 xl3 m4 s12\\\">\\r\\n          <mat-label class=\\\"mr-5\\\">Get Active De-Active Data</mat-label>\\r\\n          <br />\\r\\n          <mat-radio-group class=\\\"radio_grp\\\" aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"indexModel.Status\\\">\\r\\n            <mat-radio-button [value]=\\\"1\\\" (change)=\\\"getActiveDeActiveData(1)\\\" [checked]=\\\"indexModel.Status==1\\\">Active\\r\\n            </mat-radio-button>\\r\\n            <mat-radio-button [value]=\\\"0\\\" (change)=\\\"getActiveDeActiveData(0)\\\">De-Active</mat-radio-button>\\r\\n            <mat-radio-button [value]=\\\"-1\\\" (change)=\\\"getActiveDeActiveData(-1)\\\">Both</mat-radio-button>\\r\\n          </mat-radio-group>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col l4 m6 s12\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label> Modified By</mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"indexModel.CreatedBy\\\">\\r\\n              <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlCreatedByDepartmentMenu\\\">\\r\\n                {{item.Text}} </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n              <!-- <div class=\\\"col l1 xl1 m6 s12\\\" >\\r\\n                  <button (click)=\\\"Reset();\\\" class=\\\"btn btn_orange w-100\\\" style=\\\"line-height: 0.5;\\\"><mat-icon>refresh</mat-icon></button>\\r\\n              </div> -->\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" (clear)=\\\"Reset()\\\"></app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n    <ng-container matColumnDef=\\\"index\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n        {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n        {{ column.Text }}\\r\\n      </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n        <a *ngIf=\\\"this.DepartmentMenuClassificationPermission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n        <a *ngIf=\\\"!this.DepartmentMenuClassificationPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Created By/ <br /> Created Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{element.CreatedByName}} / <br>\\r\\n        {{ element.CreatedDate !=null ? (element.CreatedDate | date: 'dd/MM/yyy , h:mm:ss a') :'--'}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"ModifiedByName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Modified By(Modified Date) </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n        {{element.ModifiedByName}} ({{(element.ModifiedDate | date: 'dd/MM/yyy , h:mm:ss a')}})\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n          <a *ngIf=\\\"this.DepartmentMenuClassificationPermission.UpdatePageAccess && !element.IsLock \\\" routerLink=\\\"/department-website/department-menu-Classification/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n        class=\\\"btn_edit\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n\\r\\n\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n    <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n    [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons style=\\\"display: none;\\\">\\r\\n  </mat-paginator>\\r\\n\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label> Department<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n              <mat-select  name=\\\"DepartmentCode\\\" id=\\\"DepartmentCode\\\"   [(ngModel)]=\\\"model.DepartmentCode\\\" formControlName=\\\"DepartmentCode\\\" >\\r\\n                <mat-option>--Select--</mat-option>\\r\\n                <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{ k.DepartmentTitle }}</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <mat-error  *ngIf=\\\"formGroup.get('DepartmentCode').hasError('required') && (formGroup.get('DepartmentCode').touched && formGroup.get('DepartmentCode').invalid)\\\">\\r\\n              Department is <strong>required!</strong>\\r\\n          </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\" >\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Section Master<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n          <mat-select formControlName=\\\"SectionMasterCode\\\" #SectionMasterCode [(ngModel)]=\\\"model.SectionMasterCode\\\">\\r\\n              <mat-option>--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartmentSectionMaster\\\">{{ k.Text }}\\r\\n              </mat-option>\\r\\n          </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error  *ngIf=\\\"formGroup.get('SectionMasterCode').hasError('required') && (formGroup.get('SectionMasterCode').touched && formGroup.get('SectionMasterCode').invalid)\\\">\\r\\n        Section Master is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Display Name English\\r\\n      </mat-label>\\r\\n      <input matInput placeholder=\\\"Display Name English\\\" [(ngModel)]=\\\"model.NameEnglish\\\"\\r\\n        formControlName=\\\"NameEnglish\\\" >\\r\\n    </mat-form-field>\\r\\n    <mat-error\\r\\n    *ngIf=\\\"formGroup.get('NameEnglish').hasError('required') && (formGroup.get('NameEnglish').touched && formGroup.get('NameEnglish').invalid)\\\">\\r\\n    Display Name English is <strong>required!</strong>\\r\\n  </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Display Name Hindi\\r\\n      </mat-label>\\r\\n      <input matInput placeholder=\\\"Display Name Hindi\\\" [(ngModel)]=\\\"model.NameHindi\\\"\\r\\n        formControlName=\\\"NameHindi\\\" >\\r\\n    </mat-form-field>\\r\\n    <mat-error\\r\\n    *ngIf=\\\"formGroup.get('NameHindi').hasError('required') && (formGroup.get('NameHindi').touched && formGroup.get('NameHindi').invalid)\\\">\\r\\n    Display Name Hindi is <strong>required!</strong>\\r\\n  </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Display Order\\r\\n      </mat-label>\\r\\n      <input matInput placeholder=\\\"Display Order\\\" [(ngModel)]=\\\"model.DisplayOrder\\\"\\r\\n        formControlName=\\\"DisplayOrder\\\" >\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label> Icon Image</label>\\r\\n        <input type=\\\"file\\\" id=\\\"IconImage\\\" formControlName=\\\"IconImage\\\" (change)=\\\"handleImageFileInput($event,false)\\\"\\r\\n          accept=\\\"image/*\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"model?.IconImage\\\"> <img [src]=\\\"model.IconImage\\\" style=\\\"width: 100px; height: 100px;\\\" /> <a\\r\\n          title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(false)\\\" *ngIf=\\\"model?.IconImage\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </a></div>\\r\\n      <mat-error *ngIf=\\\"BGImagefileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">\\r\\n        {{BGImagefileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label> BackGround Image</label>\\r\\n        <input type=\\\"file\\\" id=\\\"BackGroundImage\\\" formControlName=\\\"BackGroundImage\\\" (change)=\\\"handleImageFileInput($event,true)\\\"\\r\\n          accept=\\\"image/*\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"model?.BackGroundImage\\\"> <img [src]=\\\"model.BackGroundImage\\\" style=\\\"width: 100px; height: 100px;\\\" /> <a\\r\\n          title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(true)\\\" *ngIf=\\\"model?.BackGroundImage\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </a></div>\\r\\n      <mat-error *ngIf=\\\"BGImagefileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">\\r\\n        {{BGImagefileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Base Url\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Base Url\\\" [(ngModel)]=\\\"model.BaseUrl\\\"\\r\\n          formControlName=\\\"BaseUrl\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n   <div class=\\\"col l12 xl12 m12 s12\\\">\\r\\n     <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n         <mat-label>Background Color\\r\\n         </mat-label>\\r\\n         <input matInput placeholder=\\\"Background Color\\\" [(ngModel)]=\\\"model.BackGroungColor\\\"\\r\\n             formControlName=\\\"BackGroungColor\\\" name=\\\"BackGroungColor\\\">\\r\\n     </mat-form-field>\\r\\n   </div>\\r\\n\\r\\n  <div class=\\\"col l12 xl12 m12 s12\\\">\\r\\n    <div class=\\\"opened\\\">\\r\\n          <div class=\\\"colors\\\">\\r\\n              <a href=\\\"JavaScript:Void(0);\\\" (click)=\\\"setColor(paint)\\\" *ngFor=\\\"let paint of defaultColors\\\">\\r\\n                  <div class=\\\"circle\\\" [ngStyle]=\\\"{'background': paint}\\\"></div>\\r\\n              </a>\\r\\n          </div>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<div class=\\\"col l12 s12\\\">\\r\\n  <div class=\\\"scheme-sear-bg-1\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Modified From Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"Date\\\"\\r\\n            [(ngModel)]=\\\"indexModel.ModifiedFromDate\\\" [max]=\\\"indexModel.ModifiedToDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Modified To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Date\\\"\\r\\n            [(ngModel)]=\\\"indexModel.ModifiedToDate\\\" [min]=\\\"indexModel.ModifiedFromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Department</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.DepartmentCode\\\">\\r\\n            <mat-option value=\\\"\\\">--Select Department--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\" title={{k.DepartmentTitle}}>\\r\\n              {{ k.DepartmentTitle }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Modified By</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.ModifiedBy\\\">\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlModifiedByUserForDepartmentSectionMapping\\\">\\r\\n              {{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l4 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Section Master</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.SectionMasterCode\\\">\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartmentSectionMaster\\\">{{ k.Text }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l4 xl4 m4 s12\\\">\\r\\n        <mat-label class=\\\"mr-5\\\">Get Active De-Active Data</mat-label>\\r\\n        <br />\\r\\n        <mat-radio-group class=\\\"radio_grp\\\" aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"indexModel.Status\\\">\\r\\n          <mat-radio-button [value]=\\\"1\\\" (change)=\\\"getActiveDeActiveData(1)\\\" [checked]=\\\"indexModel.Status==1\\\">Active\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"0\\\" (change)=\\\"getActiveDeActiveData(0)\\\">De-Active</mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"-1\\\" (change)=\\\"getActiveDeActiveData(-1)\\\">Both</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" (clear)=\\\"Reset()\\\" ></app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n    <ng-container matColumnDef=\\\"index\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n        {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n        {{ column.Text }}\\r\\n      </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n        <a *ngIf=\\\"this.DepartmentSectionMappingPermission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\"\\r\\n          title=\\\"Update Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n        <a *ngIf=\\\"!this.DepartmentSectionMappingPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Created By/ <br /> Created Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{element.CreatedByName}} / <br>\\r\\n        {{ element.CreatedDate !=null ? (element.CreatedDate | date: 'dd/MM/yyy , h:mm:ss a') :'--'}}</td>\\r\\n    </ng-container> -->\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"ModifiedByName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Modified By(Modified Date) </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n        {{element.ModifiedByName}} ({{(element.ModifiedDate | date: 'dd/MM/yyy , h:mm:ss a')}})\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n          <a *ngIf=\\\"this.DepartmentSectionMappingPermission.UpdatePageAccess && !element.IsLock \\\" routerLink=\\\"/department-website/department-section-mapping/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n        class=\\\"btn_edit\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n  <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n    [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons style=\\\"display: none;\\\"> </mat-paginator>\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Department<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"DepartmentCode\\\" id=\\\"DepartmentCode\\\" [(ngModel)]=\\\"model.DepartmentCode\\\"\\r\\n          formControlName=\\\"DepartmentCode\\\"\\r\\n          (selectionChange)=\\\"GetDepartmentMainMenuByDepartment($event.value);GetDeptSubMenuList();\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{ k.DepartmentTitle }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"formGroup.get('DepartmentCode').hasError('required') && (formGroup.get('DepartmentCode').touched && formGroup.get('DepartmentCode').invalid)\\\">\\r\\n        Department is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Department Main Menu<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select formControlName=\\\"DepartmentMainMenuCode\\\" #DepartmentMainMenuCode\\r\\n          [(ngModel)]=\\\"model.DepartmentMainMenuCode\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlmainmenulist\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Module Name<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select formControlName=\\\"ModuleName\\\" #ModuleName [(ngModel)]=\\\"model.ModuleName\\\"\\r\\n          (selectionChange)=\\\"GetModuleCategoryByModule($event.value)\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlModuleCategoryList\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Module Category </mat-label>\\r\\n        <mat-select formControlName=\\\"ModuleCategoryCode\\\" #ModuleCategoryCode [(ngModel)]=\\\"model.ModuleCategoryCode\\\"\\r\\n          (selectionChange)=\\\"GetModuleSubCategoryByModule(model.ModuleName,$event.value)\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlModuleCategory\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\" *ngIf=\\\"ddlModuleSubCategory?.length>0\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Module Sub Category </mat-label>\\r\\n        <mat-select formControlName=\\\"ModuleSubCategoryCode\\\" #ModuleSubCategoryCode\\r\\n          [(ngModel)]=\\\"model.ModuleSubCategoryCode\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlModuleSubCategory\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Name English\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Name English\\\" [(ngModel)]=\\\"model.DisplayNameEnglish\\\"\\r\\n          formControlName=\\\"DisplayNameEnglish\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"formGroup.get('DisplayNameEnglish').hasError('required') && (formGroup.get('DisplayNameEnglish').touched && formGroup.get('DisplayNameEnglish').invalid)\\\">\\r\\n        Display Name English is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Name Hindi\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Name Hindi\\\" [(ngModel)]=\\\"model.DisplayNameHindi\\\"\\r\\n          formControlName=\\\"DisplayNameHindi\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Order\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Order\\\" [(ngModel)]=\\\"model.DisplayOrder\\\" formControlName=\\\"DisplayOrder\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 m6 s12 \\\">\\r\\n      <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Is Sub Menu </mat-label>\\r\\n        <mat-checkbox Id=\\\"IsSubMenu\\\" #IsSubMenu [(ngModel)]=\\\"model.IsSubMenu\\\" formControlName=\\\"IsSubMenu\\\">Is Sub Menu\\r\\n        </mat-checkbox>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 mt-10\\\" *ngIf=\\\"model.IsSubMenu\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Department Sub Menu<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select formControlName=\\\"DepartmentSubMenuCode\\\" #DepartmentSubMenuCode\\r\\n          [(ngModel)]=\\\"model.DepartmentSubMenuCode\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartmentSubMenuList\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label> Icon Image</label>\\r\\n        <input type=\\\"file\\\" id=\\\"IconImage\\\" formControlName=\\\"IconImage\\\" (change)=\\\"handleImageFileInput($event)\\\"\\r\\n          accept=\\\"image/*\\\">\\r\\n      </div>\\r\\n      <div *ngIf=\\\"model?.IconImage\\\"> <img [src]=\\\"model.IconImage\\\" style=\\\"width: 100px; height: 100px;\\\" /> <a\\r\\n          title=\\\"Remove\\\" (click)=\\\"RemoveImageFile()\\\" *ngIf=\\\"model?.IconImage\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </a></div>\\r\\n      <mat-error *ngIf=\\\"ImagefileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">\\r\\n        {{ImagefileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-radio-group class=\\\" mb-10 example-full-width radio-bx-custom radio-bx-custom-with-label\\\" appearance=\\\"outline\\\"\\r\\n        aria-label=\\\"Select an option\\\" formControlName=\\\"SubMenuShowAsSeparateCode\\\" #SubMenuShowAsSeparateCode\\r\\n        [(ngModel)]=\\\"model.SubMenuShowAsSeparateCode\\\">\\r\\n        <label class=\\\"mr-10 custom-label-box\\\">Sub-Menu Type</label>\\r\\n        <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\"\\r\\n          *ngFor=\\\"let item of dDLList?.RadioDepartmentSubMenuShowAsSeparate;\\\">\\r\\n          {{item.Text}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-radio-group class=\\\" mb-10 example-full-width radio-bx-custom radio-bx-custom-with-label\\\" appearance=\\\"outline\\\"\\r\\n        aria-label=\\\"Select an option\\\" formControlName=\\\"RedirectionManagementRadio\\\" #RedirectionManagementRadio\\r\\n        [(ngModel)]=\\\"model.RedirectionManagementRadio\\\">\\r\\n        <label class=\\\"mr-10 custom-label-box\\\">Content Type</label>\\r\\n        <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\"\\r\\n          *ngFor=\\\"let item of dDLList?.RadioDepartmentSubMenuRedirectionManagement;\\\">\\r\\n          {{item.Text}}\\r\\n        </mat-radio-button>\\r\\n      </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>URL\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"URL\\\" [(ngModel)]=\\\"model.RedirectionURL\\\" formControlName=\\\"RedirectionURL\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label>Add Pdf File </label>\\r\\n        <input type=\\\"file\\\" id=\\\"PDFAttachment\\\" (change)=\\\"handleFileInput($event)\\\" accept=\\\"application/pdf\\\">\\r\\n      </div>\\r\\n      <ul>\\r\\n        <li> <a href=\\\"{{model.PDFAttachment}}\\\" (click)=\\\"downloadMyFile(model.PDFAttachment)\\\"\\r\\n            *ngIf=\\\"model.PDFAttachment\\\"> Click here for pdf </a>\\r\\n          <a title=\\\"Remove\\\" (click)=\\\"Removepdf();\\\">\\r\\n            <mat-icon *ngIf=\\\"model?.PDFAttachment?.length>0\\\">delete</mat-icon>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <mat-error *ngIf=\\\"ImagefileValidationMsg?.length>0\\\">{{ImagefileValidationMsg}}</mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"","module.exports = \"<div class=\\\"col l12 s12\\\">\\r\\n  <div class=\\\"row m-20 mb-0 scheme-sear-bg-1 no-margin\\\">\\r\\n    <div class=\\\"row m-20 mb-0\\\">\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Modified From Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"Date\\\"\\r\\n            [(ngModel)]=\\\"indexModel.ModifiedFromDate\\\" [max]=\\\"indexModel.ModifiedToDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Modified To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Date\\\"\\r\\n            [(ngModel)]=\\\"indexModel.ModifiedToDate\\\" [min]=\\\"indexModel.ModifiedFromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Department</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.DepartmentCode\\\"\\r\\n            (selectionChange)=\\\"GetDepartmentMainMenuByDepartment($event.value)\\\">\\r\\n            <mat-option value=\\\"\\\">--Select Department--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\" title={{k.DepartmentTitle}}>\\r\\n              {{ k.DepartmentTitle }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Department Main Menu </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.MainMenuCode\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlmainmenulist\\\">{{ k.Text }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Module Name </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.ModuleName\\\" (selectionChange)=\\\"GetModuleCategoryByModule($event.value)\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlModuleCategoryList\\\">{{ k.Text }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Module Category </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.ModuleCategoryCode\\\"\\r\\n            (selectionChange)=\\\"GetModuleSubCategoryByModule(indexModel.ModuleName,$event.value)\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlModuleCategory\\\">{{ k.Text }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\" *ngIf=\\\"ddlModuleSubCategory?.length>0\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Module Sub Category </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.ModuleSubCategoryCode\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlModuleSubCategory\\\">{{ k.Text }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Modified By</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.ModifiedBy\\\">\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlModifiedByUserForDepartmentSubMenu\\\">\\r\\n              {{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Department Sub Menu </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.DepartmentSubMenuCode\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartmentSubMenuList\\\">{{ k.Text }}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Sub Menu Type </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.SubMenuShowAsSeparateCode\\\">\\r\\n            <mat-option value=\\\"0\\\">All</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.RadioDepartmentSubMenuShowAsSeparate\\\">\\r\\n              {{k.Text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Content Type </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"indexModel.RedirectionManagementRadio\\\">\\r\\n            <mat-option value=\\\"0\\\">All</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.RadioDepartmentSubMenuRedirectionManagement\\\">\\r\\n              {{k.Text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-label class=\\\"mr-5\\\">Get Active De-Active Data</mat-label>\\r\\n        <br />\\r\\n        <mat-radio-group class=\\\"radio_grp\\\" aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"indexModel.Status\\\">\\r\\n          <mat-radio-button [value]=\\\"1\\\" (change)=\\\"getActiveDeActiveData(1)\\\" [checked]=\\\"indexModel.Status==1\\\">Active\\r\\n          </mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"0\\\" (change)=\\\"getActiveDeActiveData(0)\\\">De-Active</mat-radio-button>\\r\\n          <mat-radio-button [value]=\\\"-1\\\" (change)=\\\"getActiveDeActiveData(-1)\\\">Both</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-global-list-search [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" (clear)=\\\"Reset()\\\">\\r\\n</app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 s12 p-0\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\"\\r\\n        style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n            {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Department\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <table class=\\\"table-in-data-head\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>Department</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Main Menu</td>\\r\\n                  <!-- <td>Department Main Menu</td> -->\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <table class=\\\"table-in-data\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td title={{element.DepartmentTitle}}>{{element.DepartmentTitle}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td title={{element.DepartmentMainMenuName}}>{{ element.DepartmentMainMenuName }} </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        \\r\\n        <ng-container matColumnDef=\\\"Type\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <table class=\\\"table-in-data-head\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>Sub-Menu Type</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Content Type</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <table class=\\\"table-in-data\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td title={{element.SubMenuShowAsSeparateName}}>{{element.SubMenuShowAsSeparateName}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td title={{element.RedirectionManagementRadioName}}>{{ element.RedirectionManagementRadioName }}\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Module\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <table class=\\\"table-in-data-head\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>Module Name</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Module Category</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <table class=\\\"table-in-data\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td title={{element.ModuleNameEnglish}}>{{element.ModuleNameEnglish}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td title={{element.ModuleCategoryNameEnglish}}>{{ element.ModuleCategoryNameEnglish }} </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DisplayNameEnglish\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <table class=\\\"table-in-data-head\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>Display Name English</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>Display Name Hindi</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <table class=\\\"table-in-data\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td title={{element.DisplayNameEnglish}}>{{element.DisplayNameEnglish}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td title={{element.DisplayNameHindi}}>{{ element.DisplayNameHindi }} </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DisplayOrder\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>\\r\\n            <table class=\\\"table-in-data-head\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>Display Order</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td> Is Sub Menu</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td> Sub Menu Name</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n            <table class=\\\"table-in-data\\\">\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{element.DisplayOrder}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>{{element.IsSubMenu?'Yes':'No'}}</td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td title={{element.DepartmentSubSubMenuName}}>{{ element.DepartmentSubSubMenuName }} </td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n            {{ column.Text }}\\r\\n          </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n            <a *ngIf=\\\"this.DepartmentSubMenuClassificationPermission.UpdatePageAccess\\\"\\r\\n              (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n              <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n              <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n            </a>\\r\\n            <a *ngIf=\\\"!this.DepartmentSubMenuClassificationPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n              <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n              <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n            </a>\\r\\n          </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Created By/<br>Created Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{element.CreatedByName}} /<br>\\r\\n            {{ element.CreatedDate !=null ? (element.CreatedDate | date: 'dd/MM/yyy, h:mm:ss a') :'--'}}</td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ModifiedBy\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Modified By/<br>Modified Date</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n            {{element.ModifiedByName}} {{(element.ModifiedDate | date: 'dd/MM/yyy, h:mm:ss a')}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Active Status/<br>Action</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n            <div class=\\\"d-flex\\\">\\r\\n            <div class=\\\"action-link toogle-btn\\\">\\r\\n              <a *ngIf=\\\"this.DepartmentSubMenuClassificationPermission.UpdatePageAccess\\\"\\r\\n                (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n                <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n              </a>\\r\\n              <a *ngIf=\\\"!this.DepartmentSubMenuClassificationPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n                <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n              </a>\\r\\n            </div>\\r\\n\\r\\n            <a *ngIf=\\\"this.DepartmentSubMenuClassificationPermission.UpdatePageAccess && !element.IsLock \\\"\\r\\n              routerLink=\\\"/department-website/department-submenu-Classification/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n              class=\\\"btn_edit\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </a>\\r\\n          </div>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n    <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n      [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons\\r\\n      style=\\\"display: none;\\\">\\r\\n    </mat-paginator>\\r\\n  </div>\\r\\n</div>\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l4 m6 s12 \\\">\\r\\n      <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Is Section Import </mat-label>\\r\\n        <mat-checkbox Id=\\\"IsSectionImport\\\" #IsSectionImport [(ngModel)]=\\\"model.IsSectionImport\\\" formControlName=\\\"IsSectionImport\\\" disabled=\\\"true\\\">Is Section Import\\r\\n        </mat-checkbox>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 m6 s12 \\\">\\r\\n      <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Is Menu Import </mat-label>\\r\\n        <mat-checkbox Id=\\\"IsMenuImport\\\" #IsMenuImport [(ngModel)]=\\\"model.IsMenuImport\\\" formControlName=\\\"IsMenuImport\\\" disabled=\\\"true\\\">Is Menu Import\\r\\n        </mat-checkbox>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 m6 s12 \\\">\\r\\n      <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Is Sub Menu Import </mat-label>\\r\\n        <mat-checkbox Id=\\\"IsSubMenuImport\\\" #IsSubMenuImport [(ngModel)]=\\\"model.IsSubMenuImport\\\" formControlName=\\\"IsSubMenuImport\\\" disabled=\\\"true\\\">Is Sub Menu Import\\r\\n        </mat-checkbox>\\r\\n      </section>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>From Department<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"FromDepartmentCode\\\" id=\\\"FromDepartmentCode\\\" [(ngModel)]=\\\"model.FromDepartmentCode\\\"\\r\\n          formControlName=\\\"FromDepartmentCode\\\">\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartment\\\">{{ k.Text }}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"formGroup.get('FromDepartmentCode').hasError('required') && (formGroup.get('FromDepartmentCode').touched && formGroup.get('FromDepartmentCode').invalid)\\\">\\r\\n        From Department is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col s12\\\">\\r\\n      <mat-label class=\\\"cc-ref\\\"> To  Department\\r\\n      </mat-label>\\r\\n      <mat-selection-list formControlName=\\\"ToDepartmentList\\\" [(ngModel)]=\\\"model.ToDepartmentList\\\" class=\\\"checkdata\\\">\\r\\n        <mat-list-option [value]=\\\"k.Value\\\" *ngFor=\\\"let k of dDLList?.ddlDepartment\\\">\\r\\n          {{ k.Text }}\\r\\n          </mat-list-option>\\r\\n\\r\\n      </mat-selection-list>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('ToDepartmentList').hasError('required') && (formGroup.get('ToDepartmentList').touched && formGroup.get('ToDepartmentList').invalid)\\\">\\r\\n    To  Department is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">Save</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Name English\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Name English\\\" [(ngModel)]=\\\"model.NameEnglish\\\"\\r\\n          formControlName=\\\"NameEnglish\\\" >\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('NameEnglish').hasError('required') && (formGroup.get('NameEnglish').touched && formGroup.get('NameEnglish').invalid)\\\">\\r\\n      Name English is <strong>required!</strong>\\r\\n    </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Name Hindi\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Name Hindi\\\" [(ngModel)]=\\\"model.NameHindi\\\"\\r\\n          formControlName=\\\"NameHindi\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Display Order\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Display Order\\\" [(ngModel)]=\\\"model.DisplayOrder\\\"\\r\\n          formControlName=\\\"DisplayOrder\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Remarks\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Remarks\\\" [(ngModel)]=\\\"model.Remarks\\\"\\r\\n          formControlName=\\\"Remarks\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n        <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n          <!-- <mat-radio-group class=\\\" mb-10 example-full-width radio-bx-custom radio-bx-custom-with-label\\\" appearance=\\\"outline\\\" aria-label=\\\"Select an option\\\" formControlName=\\\"MenuTypeMappingList\\\"  [(ngModel)]=\\\"model.MenuTypeMappingList\\\">\\r\\n              <mat-label class=\\\"mr-5\\\">Is Menu Type</mat-label>\\r\\n              <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.RadioMenuClassificationType;\\\">\\r\\n                  {{item.Text}}\\r\\n              </mat-radio-button>\\r\\n          </mat-radio-group> -->\\r\\n\\r\\n          <!-- <mat-list-item *ngFor=\\\"let item of dDLList?.RadioMenuClassificationType;\\\" [(ngModel)]=\\\"model.MenuTypeMappingList\\\">\\r\\n            <mat-checkbox  value=\\\"{{item.Value}}\\\" formControlName=\\\"MenuTypeMappingList\\\">{{item.Text}}</mat-checkbox>\\r\\n          </mat-list-item> -->\\r\\n\\r\\n            <!-- <mat-checkbox [(ngModel)]=\\\"model.MenuTypeMappingList\\\"\\r\\n                          value=\\\"{{item.Value}}\\\"\\r\\n                          formControlName=\\\"MenuTypeMappingList\\\" *ngFor=\\\"let item of dDLList?.RadioMenuClassificationType;\\\">\\r\\n                          {{item.Text}}\\r\\n            </mat-checkbox> -->\\r\\n\\r\\n            <mat-label> Type </mat-label>\\r\\n            <mat-selection-list formControlName=\\\"MenuTypeMappingList\\\" name=\\\"MenuTypeMappingList\\\" [(ngModel)]=\\\"model.MenuTypeMappingList\\\" class=\\\"matlistscroll\\\">\\r\\n\\r\\n              <mat-list-option [value]=\\\"item.Value\\\" *ngFor=\\\"let item of dDLList?.RadioMenuClassificationType;\\\">\\r\\n                {{item.Text}}\\r\\n              </mat-list-option>\\r\\n\\r\\n                  <!-- <mat-checkbox\\r\\n                          value=\\\"{{item.Value}}\\\"\\r\\n                           *ngFor=\\\"let item of dDLList?.RadioMenuClassificationType;\\\">\\r\\n                          {{item.Text}}\\r\\n            </mat-checkbox> -->\\r\\n            </mat-selection-list>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col l4 m6 s12 \\\">\\r\\n        <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Is Sub Menu </mat-label>\\r\\n          <mat-checkbox  Id=\\\"IsSubMenu\\\" #IsSubMenu [(ngModel)]=\\\"model.IsSubMenu\\\"  formControlName=\\\"IsSubMenu\\\" >Is Sub Menu</mat-checkbox>\\r\\n        </section>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l6 xl6 m6 s12 mt-10\\\" *ngIf=\\\"model.IsSubMenu\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label> Menu Classifiaction<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n            <mat-select formControlName=\\\"MenuClassificationCode\\\" #MenuClassificationCode [(ngModel)]=\\\"model.MenuClassificationCode\\\">\\r\\n                <mat-option>--Select--</mat-option>\\r\\n                <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlClassification\\\">{{ k.Text }}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n    <ng-container matColumnDef=\\\"index\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n        {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n        {{ column.Text }}\\r\\n      </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n      <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.MenuClassificationPermission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\"\\r\\n            title=\\\"Update Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.MenuClassificationPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n          <a *ngIf=\\\"this.MenuClassificationPermission.UpdatePageAccess && !element.IsLock \\\" routerLink=\\\"/department-website/menu-Classification/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n        class=\\\"btn_edit\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n\\r\\n\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n  <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n    [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons style=\\\"display: none;\\\"> </mat-paginator>\\r\\n</div>\\r\\n</div>\\r\\n\"","module.exports = \"<form [formGroup]=\\\"formGroup\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Component Name<span style=\\\"color: red\\\">*</span>\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Selector Name\\\" [(ngModel)]=\\\"model.ComponentName\\\"\\r\\n          formControlName=\\\"ComponentName\\\" >\\r\\n      </mat-form-field>\\r\\n      <mat-error\\r\\n      *ngIf=\\\"formGroup.get('ComponentName').hasError('required') && (formGroup.get('ComponentName').touched && formGroup.get('ComponentName').invalid)\\\">\\r\\n      Component Name is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Selector Name<span style=\\\"color: red\\\">*</span>\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Selector Name\\\" [(ngModel)]=\\\"model.SelectorName\\\"\\r\\n            formControlName=\\\"SelectorName\\\" >\\r\\n        </mat-form-field>\\r\\n        <mat-error\\r\\n        *ngIf=\\\"formGroup.get('SelectorName').hasError('required') && (formGroup.get('SelectorName').touched && formGroup.get('SelectorName').invalid)\\\">\\r\\n        Selector Name is <strong>required!</strong>\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Display Name English<span style=\\\"color: red\\\">*</span>\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Display Name English\\\" [(ngModel)]=\\\"model.NameEnglish\\\"\\r\\n            formControlName=\\\"NameEnglish\\\" >\\r\\n        </mat-form-field>\\r\\n        <mat-error\\r\\n        *ngIf=\\\"formGroup.get('NameEnglish').hasError('required') && (formGroup.get('NameEnglish').touched && formGroup.get('NameEnglish').invalid)\\\">\\r\\n        Display Name English is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Display Name Hindi<span style=\\\"color: red\\\">*</span>\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Display Name Hindi\\\" [(ngModel)]=\\\"model.NameHindi\\\"\\r\\n            formControlName=\\\"NameHindi\\\" >\\r\\n        </mat-form-field>\\r\\n        <mat-error\\r\\n        *ngIf=\\\"formGroup.get('NameHindi').hasError('required') && (formGroup.get('NameHindi').touched && formGroup.get('NameHindi').invalid)\\\">\\r\\n        Display Name Hindi is <strong>required!</strong>\\r\\n      </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Short Description\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Short Description\\\" [(ngModel)]=\\\"model.ShortDescription\\\"\\r\\n            formControlName=\\\"ShortDescription\\\" >\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Default Order\\r\\n        </mat-label>\\r\\n        <input matInput placeholder=\\\"Default Order\\\" [(ngModel)]=\\\"model.DefaultOrder\\\"\\r\\n          formControlName=\\\"DefaultOrder\\\" >\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label mb-10\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Is DIPR Section </mat-label>\\r\\n        <mat-checkbox  Id=\\\"IsDIPRSection\\\" #IsDIPRSection [(ngModel)]=\\\"model.IsDIPRSection\\\"  formControlName=\\\"IsDIPRSection\\\" >Is DIPR Section</mat-checkbox>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s6 clearfix\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick();\\\">{{title}}</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\\r\\n\"","module.exports = \"\\r\\n\\r\\n<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" (clear)=\\\"Reset()\\\"></app-global-list-search>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important;overflow-wrap: break-word;\\\">\\r\\n    <ng-container matColumnDef=\\\"index\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n        {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>\\r\\n        {{ column.Text }}\\r\\n      </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">{{ element[column.Value] }}</td>\\r\\n\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n        <a *ngIf=\\\"this.DepartmentMenuClassificationPermission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n        <a *ngIf=\\\"!this.DepartmentMenuClassificationPermission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n          <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n          <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off</mat-icon>\\r\\n        </a>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Created Date</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n        {{ element.CreatedDate !=null ? (element.CreatedDate | date: 'dd/MM/yyy , h:mm:ss a') :'--'}}</td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <!-- <ng-container matColumnDef=\\\"ModifiedByName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Modified By(Modified Date) </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n        {{element.ModifiedByName}} ({{(element.ModifiedDate | date: 'dd/MM/yyy , h:mm:ss a')}})\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"Action\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>Action</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link\\\">\\r\\n\\r\\n          <a *ngIf=\\\"this.DepartmentMenuClassificationPermission.UpdatePageAccess && !element.IsLock \\\" routerLink=\\\"/department-website/section-master/update/{{ element.Id }}\\\" title=\\\"Edit\\\"\\r\\n        class=\\\"btn_edit\\\">\\r\\n        <mat-icon>edit</mat-icon>\\r\\n      </a>\\r\\n\\r\\n\\r\\n      </td>\\r\\n    </ng-container>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n  </table>\\r\\n</div>\\r\\n\\r\\n\\r\\n  <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n    [pageSizeOptions]=\\\"[5, 10, 20, 50,totalRecords]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons style=\\\"display: none;\\\"> </mat-paginator>\\r\\n</div>\\r\\n</div>\\r\\n\"","\r\nexport class ClassificationPageTypeModel {\r\n\t\tId: number;\r\n    PageId: number;\r\n\t\tCode: number | null;\r\n\t\tNameHindi: string;\r\n\t\tNameEnglish: string;\r\n\t\tDisplayOrder: number | null;\r\n\t\tRemarks: string;\r\n\t\tUrl: string;\r\n\t\tIsActive: boolean;\r\n\t\tIsDeleted: boolean;\r\n\t\tCreatedDate: Date | string | null;\r\n\t\tCreatedBy: number | null;\r\n\t\tModifiedDate: Date | string | null;\r\n\t\tModifiedBy: number | null;\r\n    SampleURl: string;\r\n    AttachmentURl: string;\r\n\t}\r\n","export class MenuClassificationModel {\r\n\t\tId: number;\r\n\t\tCode: number | null;\r\n\t\tNameHindi: string;\r\n\t\tNameEnglish: string;\r\n\t\tDisplayOrder: number | null;\r\n\t\tRemarks: string;\r\n\t\tClassificationType: number |string | null;\r\n\t\tIsActive: boolean;\r\n\t\tIsDeleted: boolean;\r\n\t\tCreatedDate: Date | string | null;\r\n\t\tCreatedBy: number | null;\r\n\t\tModifiedDate: Date | string | null;\r\n    ModifiedBy: number | null;\r\n    MenuTypeMappingList: number[]|string[];\r\n    IsSubMenu: boolean;\r\n    MenuClassificationCode: number|string;\r\n\t}\r\n","import { IndexModel } from \"./general-model\";\r\n\r\nexport class DepartmentSectionMappingModel {\r\n    Id: number;\r\n    Code: number;\r\n    DepartmentCode: number | string | null;\r\n    DepartmentTitle: string;\r\n    DepartmentTitleHindi: string;\r\n    SectionMasterCode: number | string | null;\r\n    NameHindi: string;\r\n    NameEnglish: string;\r\n    DisplayOrder: number | null;\r\n    IconImage: string;\r\n    BackGroundImage: string;\r\n    BackGroungColor: string;\r\n    BaseUrl: string;\r\n    IsActive: boolean;\r\n    Isdeleted: boolean;\r\n    CreatedDate: Date | string | null;\r\n    CreatedBy: number | null;\r\n    ModifiedDate: Date | string | null;\r\n    ModifiedBy: number | null;\r\n    ModifiedByName:string;\r\n    CreatedByName:string;\r\n    SectionMasterName: string;\r\n}\r\n\r\nexport class DepartmentSectionMappingFilterModel extends IndexModel {\r\nDepartmentCode: string;\r\nSectionMasterCode: number;\r\nModifiedToDate: string;\r\nModifiedFromDate: string;\r\nStatus: number | null;\r\nModifiedBy: number;\r\n\r\nconstructor() {\r\n  super();\r\n  this.Status =1;\r\n}\r\n}\r\n\r\n\r\n\r\n","export class SectionMasterModel {\r\n  Id: number;\r\n  Code: number;\r\n  ComponentName: string;\r\n  SelectorName: string;\r\n  ShortDescription: string;\r\n  IsActive: boolean;\r\n  Isdeleted: boolean;\r\n  CreatedDate: Date | string | null;\r\n  CreatedBy: number | null;\r\n  ModifiedDate: Date | string | null;\r\n  ModifiedBy: number | null;\r\n  DefaultOrder: number | null;\r\n  NameEnglish: string;\r\n  NameHindi: string;\r\n  IsDIPRSection:boolean;\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseService } from \"./base.service\";\r\nimport { IndexModel } from \"../Model/general-model\";\r\nimport { AppSetting } from \"../Model/appsetting\";\r\nimport { ClassificationPageTypeModel } from \"../Model/Master/classification-pagetype-model\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class ClassificationPagetypeService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(\r\n      AppSetting.ClassificationPageTypeListUrl,\r\n      model\r\n    );\r\n  }\r\n\r\n  Add(model: ClassificationPageTypeModel) {\r\n    return this._baseService.post(\r\n      AppSetting.ClassificationPageTypeAddUrl,\r\n      model\r\n    );\r\n  }\r\n\r\n  Edit(model: ClassificationPageTypeModel) {\r\n    return this._baseService.post(\r\n      AppSetting.ClassificationPageTypeUpdateUrl,\r\n      model\r\n    );\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.ClassificationPageTypeUpdateStatusUrl + id\r\n    );\r\n  }\r\n\r\n  GetById(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.ClassificationPageTypeGetByIdUrl + id\r\n    );\r\n  }\r\n\r\n  //#region <end>\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { DepartmentMenuClassificationModel } from '../Model/Master/department.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentMenuClassificationService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.DepartmentMenuClassificationListUrl, model);\r\n  }\r\n\r\n  Add(model: DepartmentMenuClassificationModel) {\r\n    return this._baseService.post(AppSetting.DepartmentMenuClassificationAddUrl, model);\r\n  }\r\n\r\n  GetById(id) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentMenuClassificationGetByIdUrl + id,\r\n      null\r\n    );\r\n  }\r\n\r\n  Edit(model: DepartmentMenuClassificationModel) {\r\n    return this._baseService.post(AppSetting.DepartmentMenuClassificationEditUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentMenuClassificationUpdateStatusUrl + id\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { DepartmentSectionMappingModel } from '../Model/department-section-mapping-model';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentSectionMappingService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSectionMappingListUrl, model);\r\n  }\r\n\r\n  Add(model: DepartmentSectionMappingModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSectionMappingAddUrl, model);\r\n  }\r\n\r\n  GetById(id) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentSectionMappingGetByIdUrl + id,\r\n      null\r\n    );\r\n  }\r\n\r\n  Edit(model: DepartmentSectionMappingModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSectionMappingEditUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentSectionMappingUpdateStatusUrl + id\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { DepartmentSubMenuModel, ImportSectionMenuAndSubMenuFilterModel } from '../Model/Master/department.model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DepartmentSubmenuClassificationService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSubMenuListUrl, model);\r\n  }\r\n\r\n  Add(model: DepartmentSubMenuModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSubMenuAddUrl, model);\r\n  }\r\n\r\n  GetById(id) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentSubMenuGetByIdUrl + id,\r\n      null\r\n    );\r\n  }\r\n\r\n  Edit(model: DepartmentSubMenuModel) {\r\n    return this._baseService.post(AppSetting.DepartmentSubMenuEditUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.DepartmentSubMenuUpdateStatusUrl + id\r\n    );\r\n  }\r\n\r\n  //#region <ImportSectionMenuAndSubMenu>\r\n\r\n\r\n  ImportSectionMenuAndSubMenu(model: ImportSectionMenuAndSubMenuFilterModel) {\r\n  return this._baseService.post(AppSetting.ImportSectionMenuAndSubMenuUrl, model);\r\n}\r\n//#endregion\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { MenuClassificationModel } from '../Model/Master/menu-classification-model';\r\nimport { AppSetting } from '../Model/appsetting';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MenuClassificationService {\r\n\r\n  constructor(private readonly _baseService: BaseService) {\r\n  }\r\n\r\n\r\n GetList(model: IndexModel) {\r\n  return this._baseService.post(AppSetting.MenuClassificationListUrl, model);\r\n}\r\n\r\nAdd(model: MenuClassificationModel) {\r\n  return this._baseService.post(AppSetting.MenuClassificationAddUrl, model);\r\n}\r\n\r\nEdit(model: MenuClassificationModel) {\r\n  return this._baseService.post(AppSetting.MenuClassificationUpdateUrl, model);\r\n}\r\n\r\nChangeActiveStatus(id: number) {\r\n  return this._baseService.get(AppSetting.MenuClassificationUpdateStatusUrl + id);\r\n}\r\n\r\nGetById(id: number) {\r\n  return this._baseService.get(AppSetting.MenuClassificationGetByIdUrl + id);\r\n}\r\n\r\n//#region <end>\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { SectionMasterModel } from '../Model/section-master-model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SectionMasterService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.SectionMasterListUrl, model);\r\n  }\r\n\r\n  Add(model: SectionMasterModel) {\r\n    return this._baseService.post(AppSetting.SectionMasterAddUrl, model);\r\n  }\r\n\r\n  GetById(id) {\r\n    return this._baseService.get(\r\n      AppSetting.SectionMasterGetByIdUrl + id,\r\n      null\r\n    );\r\n  }\r\n\r\n  Edit(model: SectionMasterModel) {\r\n    return this._baseService.post(AppSetting.SectionMasterEditUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(\r\n      AppSetting.SectionMasterUpdateStatusUrl + id\r\n    );\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2NsYXNzaWZpY2F0aW9uLXBhZ2V0eXBlL2FkZHVwZGF0ZS1jbGFzc2lmaWNhdGlvbnBhZ2V0eXBlL2FkZHVwZGF0ZS1jbGFzc2lmaWNhdGlvbnBhZ2V0eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ClassificationPageTypeModel } from 'src/app/Shared/Model/Master/classification-pagetype-model';\r\nimport { ClassificationPagetypeService } from 'src/app/Shared/Service/classification-pagetype.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\n\r\n@Component({\r\n  selector: 'app-addupdate-classificationpagetype',\r\n  templateUrl: './addupdate-classificationpagetype.component.html',\r\n  styleUrls: ['./addupdate-classificationpagetype.component.css']\r\n})\r\nexport class AddupdateClassificationpagetypeComponent implements OnInit {\r\n//#region << Variable >>\r\n\r\nformGroup: FormGroup;\r\nmodel: ClassificationPageTypeModel;\r\ntitle: string;\r\nloginData: UserViewModel;\r\nImagefileValidationMsg: string = \"\";\r\n\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentApi: AppComponent,\r\n  private readonly _ClassificationPagetypeService: ClassificationPagetypeService,\r\n  private readonly _alertService: AlertService,\r\n  private readonly _router: Router,\r\n  private _route: ActivatedRoute,\r\n  private readonly formBuilder: FormBuilder,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n  private readonly _commonService: CommonService\r\n) {\r\n  this.model = new ClassificationPageTypeModel();\r\n  const id = this._route.snapshot.params.id;\r\n  if (id) {\r\n    this.model.Id = id;\r\n    this.GetById();\r\n    this._parentApi.setpagelayout(\r\n      \"Update Menu Classification Page Type :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/classification-Pagetype\"\r\n    );\r\n    this.title = \"Update\";\r\n  } else {\r\n    this._parentApi.setpagelayout(\r\n      \"Add Menu Classification Page Type :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/classification-Pagetype\"\r\n    );\r\n    this.title = \"Add\";\r\n  }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.FormGroupInit();\r\n\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n\r\n}\r\n\r\nGetById() {\r\n  this._ClassificationPagetypeService.GetById(this.model.Id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.model = <ClassificationPageTypeModel>data.Data;\r\n\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSaveClick() {\r\n  \r\n\r\n  this.formGroup.markAllAsTouched();\r\n  if (this.formGroup.valid) {\r\n    if (this.model.PageId==-1) {\r\n      this._ClassificationPagetypeService.Edit(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/classification-Pagetype\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._ClassificationPagetypeService.Add(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/classification-Pagetype\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\nRemoveImageFile() {\r\n  this.model.AttachmentURl = undefined;\r\n}\r\n\r\nhandleFileInput(event: any) {\r\n  if (event.target.files.item(0).type.match(\"image/*\")) {\r\n    var reader = new FileReader();\r\n    reader.onload = (event: any) => {\r\n      this.model.AttachmentURl = event.target.result;\r\n    };\r\n    reader.readAsDataURL(event.target.files.item(0));\r\n    this.ImagefileValidationMsg = \"\";\r\n  } else {\r\n    this.ImagefileValidationMsg = \"only accept image file \";\r\n  }\r\n}\r\n\r\nFormGroupInit() {\r\n  this.formGroup = this.formBuilder.group({\r\n    NameEnglish: [null, Validators.required],//, Validators.required\r\n    NameHindi: [null],\r\n    DisplayOrder:[null],\r\n    Remarks:[null],\r\n    Url:[null, Validators.required],\r\n    SampleURl:[null],\r\n    AttachmentURl:[null],\r\n  });\r\n}\r\n//#endregion  << Method >>\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2NsYXNzaWZpY2F0aW9uLXBhZ2V0eXBlL2NsYXNzaWZpY2F0aW9uLXBhZ2V0eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { MatPaginator, MatSort, MatDialog, MatTableDataSource } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ClassificationPageTypeModel } from 'src/app/Shared/Model/Master/classification-pagetype-model';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { PermissionModel, IndexModel } from 'src/app/Shared/Model/general-model';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { ClassificationPagetypeService } from 'src/app/Shared/Service/classification-pagetype.service';\r\n\r\n@Component({\r\n  selector: 'app-classification-pagetype',\r\n  templateUrl: './classification-pagetype.component.html',\r\n  styleUrls: ['./classification-pagetype.component.css']\r\n})\r\nexport class ClassificationPagetypeComponent implements OnInit {\r\n//#region << Variable >>\r\nlistModel: ClassificationPageTypeModel[];\r\ndataSource: MatTableDataSource<ClassificationPageTypeModel>;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"NameHindi\",\r\n  \"NameEnglish\",\r\n  \"SampleURl\",\r\n  \"DisplayOrder\",\r\n  \"Remarks\",\r\n  \"AttachmentURl\",\r\n  \"Action\",\r\n];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n  { Value: \"NameEnglish\", Text: \"NameEnglish\" },\r\n  { Value: \"DisplayOrder\", Text: \"Display Order\" },\r\n  { Value: \"Remarks\", Text: \"Remarks\" },\r\n  { Value: \"SampleURl\", Text: \"Sample URl\" },\r\n];\r\n\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n  { Value: \"NameEnglish\", Text: \"Name English\" },\r\n\r\n];\r\n\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\nindexModel: IndexModel;\r\ntotalRecords: number;\r\nMenuClassificationPermission: PermissionModel = this._commonService.GetPagePermission(\r\n  \"/department-website/classification-Pagetype\",\r\n  \"/department-website/classification-Pagetype/add\",\r\n  \"\",\r\n  \"/department-website/classification-Pagetype/update\"\r\n);\r\n\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentComponent: AppComponent,\r\n  private readonly _classificationPagetypeService: ClassificationPagetypeService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _dialog: MatDialog\r\n) {\r\n  this.MenuClassificationPermission.AddPageAccess\r\n    ? this._parentComponent.setpagelayout(\r\n        \"Menu Classification Page Type List:\",\r\n        \"add\",\r\n        \"Add\",\r\n        \"/department-website/classification-Pagetype/add\"\r\n      )\r\n    : this._parentComponent.setpagelayout(\"Menu Classification Page Type List:\");\r\n  this.indexModel = new IndexModel();\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.GetList();\r\n}\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc =\r\n    event.direction === AppSetting.orderByDscAsc\r\n      ? AppSetting.orderByAsc\r\n      : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nGetList() {\r\n  \r\n  this.indexModel.PageSize=101;\r\n  this._classificationPagetypeService.GetList(this.indexModel).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.listModel = <ClassificationPageTypeModel[]>(\r\n          data.Data.Data\r\n        );\r\n        this.dataSource = new MatTableDataSource<ClassificationPageTypeModel>(\r\n          this.listModel\r\n        );\r\n        this.totalRecords = data.Data.TotalRecords;\r\n        if (!this.indexModel.IsPostBack) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nstatusClick(id) {\r\n  this._classificationPagetypeService.ChangeActiveStatus(id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._commonService.ScrollingTop();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSearchByKeyword(event) {\r\n  \r\n  this.indexModel.Search = event;\r\n  this.GetList();\r\n}\r\n\r\nReset() {\r\n  this.indexModel = new IndexModel();\r\n  this.GetList();\r\n}\r\n\r\ndownloadPdf(Url) {\r\n  if (Url) {\r\n    const link = document.createElement(\"a\");\r\n    link.setAttribute(\"href\", Url);\r\n    link.setAttribute(\"download\", 'Document');\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n  }\r\n}\r\n//#endregion\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2RlcGFydG1lbnQtbWVudS1jbGFzc2lmaWNhdGlvbi9hZGR1cGRhdGUtZGVwYXJ0bWVudC1tZW51LWNsYXNzaWZpY2F0aW9uL2FkZHVwZGF0ZS1kZXBhcnRtZW50LW1lbnUtY2xhc3NpZmljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { DepartmentMenuClassificationModel } from 'src/app/Shared/Model/Master/department.model';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { DepartmentMenuClassificationService } from 'src/app/Shared/Service/department-menu-classification.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-addupdate-department-menu-classification',\r\n  templateUrl: './addupdate-department-menu-classification.component.html',\r\n  styleUrls: ['./addupdate-department-menu-classification.component.css']\r\n})\r\nexport class AddupdateDepartmentMenuClassificationComponent implements OnInit {\r\n//#region << Variable >>\r\n\r\nformGroup: FormGroup;\r\nmodel: DepartmentMenuClassificationModel;\r\ntitle: string;\r\nloginData: UserViewModel;\r\ndDLList: DDLModel;\r\nddlDepartment: UserDepartmentViewModel[];\r\nImagefileValidationMsg: string;\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentApi: AppComponent,\r\n  private readonly _DepartmentMenuClassificationService: DepartmentMenuClassificationService,\r\n  private readonly _alertService: AlertService,\r\n  private readonly _router: Router,\r\n  private _route: ActivatedRoute,\r\n  private readonly formBuilder: FormBuilder,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n  private readonly _commonService: CommonService\r\n) {\r\n  this.model = new DepartmentMenuClassificationModel();\r\n  const id = this._route.snapshot.params.id;\r\n  if (id) {\r\n    this.model.Id = id;\r\n    this.GetById();\r\n    this._parentApi.setpagelayout(\r\n      \"Update Department Menu Classification :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/department-menu-Classification\"\r\n    );\r\n    this.title = \"Update\";\r\n  } else {\r\n    this._parentApi.setpagelayout(\r\n      \"Add Department Menu Classification :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/department-menu-Classification\"\r\n    );\r\n    this.title = \"Add\";\r\n  }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.FormGroupInit();\r\n  this.GetDDLList();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  this.getDepartment();\r\n}\r\n\r\ngetDepartment() {\r\n  this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentMenuClassification).subscribe(\r\n    (data) => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetById() {\r\n  this._DepartmentMenuClassificationService.GetById(this.model.Id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.model = <DepartmentMenuClassificationModel>data.Data;\r\n       if(this.model.DepartmentCode)\r\n       {\r\n         this.model.DepartmentCode = String(this.model.DepartmentCode);\r\n       }\r\n       if(this.model.MenuClassificationCode)\r\n       {\r\n         this.model.MenuClassificationCode = String(this.model.MenuClassificationCode);\r\n       }\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nhandleImageFileInput(event: any) {\r\n  \r\n  if (event.target.files.item(0).type.match(\"image/*\")) {\r\n    if (\r\n      event.target.files.item(0).size <\r\n      this._commonService.ConvertMbintoByte(\r\n        Number(localStorage.getItem(\"FileValidation\"))\r\n      )\r\n    ) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        \r\n        this.model.IconImage = event.target.result;\r\n        this.ImagefileValidationMsg = \"\";\r\n      };\r\n      reader.readAsDataURL(event.target.files.item(0));\r\n    } else {\r\n      this.ImagefileValidationMsg =  \"Attachment must be less than \" +\r\n      localStorage.getItem(\"FileValidation\") +\r\n      \" MB.\";\r\n    }\r\n  } else {\r\n    this.ImagefileValidationMsg = \"only image/*\";\r\n  }\r\n}\r\n\r\nRemoveImageFile() {\r\n  if (this.model.IconImage) {\r\n   this.model.IconImage = null;\r\n  }\r\n}\r\n\r\nSaveClick() {\r\n  \r\n  this.formGroup.markAllAsTouched();\r\n  if (this.formGroup.valid) {\r\n    if (this.model.Id) {\r\n      this._DepartmentMenuClassificationService.Edit(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-menu-Classification\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._DepartmentMenuClassificationService.Add(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-menu-Classification\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nFormGroupInit() {\r\n  this.formGroup = this.formBuilder.group({\r\n    Id:[null],\r\n    DepartmentCode:[null],\r\n    MenuClassificationCode:[null],\r\n    DisplayNameEnglish:[null, Validators.required],\r\n    DisplayNameHindi:[null, Validators.required],\r\n    DisplayOrder:[null],\r\n    IsSubMenu:[null] ,\r\n    IsActive:[null],\r\n    IsDelete:[null],\r\n    CreatedDate:[null] ,\r\n    CreatedBy:[null],\r\n    ModifiedDate:[null] ,\r\n    ModifiedBy:[null],\r\n    Code:[null],\r\n    IsExternalUrl:[null],\r\n    ExternalUrl:[null],\r\n    InternalUrl:[null],\r\n  });\r\n}\r\n//#endregion  << Method >>\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2RlcGFydG1lbnQtbWVudS1jbGFzc2lmaWNhdGlvbi9kZXBhcnRtZW50LW1lbnUtY2xhc3NpZmljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { PermissionModel } from 'src/app/Shared/Model/general-model';\r\nimport { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { IndexModel } from 'src/app/Shared/Model/general-model';\r\nimport { DepartmentMainMenuFilterModel, DepartmentMainMenuModel } from 'src/app/Shared/Model/Master/department.model';\r\nimport { DepartmentMenuClassificationService } from 'src/app/Shared/Service/department-menu-classification.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { ColumnHeaderModel, DdlItemModel, DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-department-menu-classification',\r\n  templateUrl: './department-menu-classification.component.html',\r\n  styleUrls: ['./department-menu-classification.component.css']\r\n})\r\nexport class DepartmentMenuClassificationComponent implements OnInit {\r\n\r\n//#region << Variable >>\r\ndDLList: DDLModel;\r\nddlDepartment: UserDepartmentViewModel[];\r\nloginData: UserViewModel;\r\ndepartmentCode: string;\r\nmenuClassificationCode: string;\r\n\r\nlistModel: DepartmentMainMenuModel[];\r\ndataSource: MatTableDataSource<DepartmentMainMenuModel>;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"DepartmentTitle\",\r\n  \"MenuClassificationName\",\r\n  \"DisplayNameHindi\",\r\n  \"DisplayNameEnglish\",\r\n  \"DisplayOrder\",\r\n  \"IsActive\",\r\n  \"CreatedDate\",\r\n  \"ModifiedByName\",\r\n  \"Action\",\r\n];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DisplayNameHindi\", Text: \"Display Name Hindi\" },\r\n  { Value: \"DisplayNameEnglish\", Text: \"Display Name English\" },\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  { Value: \"MenuClassificationName\", Text: \"Menu Classification\" },\r\n  { Value: \"DisplayOrder\", Text: \"Display Order\" },\r\n];\r\n\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DisplayNameHindi\", Text: \"Display Name Hindi\" },\r\n  { Value: \"DisplayNameEnglish\", Text: \"Display Name English\" },\r\n\r\n];\r\n\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n\r\nindexModel = this._commonService.modelSetGet(new DepartmentMainMenuFilterModel()) as DepartmentMainMenuFilterModel;\r\n\r\ntotalRecords: number;\r\nDepartmentMenuClassificationPermission: PermissionModel = this._commonService.GetPagePermission(\r\n  \"/department-website/department-menu-Classification\",\r\n  \"/department-website/department-menu-Classification/add\",\r\n  \"\",\r\n  \"/department-website/department-menu-Classification/update\"\r\n);\r\n\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentComponent: AppComponent,\r\n  private readonly _departmentMenuClassificationService: DepartmentMenuClassificationService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _dialog: MatDialog,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n) {\r\n  this.DepartmentMenuClassificationPermission.AddPageAccess\r\n    ? this._parentComponent.setpagelayout(\r\n        \"Department Menu Classification List:\",\r\n        \"add\",\r\n        \"Add\",\r\n        \"/department-website/department-menu-Classification/add\"\r\n      )\r\n    : this._parentComponent.setpagelayout(\"Department Menu Classification List:\");\r\n  // this.indexModel = new DepartmentMainMenuFilterModel();\r\n\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.GetList();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  this.getDepartment();\r\n  this.GetDDLList();\r\n}\r\n\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentMenuClassification).subscribe(\r\n    (data) => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ngetDepartment() {\r\n  this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc =\r\n    event.direction === AppSetting.orderByDscAsc\r\n      ? AppSetting.orderByAsc\r\n      : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\nGetList() {\r\n   \r\n   this.indexModel.PageSize=101;\r\n  if (this.indexModel.DepartmentCode) {\r\n    this.indexModel.DepartmentCode = this.indexModel.DepartmentCode.toString();\r\n  }\r\n  if (this.indexModel.MenuClassificationCode) {\r\n    this.indexModel.MenuClassificationCode = this.indexModel.MenuClassificationCode.toString();\r\n  }\r\n\r\n  this._departmentMenuClassificationService.GetList(this._commonService.modelSetGet(this.indexModel, true)).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.listModel = <DepartmentMainMenuModel[]>(\r\n          data.Data.Data\r\n        );\r\n        this.dataSource = new MatTableDataSource<DepartmentMainMenuModel>(\r\n          this.listModel\r\n        );\r\n        this.totalRecords = data.Data.TotalRecords;\r\n        if (!this.indexModel.IsPostBack) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nOnStatusClick(id) {\r\n  this._departmentMenuClassificationService.ChangeActiveStatus(id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._commonService.ScrollingTop();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSearchByKeyword(event) {\r\n  \r\n  this.indexModel.Search = event;\r\n  if (this.indexModel.ToDate) {\r\n    let uTCDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.indexModel.ToDate).getFullYear(),\r\n        new Date(this.indexModel.ToDate).getMonth(),\r\n        new Date(this.indexModel.ToDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.indexModel.ToDate = uTCDate;\r\n  }\r\n  if (this.indexModel.FromDate) {\r\n    let uTCDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.indexModel.FromDate).getFullYear(),\r\n        new Date(this.indexModel.FromDate).getMonth(),\r\n        new Date(this.indexModel.FromDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.indexModel.FromDate = uTCDate;\r\n  }\r\n  this.indexModel.Page=1;\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\nReset() {\r\n  this.indexModel = new DepartmentMainMenuFilterModel();\r\n  this.departmentCode=\"\";\r\n  this.menuClassificationCode=\"\";\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\ngetActiveDeActiveData(data) {\r\n  this.indexModel.Status = data;\r\n}\r\n//#endregion\r\n}\r\n","module.exports = \"body {background: #f5f5f5;}p{margin: 0;}.summary-info {box-shadow: 0 7px 13px 0 rgba(86, 95, 102, 0.07);background: #fff;max-width: 270px;padding: 15px;border-radius: 5px;display: flex;box-sizing: border-box;}.info {width: calc(100% - 40px);}p.style {color: #000;margin-bottom: 5px;}p.style-value {color: #595b65;text-transform: uppercase;letter-spacing: 1.5px;font-size: 10px;}.circle {height: 40px;width: 40px;box-sizing: border-box;border-radius: 100%;border: 1px solid #dadada;box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.14);}.opened {box-shadow: 0 7px 13px 0 rgba(86, 95, 102, 0.07);background: #fff;max-width: 100%;padding: 5px 10px 0px 10px;border-radius: 5px;position: relative;box-sizing: border-box;margin-top: 10px !important;width: 100% !important;margin-bottom: 30px !important;}.opened:after {border: 10px solid transparent;border-bottom: 10px solid #fff;content: '';right: 10px;position: absolute;top: -20px;}.colors {display: flex;flex-wrap: wrap;}.circle {flex: 40px;margin-right: 10px;margin-bottom: 10px;}.circle:nth-child(5n) {margin-right: 0;}.hex-code {display: flex;margin-top: 20px;}.hex-code p {width: 50%;text-align: center;font-size: 10px;letter-spacing: 1.5px;text-transform: uppercase;line-height: 45px;}.g-input {border: 1px solid #e8ebed;height: 45px;border-radius: 5px;width: 120px;}.hex-code .g-input input {border: none;width: 100%;margin-top: 14px;text-transform: uppercase;padding: 0 25px;outline: none;text-align: center;letter-spacing: 1.5px;color: #595b65;box-sizing: border-box;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9kZXBhcnRtZW50LXdlYnNpdGUvZGVwYXJ0bWVudC1zZWN0aW9uLW1hcHBpbmcvYWRkdXBkYXRlZGVwdC1zZWN0aW9uLW1hcHBpbmcvYWRkdXBkYXRlZGVwdC1zZWN0aW9uLW1hcHBpbmcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLG1CQUFtQixDQUFDLENBQUMsRUFBRSxTQUFTLENBQUMsQ0FBQyxlQUFlLGdEQUFnRCxDQUFDLGdCQUFnQixDQUFDLGdCQUFnQixDQUFDLGFBQWEsQ0FBQyxrQkFBa0IsQ0FBQyxhQUFhLENBQUMsc0JBQXNCLENBQUMsQ0FBQyxPQUFPLHdCQUF3QixDQUFDLENBQUMsU0FBUyxXQUFXLENBQUMsa0JBQWtCLENBQUMsQ0FBQyxlQUFlLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQyxxQkFBcUIsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLFlBQVksQ0FBQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsMkNBQTJDLENBQUMsQ0FBQyxTQUFTLGdEQUFnRCxDQUFDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQywwQkFBMEIsQ0FBQyxrQkFBa0IsQ0FBQyxrQkFBa0IsQ0FBQyxzQkFBc0IsQ0FBQywyQkFBMkIsQ0FBQyxzQkFBc0IsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLGVBQWUsOEJBQThCLENBQUMsOEJBQThCLENBQUMsV0FBVyxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsQ0FBQyxVQUFVLENBQUMsQ0FBQyxTQUFTLGFBQWEsQ0FBQyxlQUFlLENBQUMsQ0FBQyxTQUFTLFVBQVUsQ0FBQyxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLHVCQUF1QixlQUFlLENBQUMsQ0FBQyxXQUFXLGFBQWEsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLGFBQWEsVUFBVSxDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyx5QkFBeUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLFVBQVUseUJBQXlCLENBQUMsWUFBWSxDQUFDLGtCQUFrQixDQUFDLFlBQVksQ0FBQyxDQUFDLDBCQUEwQixZQUFZLENBQUMsV0FBVyxDQUFDLGdCQUFnQixDQUFDLHlCQUF5QixDQUFDLGVBQWUsQ0FBQyxhQUFhLENBQUMsa0JBQWtCLENBQUMscUJBQXFCLENBQUMsY0FBYyxDQUFDLHNCQUFzQixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9kZXBhcnRtZW50LXdlYnNpdGUvZGVwYXJ0bWVudC1zZWN0aW9uLW1hcHBpbmcvYWRkdXBkYXRlZGVwdC1zZWN0aW9uLW1hcHBpbmcvYWRkdXBkYXRlZGVwdC1zZWN0aW9uLW1hcHBpbmcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImJvZHkge2JhY2tncm91bmQ6ICNmNWY1ZjU7fXB7bWFyZ2luOiAwO30uc3VtbWFyeS1pbmZvIHtib3gtc2hhZG93OiAwIDdweCAxM3B4IDAgcmdiYSg4NiwgOTUsIDEwMiwgMC4wNyk7YmFja2dyb3VuZDogI2ZmZjttYXgtd2lkdGg6IDI3MHB4O3BhZGRpbmc6IDE1cHg7Ym9yZGVyLXJhZGl1czogNXB4O2Rpc3BsYXk6IGZsZXg7Ym94LXNpemluZzogYm9yZGVyLWJveDt9LmluZm8ge3dpZHRoOiBjYWxjKDEwMCUgLSA0MHB4KTt9cC5zdHlsZSB7Y29sb3I6ICMwMDA7bWFyZ2luLWJvdHRvbTogNXB4O31wLnN0eWxlLXZhbHVlIHtjb2xvcjogIzU5NWI2NTt0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO2xldHRlci1zcGFjaW5nOiAxLjVweDtmb250LXNpemU6IDEwcHg7fS5jaXJjbGUge2hlaWdodDogNDBweDt3aWR0aDogNDBweDtib3gtc2l6aW5nOiBib3JkZXItYm94O2JvcmRlci1yYWRpdXM6IDEwMCU7Ym9yZGVyOiAxcHggc29saWQgI2RhZGFkYTtib3gtc2hhZG93OiAwIDJweCA0cHggMCByZ2JhKDAsIDAsIDAsIDAuMTQpO30ub3BlbmVkIHtib3gtc2hhZG93OiAwIDdweCAxM3B4IDAgcmdiYSg4NiwgOTUsIDEwMiwgMC4wNyk7YmFja2dyb3VuZDogI2ZmZjttYXgtd2lkdGg6IDEwMCU7cGFkZGluZzogNXB4IDEwcHggMHB4IDEwcHg7Ym9yZGVyLXJhZGl1czogNXB4O3Bvc2l0aW9uOiByZWxhdGl2ZTtib3gtc2l6aW5nOiBib3JkZXItYm94O21hcmdpbi10b3A6IDEwcHggIWltcG9ydGFudDt3aWR0aDogMTAwJSAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206IDMwcHggIWltcG9ydGFudDt9Lm9wZW5lZDphZnRlciB7Ym9yZGVyOiAxMHB4IHNvbGlkIHRyYW5zcGFyZW50O2JvcmRlci1ib3R0b206IDEwcHggc29saWQgI2ZmZjtjb250ZW50OiAnJztyaWdodDogMTBweDtwb3NpdGlvbjogYWJzb2x1dGU7dG9wOiAtMjBweDt9LmNvbG9ycyB7ZGlzcGxheTogZmxleDtmbGV4LXdyYXA6IHdyYXA7fS5jaXJjbGUge2ZsZXg6IDQwcHg7bWFyZ2luLXJpZ2h0OiAxMHB4O21hcmdpbi1ib3R0b206IDEwcHg7fS5jaXJjbGU6bnRoLWNoaWxkKDVuKSB7bWFyZ2luLXJpZ2h0OiAwO30uaGV4LWNvZGUge2Rpc3BsYXk6IGZsZXg7bWFyZ2luLXRvcDogMjBweDt9LmhleC1jb2RlIHAge3dpZHRoOiA1MCU7dGV4dC1hbGlnbjogY2VudGVyO2ZvbnQtc2l6ZTogMTBweDtsZXR0ZXItc3BhY2luZzogMS41cHg7dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtsaW5lLWhlaWdodDogNDVweDt9LmctaW5wdXQge2JvcmRlcjogMXB4IHNvbGlkICNlOGViZWQ7aGVpZ2h0OiA0NXB4O2JvcmRlci1yYWRpdXM6IDVweDt3aWR0aDogMTIwcHg7fS5oZXgtY29kZSAuZy1pbnB1dCBpbnB1dCB7Ym9yZGVyOiBub25lO3dpZHRoOiAxMDAlO21hcmdpbi10b3A6IDE0cHg7dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtwYWRkaW5nOiAwIDI1cHg7b3V0bGluZTogbm9uZTt0ZXh0LWFsaWduOiBjZW50ZXI7bGV0dGVyLXNwYWNpbmc6IDEuNXB4O2NvbG9yOiAjNTk1YjY1O2JveC1zaXppbmc6IGJvcmRlci1ib3g7fSJdfQ== */\"","import { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { DepartmentSectionMappingService } from 'src/app/Shared/Service/department-section-mapping.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { DepartmentSectionMappingModel } from 'src/app/Shared/Model/department-section-mapping-model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-addupdatedept-section-mapping',\r\n  templateUrl: './addupdatedept-section-mapping.component.html',\r\n  styleUrls: ['./addupdatedept-section-mapping.component.css']\r\n})\r\nexport class AddupdatedeptSectionMappingComponent implements OnInit {\r\n\r\n//#region << Variable >>\r\n\r\nformGroup: FormGroup;\r\nmodel: DepartmentSectionMappingModel;\r\ntitle: string;\r\nloginData: UserViewModel;\r\ndDLList: DDLModel;\r\nddlDepartment: UserDepartmentViewModel[];\r\nBGImagefileValidationMsg : string;\r\nIconImagefileValidationMsg: string;\r\npublic defaultColors: string[] = [ '#ffffff', '#000105', '#3e6158', '#3f7a89', '#96c582', '#b7d5c4', '#bcd6e7', '#7c90c1', '#9d8594', '#dad0d8', '#4b4fce', '#4e0a77', '#a367b5',\r\n'#ee3e6d', '#d63d62', '#c6a670', '#f46600', '#cf0500', '#efabbd', '#8e0622', '#f0b89a', '#f0ca68', '#62382f', '#c97545', '#c1800b'];\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentApi: AppComponent,\r\n  private readonly _DepartmentSectionMappingService: DepartmentSectionMappingService,\r\n  private readonly _alertService: AlertService,\r\n  private readonly _router: Router,\r\n  private _route: ActivatedRoute,\r\n  private readonly formBuilder: FormBuilder,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n  private readonly _commonService: CommonService\r\n) {\r\n  \r\n  this.model = new DepartmentSectionMappingModel();\r\n  const id = this._route.snapshot.params.id;\r\n  if (id) {\r\n    this.model.Id = id;\r\n    this.GetById();\r\n    this._parentApi.setpagelayout(\r\n      \"Update Department Section Mapping :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/department-section-mapping\"\r\n    );\r\n    this.title = \"Update\";\r\n  } else {\r\n    this._parentApi.setpagelayout(\r\n      \"Add Department Section Mapping :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"department-website/department-section-mapping\"\r\n    );\r\n    this.title = \"Add\";\r\n  }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.FormGroupInit();\r\n  this.GetDDLList();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  this.getDepartment();\r\n}\r\n\r\ngetDepartment() {\r\n  this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentSectionMapping).subscribe(\r\n    (data) => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetById() {\r\n  \r\n  this._DepartmentSectionMappingService.GetById(this.model.Id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.model = <DepartmentSectionMappingModel>data.Data;\r\n       if(this.model.DepartmentCode)\r\n       {\r\n         this.model.DepartmentCode = String(this.model.DepartmentCode);\r\n       }\r\n       if(this.model.SectionMasterCode)\r\n       {\r\n         this.model.SectionMasterCode = String(this.model.SectionMasterCode);\r\n       }\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\n// handleImageFileInput(event: any) {\r\n//   \r\n//   if (event.target.files.item(0).type.match(\"image/*\")) {\r\n//     if (\r\n//       event.target.files.item(0).size <\r\n//       this._commonService.ConvertMbintoByte(\r\n//         Number(localStorage.getItem(\"FileValidation\"))\r\n//       )\r\n//     ) {\r\n//       const reader = new FileReader();\r\n//       reader.onload = (event: any) => {\r\n//         \r\n//         this.model.IconImage = event.target.result;\r\n//         this.ImagefileValidationMsg = \"\";\r\n//       };\r\n//       reader.readAsDataURL(event.target.files.item(0));\r\n//     } else {\r\n//       this.ImagefileValidationMsg =  \"Attachment must be less than \" +\r\n//       localStorage.getItem(\"FileValidation\") +\r\n//       \" MB.\";\r\n//     }\r\n//   } else {\r\n//     this.ImagefileValidationMsg = \"only image/*\";\r\n//   }\r\n// }\r\n\r\n\r\nhandleImageFileInput(event: any,image:boolean) {\r\n  \r\n  if (event.target.files.item(0).type.match(\"image/*\")) {\r\n    if (\r\n      event.target.files.item(0).size <\r\n      this._commonService.ConvertMbintoByte(\r\n        Number(localStorage.getItem(\"FileValidation\"))\r\n      )\r\n    ) {\r\n      const reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        if (image) {\r\n          this.model.BackGroundImage = event.target.result;\r\n          this.BGImagefileValidationMsg = \"\";\r\n        }\r\n        else{\r\n          this.model.IconImage = event.target.result;\r\n          this.IconImagefileValidationMsg = \"\";\r\n        }\r\n\r\n      };\r\n      reader.readAsDataURL(event.target.files.item(0));\r\n    } else {\r\n      this.BGImagefileValidationMsg =  \"Attachment must be less than \" +\r\n      localStorage.getItem(\"FileValidation\") +\r\n      \" MB.\";\r\n    }\r\n  } else {\r\n    this.BGImagefileValidationMsg = \"only image/*\";\r\n  }\r\n}\r\n\r\nRemoveImageFile(image:boolean) {\r\n  if (image) {\r\n   this.model.BackGroundImage = null;\r\n  }\r\n  else{\r\n    this.model.IconImage = null;\r\n  }\r\n}\r\n\r\n\r\nSaveClick() {\r\n  \r\n  this.formGroup.markAllAsTouched();\r\n  if (this.formGroup.valid) {\r\n    if (this.model.Id) {\r\n      this._DepartmentSectionMappingService.Edit(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-section-mapping\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._DepartmentSectionMappingService.Add(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-section-mapping\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nFormGroupInit() {\r\n  this.formGroup = this.formBuilder.group({\r\n\r\n    DepartmentCode:[null],\r\n    SectionMasterCode:[null],\r\n    NameHindi:[null, Validators.required],\r\n    NameEnglish:[null, Validators.required],\r\n    DisplayOrder:[null],\r\n    IconImage:[null],\r\n    BackGroundImage:[null],\r\n    BackGroungColor:[null],\r\n    BaseUrl:[null],\r\n\r\n  });\r\n}\r\n\r\n\r\nsetColor(data){\r\n  \r\nthis.model.BackGroungColor=data;\r\n}\r\n\r\n\r\n//#endregion  << Method >>\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2RlcGFydG1lbnQtc2VjdGlvbi1tYXBwaW5nL2RlcGFydG1lbnQtc2VjdGlvbi1tYXBwaW5nLmNvbXBvbmVudC5jc3MifQ== */\"","import { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { DepartmentSectionMappingFilterModel, DepartmentSectionMappingModel } from 'src/app/Shared/Model/department-section-mapping-model';\r\nimport { ColumnHeaderModel, DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { IndexModel, PermissionModel } from 'src/app/Shared/Model/general-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { DepartmentSectionMappingService } from 'src/app/Shared/Service/department-section-mapping.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-department-section-mapping',\r\n  templateUrl: './department-section-mapping.component.html',\r\n  styleUrls: ['./department-section-mapping.component.css']\r\n})\r\nexport class DepartmentSectionMappingComponent implements OnInit {\r\n\r\n//#region << Variable >>\r\n\r\nddlDepartment: UserDepartmentViewModel[];\r\nloginData: UserViewModel;\r\ndepartmentCode: string;\r\n\r\nlistModel: DepartmentSectionMappingModel[];\r\ndataSource: MatTableDataSource<DepartmentSectionMappingModel>;\r\n\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"DepartmentTitle\",\r\n  \"SectionMasterName\",\r\n  \"NameHindi\",\r\n  \"NameEnglish\",\r\n  \"DisplayOrder\",\r\n  \"IsActive\",\r\n  // \"CreatedDate\",\r\n  \"ModifiedByName\",\r\n  \"Action\",\r\n];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"SectionMasterName\", Text: \"Section Name\" },\r\n  { Value: \"NameHindi\", Text: \"Display Name Hindi\" },\r\n  { Value: \"NameEnglish\", Text: \"Display Name English\" },\r\n  { Value: \"DisplayOrder\", Text: \"Display Order\" },\r\n  { Value: \"DepartmentTitle\", Text: \"Department Title\" },\r\n\r\n];\r\n\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"NameHindi\", Text: \"Display Name Hindi\" },\r\n  { Value: \"NameEnglish\", Text: \"Display Name English\" },\r\n  { Value: \"DepartmentTitle\", Text: \"Department Title\" },\r\n];\r\n\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\nindexModel = this._commonService.modelSetGet(new DepartmentSectionMappingFilterModel()) as DepartmentSectionMappingFilterModel;\r\ntotalRecords: number;\r\nDepartmentSectionMappingPermission: PermissionModel = this._commonService.GetPagePermission(\r\n  \"/department-website/department-section-mapping\",\r\n  \"/department-website/department-section-mapping/add\",\r\n  \"\",\r\n  \"/department-website/department-section-mapping/update\"\r\n);\r\ndDLList: DDLModel;\r\n\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentComponent: AppComponent,\r\n  private readonly _DepartmentSectionMappingService: DepartmentSectionMappingService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _dialog: MatDialog,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService\r\n) {\r\n  this.DepartmentSectionMappingPermission.AddPageAccess\r\n    ? this._parentComponent.setpagelayout(\r\n        \"Department Section Mapping List:\",\r\n        \"add\",\r\n        \"Add\",\r\n        \"/department-website/department-section-mapping/add\"\r\n      )\r\n    : this._parentComponent.setpagelayout(\"Department Section Mapping List:\");\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.GetList();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  this.getDepartment();\r\n  this.GetDDLList();\r\n}\r\n\r\nGetDDLList() {\r\n  \r\n  this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentSectionMapping).subscribe(\r\n    data => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ngetDepartment() {\r\n  this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc =\r\n    event.direction === AppSetting.orderByDscAsc\r\n      ? AppSetting.orderByAsc\r\n      : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\nGetList() {\r\n  \r\n  this.indexModel.PageSize=101;\r\n  this._DepartmentSectionMappingService.GetList(this._commonService.modelSetGet(this.indexModel, true)).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.listModel = <DepartmentSectionMappingModel[]>(\r\n          data.Data.Data\r\n        );\r\n        this.dataSource = new MatTableDataSource<DepartmentSectionMappingModel>(\r\n          this.listModel\r\n        );\r\n        this.totalRecords = data.Data.TotalRecords;\r\n        if (!this.indexModel.IsPostBack) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nOnStatusClick(id) {\r\n  this._DepartmentSectionMappingService.ChangeActiveStatus(id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._commonService.ScrollingTop();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSearchByKeyword(event) {\r\n  \r\n  this.indexModel.IsPostBack = true;\r\n  this.indexModel.Search = event;\r\n  if (this.indexModel.ModifiedToDate) {\r\n    let uTCDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.indexModel.ModifiedToDate).getFullYear(),\r\n        new Date(this.indexModel.ModifiedToDate).getMonth(),\r\n        new Date(this.indexModel.ModifiedToDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.indexModel.ModifiedToDate = uTCDate;\r\n  }\r\n  if (this.indexModel.ModifiedFromDate) {\r\n    let uTCDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.indexModel.ModifiedFromDate).getFullYear(),\r\n        new Date(this.indexModel.ModifiedFromDate).getMonth(),\r\n        new Date(this.indexModel.ModifiedFromDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.indexModel.ModifiedFromDate = uTCDate;\r\n  }\r\n  this.indexModel.Page=1;\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\nReset() {\r\n  this.indexModel = new DepartmentSectionMappingFilterModel();\r\n  this.departmentCode=\"\";\r\n  this.GetList();\r\n  this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n}\r\n\r\ngetActiveDeActiveData(data) {\r\n  this.indexModel.Status = data;\r\n}\r\n//#endregion\r\n\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2RlcGFydG1lbnQtc3ViLW1lbnUtY2xhc3NpZmljYXRpb24vYWRkdXBkYXRlLWRlcGFydG1lbnQtc3ViLW1lbnUtY2xhc3NpZmljYXRpb24vYWRkdXBkYXRlLWRlcGFydG1lbnQtc3ViLW1lbnUtY2xhc3NpZmljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { DDLModel, DdlItemModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { DepartmentSubMenuModel } from 'src/app/Shared/Model/Master/department.model';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { DepartmentSubmenuClassificationService } from 'src/app/Shared/Service/department-submenu-classification.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-addupdate-department-sub-menu-classification',\r\n  templateUrl: './addupdate-department-sub-menu-classification.component.html',\r\n  styleUrls: ['./addupdate-department-sub-menu-classification.component.css']\r\n})\r\nexport class AddupdateDepartmentSubMenuClassificationComponent implements OnInit {\r\n\r\n  //#region << Variable >>\r\n\r\n  formGroup: FormGroup;\r\n  model: DepartmentSubMenuModel;\r\n  title: string;\r\n  loginData: UserViewModel;\r\n  dDLList: DDLModel = new DDLModel();\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n  ImagefileValidationMsg: string;\r\n  ddlmainmenulist: DdlItemModel[];\r\n  ddlModuleCategory: DdlItemModel[];\r\n  ddlModuleSubCategory: DdlItemModel[];\r\n  //#endregion\r\n\r\n  //#region << constructor >>\r\n\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _DepartmentSubmenuClassificationService: DepartmentSubmenuClassificationService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _router: Router,\r\n    private _route: ActivatedRoute,\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly _userService: UserService,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _commonService: CommonService\r\n  ) {\r\n    this.model = new DepartmentSubMenuModel();\r\n    const id = this._route.snapshot.params.id;\r\n    if (id) {\r\n      this.model.Id = id;\r\n      this.GetById();\r\n      this._parentApi.setpagelayout(\"Update Department Sub-Menu Classification :\", \"keyboard_backspace\",\r\n        \"Back To List\", \"department-website/department-submenu-Classification\");\r\n      this.title = \"Update\";\r\n    }\r\n    else {\r\n      this._parentApi.setpagelayout(\"Add Department Sub-Menu Classification :\", \"keyboard_backspace\",\r\n        \"Back To List\", \"department-website/department-submenu-Classification\");\r\n      this.title = \"Add\";\r\n    }\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region << Method >>\r\n\r\n  ngOnInit() {\r\n    this.FormGroupInit();\r\n    this.GetDDLList();\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.getDepartment();\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    }, error => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentSubMenu).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        let ddlData = <DDLModel>data.Data;\r\n        this.dDLList.ddlClassification = ddlData.ddlClassification;\r\n        this.dDLList.ddlModuleCategoryList = ddlData.ddlModuleCategoryList;\r\n        //this.dDLList.ddlDepartmentSubMenuList = ddlData.ddlDepartmentSubMenuList;\r\n        this.dDLList.RadioDepartmentSubMenuShowAsSeparate = ddlData.RadioDepartmentSubMenuShowAsSeparate;\r\n        this.dDLList.RadioDepartmentSubMenuRedirectionManagement = ddlData.RadioDepartmentSubMenuRedirectionManagement;\r\n      }\r\n    }, (error) => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  GetDeptSubMenuList() {\r\n    let deptCode = this.model.DepartmentCode ? this.model.DepartmentCode : 0;\r\n    this._commonService.GetDDL(AppSetting.ddlDepartmentSubMenuList, deptCode).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        let ddlData = <DDLModel>data.Data;\r\n        this.dDLList.ddlDepartmentSubMenuList = ddlData.ddlDepartmentSubMenuList;\r\n      }\r\n    }, (error) => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  handleFileInput(event: any) {\r\n    if (event.target.files.item(0).type.match(\"application/pdf\")) {\r\n      var reader = new FileReader();\r\n      reader.onload = (event: any) => {\r\n        this.model.PDFAttachment = event.target.result;\r\n      };\r\n      reader.readAsDataURL(event.target.files.item(0));\r\n      this.ImagefileValidationMsg = \"\";\r\n    } else {\r\n      this.ImagefileValidationMsg = \"only accept PDF file \";\r\n    }\r\n  }\r\n\r\n  Removepdf() {\r\n    this.model.PDFAttachment = undefined;\r\n  }\r\n\r\n  downloadMyFile(temp) {\r\n    const link = document.createElement('a');\r\n    link.setAttribute('href', temp);\r\n    link.setAttribute('download', `Documents`);\r\n    document.body.appendChild(link);\r\n    link.click();\r\n    link.remove();\r\n  }\r\n\r\n  GetById() {\r\n    this._DepartmentSubmenuClassificationService.GetById(this.model.Id).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        this.model = <DepartmentSubMenuModel>data.Data;\r\n        if (this.model.DepartmentCode) {\r\n          this.model.DepartmentCode = String(this.model.DepartmentCode);\r\n          this.GetDepartmentMainMenuByDepartment(this.model.DepartmentCode);\r\n          this.GetDeptSubMenuList();\r\n        }\r\n        if (this.model.DepartmentMainMenuCode) {\r\n          this.model.DepartmentMainMenuCode = String(this.model.DepartmentMainMenuCode);\r\n        }\r\n        if (this.model.ModuleCategoryCode) {\r\n          this.model.ModuleCategoryCode = String(this.model.ModuleCategoryCode);\r\n        }\r\n        if (this.model.SubMenuShowAsSeparateCode) {\r\n          this.model.SubMenuShowAsSeparateCode = String(this.model.SubMenuShowAsSeparateCode);\r\n        }\r\n        if (this.model.ModuleName) {\r\n          this.GetModuleCategoryByModule(this.model.ModuleName)\r\n        }\r\n        if (this.model.IsSubMenu) {\r\n          this.model.DepartmentSubMenuCode = String(this.model.DepartmentSubMenuCode);\r\n        }\r\n        if (this.model.RedirectionManagementRadio) {\r\n          this.model.RedirectionManagementRadio = String(this.model.RedirectionManagementRadio);\r\n        }\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n      (error) => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleImageFileInput(event: any) {\r\n    if (event.target.files.item(0).type.match(\"image/*\")) {\r\n      if (\r\n        event.target.files.item(0).size <\r\n        this._commonService.ConvertMbintoByte(\r\n          Number(localStorage.getItem(\"FileValidation\"))\r\n        )\r\n      ) {\r\n        const reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n          this.model.IconImage = event.target.result;\r\n          this.ImagefileValidationMsg = \"\";\r\n        };\r\n        reader.readAsDataURL(event.target.files.item(0));\r\n      } else {\r\n        this.ImagefileValidationMsg = \"Attachment must be less than \" +\r\n          localStorage.getItem(\"FileValidation\") +\r\n          \" MB.\";\r\n      }\r\n    } else {\r\n      this.ImagefileValidationMsg = \"only image/*\";\r\n    }\r\n  }\r\n\r\n  RemoveImageFile() {\r\n    if (this.model.IconImage) {\r\n      this.model.IconImage = null;\r\n    }\r\n  }\r\n\r\n  SaveClick() {\r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      if (this.model.Id) {\r\n        this._DepartmentSubmenuClassificationService.Edit(this.model).subscribe((data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-submenu-Classification\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        }, (error) => {\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n      else {\r\n        this._DepartmentSubmenuClassificationService.Add(this.model).subscribe((data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"department-website/department-submenu-Classification\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        }, (error) => {\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  FormGroupInit() {\r\n    this.formGroup = this.formBuilder.group({\r\n      Id: [null],\r\n      DepartmentCode: [null],\r\n      DepartmentMainMenuCode: [null],\r\n      ModuleName: [null],\r\n      ModuleCategoryCode: [null],\r\n      IconImage: [null],\r\n      IsSubMenu: [null],\r\n      DisplayNameEnglish: [null, Validators.required],\r\n      DisplayNameHindi: [null, Validators.required],\r\n      DisplayOrder: [null],\r\n      DepartmentSubMenuCode: [null],\r\n      ModuleSubCategoryCode: [null],\r\n      SubMenuShowAsSeparateCode: [null],\r\n      RedirectionManagementRadio: [null],\r\n      PDFAttachment: [null],\r\n      RedirectionURL: [null],\r\n    });\r\n  }\r\n\r\n  GetDepartmentMainMenuByDepartment(code) {\r\n    if (code) {\r\n      this._commonService.GetDepartmentMainMenuByDepartment(Number(code)).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlmainmenulist = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  GetModuleCategoryByModule(code) {\r\n    this.GetModuleSubCategoryByModule(code, String(this.model.ModuleCategoryCode));\r\n    if (code) {\r\n      this._commonService.GetModuleCategoryByModule(Number(code)).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlModuleCategory = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  GetModuleSubCategoryByModule(moduleCode = \"\", moduleCatCode = \"\") {\r\n    if (moduleCode || moduleCatCode) {\r\n      this._commonService.GetModuleSubCategoryByModule(Number(moduleCode), Number(moduleCatCode)).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlModuleSubCategory = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  //#endregion  << Method >>\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2RlcGFydG1lbnQtc3ViLW1lbnUtY2xhc3NpZmljYXRpb24vZGVwYXJ0bWVudC1zdWItbWVudS1jbGFzc2lmaWNhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IndexModel, PermissionModel } from 'src/app/Shared/Model/general-model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { DepartmentSubMenuFilterModel, DepartmentSubMenuListModel } from 'src/app/Shared/Model/Master/department.model';\r\nimport { ColumnHeaderModel, DdlItemModel, DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { DepartmentSubmenuClassificationService } from 'src/app/Shared/Service/department-submenu-classification.service';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-department-sub-menu-classification',\r\n  templateUrl: './department-sub-menu-classification.component.html',\r\n  styleUrls: ['./department-sub-menu-classification.component.css']\r\n})\r\n\r\nexport class DepartmentSubMenuClassificationComponent implements OnInit {\r\n\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n  loginData: UserViewModel;\r\n  departmentCode: string;\r\n\r\n  listModel: DepartmentSubMenuListModel[];\r\n  dataSource: MatTableDataSource<DepartmentSubMenuListModel>;\r\n  displayedColumns: string[] = [\"index\", \"Department\", \"Type\", \"Module\", \"DisplayNameEnglish\", \"DisplayOrder\",\r\n    //\"CreatedDate\", \r\n    \"ModifiedBy\", \"Action\"];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    // { Value: \"DisplayNameHindi\", Text: \"Display Name Hindi\" },\r\n    // { Value: \"DisplayNameEnglish\", Text: \"Display Name English\" },\r\n    // { Value: \"DisplayOrder\", Text: \"Display Order\" },\r\n    //{ Value: \"DepartmentMainMenuName\", Text: \"Department Main Menu\" },\r\n    //{ Value: \"ModuleCategoryNameEnglish\", Text: \"Module Category\" },\r\n  ];\r\n\r\n  searchColumns: ColumnHeaderModel[] = [\r\n    { Value: \"DisplayNameHindi\", Text: \"Display Name Hindi\" },\r\n    { Value: \"DisplayNameEnglish\", Text: \"Display Name English\" },\r\n    { Value: \"DepartmentTitle\", Text: \"Department Title\" },\r\n  ];\r\n\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  // indexModel: DepartmentSubMenuFilterModel  ;\r\n\r\n  indexModel = this._commonService.modelSetGet(new DepartmentSubMenuFilterModel()) as DepartmentSubMenuFilterModel;\r\n\r\n  totalRecords: number;\r\n  DepartmentSubMenuClassificationPermission: PermissionModel = this._commonService.GetPagePermission(\r\n    \"/department-website/department-submenu-Classification\",\r\n    \"/department-website/department-submenu-Classification/add\",\r\n    \"\",\r\n    \"/department-website/department-submenu-Classification/update\"\r\n  );\r\n  dDLList: DDLModel;\r\n  ddlmainmenulist: DdlItemModel[];\r\n  ddlModuleCategory: DdlItemModel[];\r\n  ddlModuleSubCategory: DdlItemModel[];\r\n\r\n  constructor(\r\n    private _parentComponent: AppComponent,\r\n    private readonly _DepartmentSubmenuClassificationService: DepartmentSubmenuClassificationService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _userService: UserService,\r\n    private readonly _authService: AuthenticationService\r\n  ) {\r\n    this.DepartmentSubMenuClassificationPermission.AddPageAccess\r\n      ? this._parentComponent.setpagelayout(\r\n        \"Department Sub-Menu Classification List:\",\r\n        \"add\",\r\n        \"Add\",\r\n        \"/department-website/department-submenu-Classification/add\"\r\n      )\r\n      : this._parentComponent.setpagelayout(\"Department Sub-Menu Classification List:\");\r\n    // this.indexModel = new DepartmentSubMenuFilterModel();\r\n\r\n    if (this.indexModel.DepartmentCode) {\r\n      this.GetDepartmentMainMenuByDepartment(this.indexModel.DepartmentCode);\r\n    }\r\n    if (this.indexModel.ModuleName) {\r\n      this.GetModuleCategoryByModule(this.indexModel.ModuleName);\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetList();\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.getDepartment();\r\n    this.GetDDLList();\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(data => {\r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n      }\r\n    }, error => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.DDlKeyForDepartmentSubMenuFilter).subscribe(data => {\r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    }, error => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  GetModuleCategoryByModule(code) {\r\n    if (code) {\r\n      this._commonService.GetModuleCategoryByModule(Number(code)).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlModuleCategory = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  SortData(event) {\r\n    this.indexModel.OrderBy = event.active;\r\n    this.indexModel.OrderByAsc = event.direction === AppSetting.orderByDscAsc ? AppSetting.orderByAsc : AppSetting.orderByDsc;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n    this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n  }\r\n\r\n  GetList() {\r\n    this.indexModel.PageSize = 101;\r\n    this._DepartmentSubmenuClassificationService.GetList(this._commonService.modelSetGet(this.indexModel, true)).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        this.listModel = <DepartmentSubMenuListModel[]>(data.Data.Data);\r\n\r\n        console.log('listModel');\r\n        console.log(this.listModel);\r\n\r\n        this.dataSource = new MatTableDataSource<DepartmentSubMenuListModel>(this.listModel);\r\n        this.totalRecords = data.Data.TotalRecords;\r\n        if (!this.indexModel.IsPostBack) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    }, (error) => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  OnStatusClick(id) {\r\n    this._DepartmentSubmenuClassificationService.ChangeActiveStatus(id).subscribe((data) => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._commonService.ScrollingTop();\r\n        this._alertService.success(data.Message);\r\n      }\r\n      else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    }, (error) => {\r\n      this._alertService.error(error.message);\r\n    });\r\n  }\r\n\r\n  GetDepartmentMainMenuByDepartment(code) {\r\n    if (code) {\r\n      this._commonService.GetDepartmentMainMenuByDepartment(Number(code)).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlmainmenulist = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n  getActiveDeActiveData(data) {\r\n    this.indexModel.Status = data;\r\n  }\r\n\r\n  SearchByKeyword(event) {\r\n    this.indexModel.IsPostBack = true;\r\n    this.indexModel.Search = event;\r\n    if (this.indexModel.ModifiedToDate) {\r\n      let uTCDate = new Date(\r\n        Date.UTC(\r\n          new Date(this.indexModel.ModifiedToDate).getFullYear(),\r\n          new Date(this.indexModel.ModifiedToDate).getMonth(),\r\n          new Date(this.indexModel.ModifiedToDate).getDate()\r\n        )\r\n      ).toISOString();\r\n      this.indexModel.ModifiedToDate = uTCDate;\r\n    }\r\n    if (this.indexModel.ModifiedFromDate) {\r\n      let uTCDate = new Date(\r\n        Date.UTC(\r\n          new Date(this.indexModel.ModifiedFromDate).getFullYear(),\r\n          new Date(this.indexModel.ModifiedFromDate).getMonth(),\r\n          new Date(this.indexModel.ModifiedFromDate).getDate()\r\n        )\r\n      ).toISOString();\r\n      this.indexModel.ModifiedFromDate = uTCDate;\r\n    }\r\n    this.indexModel.Page = 1;\r\n    this.GetList();\r\n    this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n  }\r\n\r\n  Reset() {\r\n    this.indexModel = new DepartmentSubMenuFilterModel();\r\n    this.departmentCode = \"\";\r\n    this.GetList();\r\n    this.indexModel = this._commonService.modelSetGet(this.indexModel, true)\r\n  }\r\n\r\n  GetModuleSubCategoryByModule(moduleCode, moduleCatCode) {\r\n    if (moduleCode || moduleCatCode) {\r\n      this._commonService.GetModuleSubCategoryByModule(moduleCode, moduleCatCode).subscribe(data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlModuleSubCategory = <DdlItemModel[]>data.Data;\r\n        }\r\n      }, error => {\r\n        this._alertService.error(error.message);\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MenuClassificationComponent } from './menu-classification/menu-classification.component';\r\nimport { AddupdateMenuClassificationComponent } from './menu-classification/addupdate-menu-classification/addupdate-menu-classification.component';\r\nimport { ClassificationPagetypeComponent } from './classification-pagetype/classification-pagetype.component';\r\nimport { AddupdateClassificationpagetypeComponent } from './classification-pagetype/addupdate-classificationpagetype/addupdate-classificationpagetype.component';\r\nimport { DepartmentMenuClassificationComponent } from './department-menu-classification/department-menu-classification.component';\r\nimport { AddupdateDepartmentMenuClassificationComponent } from './department-menu-classification/addupdate-department-menu-classification/addupdate-department-menu-classification.component';\r\nimport { DepartmentSubMenuClassificationComponent } from './department-sub-menu-classification/department-sub-menu-classification.component';\r\nimport { AddupdateDepartmentSubMenuClassificationComponent } from './department-sub-menu-classification/addupdate-department-sub-menu-classification/addupdate-department-sub-menu-classification.component';\r\nimport { AddupdatedeptSectionMappingComponent } from './department-section-mapping/addupdatedept-section-mapping/addupdatedept-section-mapping.component';\r\nimport { DepartmentSectionMappingComponent } from './department-section-mapping/department-section-mapping.component';\r\nimport { SectionMasterComponent } from './section-master/section-master.component';\r\nimport { AddupdateSectionMasterComponent } from './section-master/addupdate-section-master/addupdate-section-master.component';\r\nimport { ImportSectionMenuSubMenuComponent } from './import-section-menu-sub-menu/import-section-menu-sub-menu.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"menu-Classification\",\r\n    component: MenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"menu-Classification/add\",\r\n    component: AddupdateMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"menu-Classification/update/:id\",\r\n    component: AddupdateMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"classification-Pagetype\",\r\n    component: ClassificationPagetypeComponent,\r\n  },\r\n  {\r\n    path: \"classification-Pagetype/add\",\r\n    component: AddupdateClassificationpagetypeComponent,\r\n  },\r\n  {\r\n    path: \"classification-Pagetype/update/:id\",\r\n    component: AddupdateClassificationpagetypeComponent,\r\n  },\r\n  {\r\n    path: \"department-menu-Classification\",\r\n    component: DepartmentMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"department-menu-Classification/add\",\r\n    component: AddupdateDepartmentMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"department-menu-Classification/update/:id\",\r\n    component: AddupdateDepartmentMenuClassificationComponent,\r\n  }\r\n  ,\r\n  {\r\n    path: \"department-submenu-Classification\",\r\n    component: DepartmentSubMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"department-submenu-Classification/add\",\r\n    component: AddupdateDepartmentSubMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"department-submenu-Classification/update/:id\",\r\n    component: AddupdateDepartmentSubMenuClassificationComponent,\r\n  },\r\n  {\r\n    path: \"department-section-mapping\",\r\n    component: DepartmentSectionMappingComponent,\r\n  },\r\n  {\r\n    path: \"department-section-mapping/add\",\r\n    component: AddupdatedeptSectionMappingComponent,\r\n  },\r\n  {\r\n    path: \"department-section-mapping/update/:id\",\r\n    component: AddupdatedeptSectionMappingComponent,\r\n  },\r\n  {\r\n    path: \"section-master\",\r\n    component: SectionMasterComponent,\r\n  },\r\n  {\r\n    path: \"section-master/add\",\r\n    component: AddupdateSectionMasterComponent,\r\n  },\r\n  {\r\n    path: \"section-master/update/:id\",\r\n    component: AddupdateSectionMasterComponent,\r\n  },\r\n  {\r\n    path: \"import-section-menu-submenu\",\r\n    component: ImportSectionMenuSubMenuComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DepartmentWebsiteRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DepartmentWebsiteRoutingModule } from './department-website-routing.module';\r\nimport { AppMaterialModule } from 'src/app/Shared/app-material/app-material.module';\r\nimport { SchemeModule } from '../scheme/scheme.module';\r\nimport { MenuClassificationComponent } from './menu-classification/menu-classification.component';\r\nimport { AddupdateMenuClassificationComponent } from './menu-classification/addupdate-menu-classification/addupdate-menu-classification.component';\r\nimport { ClassificationPagetypeComponent } from './classification-pagetype/classification-pagetype.component';\r\nimport { AddupdateClassificationpagetypeComponent } from './classification-pagetype/addupdate-classificationpagetype/addupdate-classificationpagetype.component';\r\nimport { DepartmentMenuClassificationComponent } from './department-menu-classification/department-menu-classification.component';\r\nimport { AddupdateDepartmentMenuClassificationComponent } from './department-menu-classification/addupdate-department-menu-classification/addupdate-department-menu-classification.component';\r\nimport { DepartmentSubMenuClassificationComponent } from './department-sub-menu-classification/department-sub-menu-classification.component';\r\nimport { AddupdateDepartmentSubMenuClassificationComponent } from './department-sub-menu-classification/addupdate-department-sub-menu-classification/addupdate-department-sub-menu-classification.component';\r\nimport { DepartmentSectionMappingComponent } from './department-section-mapping/department-section-mapping.component';\r\nimport { AddupdatedeptSectionMappingComponent } from './department-section-mapping/addupdatedept-section-mapping/addupdatedept-section-mapping.component';\r\nimport { SectionMasterComponent } from './section-master/section-master.component';\r\nimport { AddupdateSectionMasterComponent } from './section-master/addupdate-section-master/addupdate-section-master.component';\r\nimport { ImportSectionMenuSubMenuComponent } from './import-section-menu-sub-menu/import-section-menu-sub-menu.component';\r\n\r\n@NgModule({\r\n  declarations: [MenuClassificationComponent, AddupdateMenuClassificationComponent, ClassificationPagetypeComponent, AddupdateClassificationpagetypeComponent, DepartmentMenuClassificationComponent, AddupdateDepartmentMenuClassificationComponent, DepartmentSubMenuClassificationComponent, AddupdateDepartmentSubMenuClassificationComponent, DepartmentSectionMappingComponent, AddupdatedeptSectionMappingComponent, SectionMasterComponent, AddupdateSectionMasterComponent, ImportSectionMenuSubMenuComponent],\r\n  imports: [\r\n    CommonModule,\r\n    DepartmentWebsiteRoutingModule,\r\n    AppMaterialModule,\r\n    SchemeModule\r\n  ]\r\n})\r\nexport class DepartmentWebsiteModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL2ltcG9ydC1zZWN0aW9uLW1lbnUtc3ViLW1lbnUvaW1wb3J0LXNlY3Rpb24tbWVudS1zdWItbWVudS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { DDLModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport { ImportSectionMenuAndSubMenuFilterModel } from \"src/app/Shared/Model/Master/department.model\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { DepartmentSubmenuClassificationService } from \"src/app/Shared/Service/department-submenu-classification.service\";\r\n\r\n@Component({\r\n  selector: \"app-import-section-menu-sub-menu\",\r\n  templateUrl: \"./import-section-menu-sub-menu.component.html\",\r\n  styleUrls: [\"./import-section-menu-sub-menu.component.css\"],\r\n})\r\nexport class ImportSectionMenuSubMenuComponent implements OnInit {\r\n  //#region << Variable >>\r\n\r\n  formGroup: FormGroup;\r\n  model: ImportSectionMenuAndSubMenuFilterModel;\r\n  dDLList: DDLModel;\r\n  //#endregion\r\n\r\n  //#region << constructor >>\r\n\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _DepartmentSubmenuClassificationService: DepartmentSubmenuClassificationService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly _commonService: CommonService\r\n  ) {\r\n    \r\n    this.model = new ImportSectionMenuAndSubMenuFilterModel();\r\n    this._parentApi.setpagelayout(\r\n      \"Import Section, Menu and Sub Menu Form single department to multiple department :\",\r\n      \"\",\r\n      \"\",\r\n      \"\"\r\n    );\r\n  }\r\n\r\n  //#endregion\r\n\r\n  //#region << Method >>\r\n\r\n  ngOnInit() {\r\n    this.FormGroupInit();\r\n    this.GetDDLList();\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService\r\n      .GetAllDDL(AppSetting.DDlKeyForImportSectionMenuAndSubMenu)\r\n      .subscribe(\r\n        (data) => {\r\n          \r\n          if (data.IsSuccess) {\r\n            this.dDLList = <DDLModel>data.Data;\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  SaveClick() {\r\n    \r\n    this.formGroup.markAllAsTouched();\r\n    if (this.formGroup.valid) {\r\n      this.model.ToDepartmentCodes=this.model.ToDepartmentList.toString();\r\n      this._DepartmentSubmenuClassificationService\r\n        .ImportSectionMenuAndSubMenu(this.model)\r\n        .subscribe(\r\n          (data) => {\r\n            if (data.IsSuccess) {\r\n            //  this._commonService.ScrollingTop();\r\n              this._alertService.success(data.Message);\r\n              window.alert(data.Message);\r\n            } else {\r\n              this._alertService.error(data.Message);\r\n            }\r\n          },\r\n          (error) => {\r\n            this._alertService.error(error.message);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  FormGroupInit() {\r\n    this.formGroup = this.formBuilder.group({\r\n      FromDepartmentCode: [null, Validators.required],\r\n      ToDepartmentList: [null, Validators.required],\r\n      IsSectionImport: [null],\r\n      IsMenuImport: [null],\r\n      IsSubMenuImport: [null],\r\n    });\r\n  }\r\n\r\n  //#endregion  << Method >>\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL21lbnUtY2xhc3NpZmljYXRpb24vYWRkdXBkYXRlLW1lbnUtY2xhc3NpZmljYXRpb24vYWRkdXBkYXRlLW1lbnUtY2xhc3NpZmljYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { MenuClassificationService } from 'src/app/Shared/Service/menu-classification.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { MenuClassificationModel } from 'src/app/Shared/Model/Master/menu-classification-model';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-addupdate-menu-classification',\r\n  templateUrl: './addupdate-menu-classification.component.html',\r\n  styleUrls: ['./addupdate-menu-classification.component.css']\r\n})\r\nexport class AddupdateMenuClassificationComponent implements OnInit {\r\n //#region << Variable >>\r\n\r\n formGroup: FormGroup;\r\n model: MenuClassificationModel;\r\n title: string;\r\n loginData: UserViewModel;\r\n dDLList: DDLModel;\r\n //#endregion\r\n\r\n //#region << constructor >>\r\n\r\n constructor(\r\n   private _parentApi: AppComponent,\r\n   private readonly _MenuClassificationService: MenuClassificationService,\r\n   private readonly _alertService: AlertService,\r\n   private readonly _router: Router,\r\n   private _route: ActivatedRoute,\r\n   private readonly formBuilder: FormBuilder,\r\n   private readonly _userService: UserService,\r\n   private readonly _authService: AuthenticationService,\r\n   private readonly _commonService: CommonService\r\n ) {\r\n   this.model = new MenuClassificationModel();\r\n   const id = this._route.snapshot.params.id;\r\n   if (id) {\r\n     this.model.Id = id;\r\n     this.GetById();\r\n     this._parentApi.setpagelayout(\r\n       \"Update Menu Classification :\",\r\n       \"keyboard_backspace\",\r\n       \"Back To List\",\r\n       \"department-website/menu-Classification\"\r\n     );\r\n     this.title = \"Update\";\r\n   } else {\r\n     this._parentApi.setpagelayout(\r\n       \"Add Menu Classification :\",\r\n       \"keyboard_backspace\",\r\n       \"Back To List\",\r\n       \"department-website/menu-Classification\"\r\n     );\r\n     this.title = \"Add\";\r\n   }\r\n }\r\n\r\n //#endregion\r\n\r\n //#region << Method >>\r\n\r\n ngOnInit() {\r\n   this.FormGroupInit();\r\n   this.GetDDLList();\r\n   this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n\r\n }\r\n\r\n GetDDLList() {\r\n   this._commonService.GetAllDDL(AppSetting.DDlKeyForMenuClassification).subscribe(\r\n     (data) => {\r\n       \r\n       if (data.IsSuccess) {\r\n         this.dDLList = <DDLModel>data.Data;\r\n       }\r\n     },\r\n     (error) => {\r\n       this._alertService.error(error.message);\r\n     }\r\n   );\r\n }\r\n\r\n\r\n GetById() {\r\n   this._MenuClassificationService.GetById(this.model.Id).subscribe(\r\n     (data) => {\r\n       if (data.IsSuccess) {\r\n         \r\n         this.model = <MenuClassificationModel>data.Data;\r\n        if(this.model.ClassificationType)\r\n        {\r\n          this.model.ClassificationType = String(this.model.ClassificationType);\r\n        }\r\n        if (this.model.IsSubMenu) {\r\n          this.model.MenuClassificationCode = String(this.model.MenuClassificationCode)\r\n        }\r\n\r\n       } else {\r\n         this._alertService.error(data.Message);\r\n       }\r\n     },\r\n     (error) => {\r\n       this._alertService.error(error.message);\r\n     }\r\n   );\r\n }\r\n\r\n SaveClick() {\r\n   \r\n\r\n   this.formGroup.markAllAsTouched();\r\n   if (this.formGroup.valid) {\r\n     if (this.model.Id) {\r\n       this._MenuClassificationService.Edit(this.model).subscribe(\r\n         (data) => {\r\n           if (data.IsSuccess) {\r\n             this._alertService.success(data.Message);\r\n             this._router.navigate([\"department-website/menu-Classification\"]);\r\n           } else {\r\n             this._alertService.error(data.Message);\r\n           }\r\n         },\r\n         (error) => {\r\n           this._alertService.error(error.message);\r\n         }\r\n       );\r\n     } else {\r\n       this._MenuClassificationService.Add(this.model).subscribe(\r\n         (data) => {\r\n           if (data.IsSuccess) {\r\n             this._alertService.success(data.Message);\r\n             this._router.navigate([\"department-website/menu-Classification\"]);\r\n           } else {\r\n             this._alertService.error(data.Message);\r\n           }\r\n         },\r\n         (error) => {\r\n           this._alertService.error(error.message);\r\n         }\r\n       );\r\n     }\r\n\r\n   }\r\n\r\n }\r\n\r\n FormGroupInit() {\r\n   this.formGroup = this.formBuilder.group({\r\n     NameEnglish: [null, Validators.required],//, Validators.required\r\n     NameHindi: [null],\r\n     DisplayOrder:[null],\r\n     Remarks:[null],\r\n     MenuTypeMappingList: [null],\r\n     IsSubMenu:[null],\r\n     MenuClassificationCode:[null]\r\n   });\r\n }\r\n //#endregion  << Method >>\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL21lbnUtY2xhc3NpZmljYXRpb24vbWVudS1jbGFzc2lmaWNhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","import { MatTableDataSource, MatSort, MatPaginator, MatDialog } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { IndexModel, PermissionModel } from 'src/app/Shared/Model/general-model';\r\nimport { MenuClassificationModel } from 'src/app/Shared/Model/Master/menu-classification-model';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { MenuClassificationService } from 'src/app/Shared/Service/menu-classification.service';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-menu-classification',\r\n  templateUrl: './menu-classification.component.html',\r\n  styleUrls: ['./menu-classification.component.css']\r\n})\r\nexport class MenuClassificationComponent implements OnInit {\r\n //#region << Variable >>\r\n listModel: MenuClassificationModel[];\r\n dataSource: MatTableDataSource<MenuClassificationModel>;\r\n displayedColumns: string[] = [\r\n   \"index\",\r\n   \"NameHindi\",\r\n   \"NameEnglish\",\r\n   \"DisplayOrder\",\r\n   \"Remarks\",\r\n   \"IsActive\",\r\n   \"Action\",\r\n ];\r\n ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n   { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n   { Value: \"NameEnglish\", Text: \"NameEnglish\" },\r\n   { Value: \"DisplayOrder\", Text: \"Display Order\" },\r\n   { Value: \"Remarks\", Text: \"Remarks\" },\r\n\r\n ];\r\n\r\n searchColumns: ColumnHeaderModel[] = [\r\n   { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n   { Value: \"NameEnglish\", Text: \"Name English\" },\r\n\r\n ];\r\n\r\n columnsToDisplay: string[] = this.displayedColumns.slice();\r\n @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n indexModel: IndexModel;\r\n totalRecords: number;\r\n MenuClassificationPermission: PermissionModel = this._commonService.GetPagePermission(\r\n   \"/department-website/menu-Classification\",\r\n   \"/department-website/menu-Classification/add\",\r\n   \"\",\r\n   \"/department-website/menu-Classification/update\"\r\n );\r\n\r\n //#endregion\r\n\r\n //#region << constructor >>\r\n\r\n constructor(\r\n   private _parentComponent: AppComponent,\r\n   private readonly _menuClassificationService: MenuClassificationService,\r\n   private readonly _alertService: AlertService,\r\n   public readonly _commonService: CommonService,\r\n   private readonly _dialog: MatDialog\r\n ) {\r\n   this.MenuClassificationPermission.AddPageAccess\r\n     ? this._parentComponent.setpagelayout(\r\n         \"Menu Classification List:\",\r\n         \"add\",\r\n         \"Add\",\r\n         \"/department-website/menu-Classification/add\"\r\n       )\r\n     : this._parentComponent.setpagelayout(\"Menu Classification List:\");\r\n   this.indexModel = new IndexModel();\r\n }\r\n\r\n //#endregion\r\n\r\n //#region << Method >>\r\n\r\n ngOnInit() {\r\n   this.GetList();\r\n }\r\n\r\n SortData(event) {\r\n   this.indexModel.OrderBy = event.active;\r\n   this.indexModel.OrderByAsc =\r\n     event.direction === AppSetting.orderByDscAsc\r\n       ? AppSetting.orderByAsc\r\n       : AppSetting.orderByDsc;\r\n   this.indexModel.IsPostBack = true;\r\n   this.GetList();\r\n }\r\n\r\n onPaginateChange(event) {\r\n   this.indexModel.Page = event.pageIndex + 1;\r\n   this.indexModel.PageSize = event.pageSize;\r\n   this.indexModel.IsPostBack = true;\r\n   this.GetList();\r\n }\r\n\r\n GetList() {\r\n   \r\n   this.indexModel.PageSize=101;\r\n   this._menuClassificationService.GetList(this.indexModel).subscribe(\r\n     (data) => {\r\n       if (data.IsSuccess) {\r\n         \r\n         this.listModel = <MenuClassificationModel[]>(\r\n           data.Data.Data\r\n         );\r\n         this.dataSource = new MatTableDataSource<MenuClassificationModel>(\r\n           this.listModel\r\n         );\r\n         this.totalRecords = data.Data.TotalRecords;\r\n         if (!this.indexModel.IsPostBack) {\r\n           this.dataSource.paginator = this.paginator;\r\n           this.dataSource.sort = this.sort;\r\n         }\r\n       }\r\n     },\r\n     (error) => {\r\n       this._alertService.error(error.message);\r\n     }\r\n   );\r\n }\r\n\r\n OnStatusClick(id) {\r\n   this._menuClassificationService.ChangeActiveStatus(id).subscribe(\r\n     (data) => {\r\n       if (data.IsSuccess) {\r\n         this.GetList();\r\n         this._commonService.ScrollingTop();\r\n         this._alertService.success(data.Message);\r\n       } else {\r\n         this._alertService.error(data.Message);\r\n       }\r\n     },\r\n     (error) => {\r\n       this._alertService.error(error.message);\r\n     }\r\n   );\r\n }\r\n\r\n SearchByKeyword(event) {\r\n   \r\n   this.indexModel.Search = event;\r\n   this.GetList();\r\n }\r\n\r\n Reset() {\r\n   this.indexModel = new IndexModel();\r\n   this.GetList();\r\n }\r\n //#endregion\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL3NlY3Rpb24tbWFzdGVyL2FkZHVwZGF0ZS1zZWN0aW9uLW1hc3Rlci9hZGR1cGRhdGUtc2VjdGlvbi1tYXN0ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { SectionMasterModel } from 'src/app/Shared/Model/section-master-model';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { SectionMasterService } from 'src/app/Shared/Service/section-master.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-addupdate-section-master',\r\n  templateUrl: './addupdate-section-master.component.html',\r\n  styleUrls: ['./addupdate-section-master.component.css']\r\n})\r\nexport class AddupdateSectionMasterComponent implements OnInit {\r\n\r\n//#region << Variable >>\r\nformGroup: FormGroup;\r\nmodel: SectionMasterModel;\r\ntitle: string;\r\nloginData: UserViewModel;\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentApi: AppComponent,\r\n  private readonly _sectionMasterService: SectionMasterService,\r\n  private readonly _alertService: AlertService,\r\n  private readonly _router: Router,\r\n  private _route: ActivatedRoute,\r\n  private readonly formBuilder: FormBuilder,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n  private readonly _commonService: CommonService\r\n) {\r\n  this.model = new SectionMasterModel();\r\n  const id = this._route.snapshot.params.id;\r\n  if (id) {\r\n    this.model.Id = id;\r\n    this.GetById();\r\n    this._parentApi.setpagelayout(\r\n      \"Update Section Master :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"/department-website/section-master\"\r\n    );\r\n    this.title = \"Update\";\r\n  } else {\r\n    this._parentApi.setpagelayout(\r\n      \"Add Section Master :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"/department-website/section-master\"\r\n    );\r\n    this.title = \"Add\";\r\n  }\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.FormGroupInit();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n}\r\n\r\n\r\nGetById() {\r\n  this._sectionMasterService.GetById(this.model.Id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.model = <SectionMasterModel>data.Data;\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nSaveClick() {\r\n  \r\n  this.formGroup.markAllAsTouched();\r\n  if (this.formGroup.valid) {\r\n    if (this.model.Id) {\r\n      this._sectionMasterService.Edit(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"/department-website/section-master\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._sectionMasterService.Add(this.model).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"/department-website/section-master\"]);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nFormGroupInit() {\r\n  this.formGroup = this.formBuilder.group({\r\n    Id:[null],\r\n    Code:[null],\r\n    ComponentName:[null, Validators.required],\r\n    SelectorName:[null, Validators.required],\r\n    ShortDescription:[null],\r\n    IsActive:[null],\r\n    Isdeleted:[null],\r\n    CreatedDate:[null],\r\n    CreatedBy:[null],\r\n    ModifiedDate:[null],\r\n    ModifiedBy:[null],\r\n    DefaultOrder:[null],\r\n    NameEnglish:[null, Validators.required],\r\n    NameHindi:[null, Validators.required],\r\n    IsDIPRSection:[null]\r\n  });\r\n}\r\n//#endregion  << Method >>\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvZGVwYXJ0bWVudC13ZWJzaXRlL3NlY3Rpb24tbWFzdGVyL3NlY3Rpb24tbWFzdGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { MatTableDataSource, MatDialog, MatPaginator, MatSort } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { IndexModel, PermissionModel } from 'src/app/Shared/Model/general-model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { SectionMasterService } from 'src/app/Shared/Service/section-master.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { SectionMasterModel } from 'src/app/Shared/Model/section-master-model';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\n\r\n@Component({\r\n  selector: 'app-section-master',\r\n  templateUrl: './section-master.component.html',\r\n  styleUrls: ['./section-master.component.css']\r\n})\r\nexport class SectionMasterComponent implements OnInit {\r\n\r\n//#region << Variable >>\r\nloginData: UserViewModel;\r\ndepartmentCode: string;\r\nmenuClassificationCode: string;\r\n\r\nlistModel: SectionMasterModel[];\r\ndataSource: MatTableDataSource<SectionMasterModel>;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"ComponentName\",\r\n  \"SelectorName\",\r\n  \"NameEnglish\",\r\n  \"NameHindi\",\r\n  \"DefaultOrder\",\r\n  \"IsActive\",\r\n  \"CreatedDate\",\r\n  // \"ModifiedByName\",\r\n  \"Action\",\r\n];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"ComponentName\", Text: \"Component Name\" },\r\n  { Value: \"SelectorName\", Text: \"Selector Name\" },\r\n  { Value: \"NameEnglish\", Text: \"Name English\" },\r\n  { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n  { Value: \"DefaultOrder\", Text: \"Default Order\" },\r\n];\r\n\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"ComponentName\", Text: \"Component Name\" },\r\n  { Value: \"SelectorName\", Text: \"Selector Name\" },\r\n  { Value: \"NameEnglish\", Text: \"Name English\" },\r\n  { Value: \"NameHindi\", Text: \"Name Hindi\" },\r\n\r\n];\r\n\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\nindexModel: IndexModel;\r\ntotalRecords: number;\r\nDepartmentMenuClassificationPermission: PermissionModel = this._commonService.GetPagePermission(\r\n  \"/department-website/section-master\",\r\n  \"/department-website/section-master/add\",\r\n  \"\",\r\n  \"/department-website/section-master/update\"\r\n);\r\n\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private _parentComponent: AppComponent,\r\n  private readonly _sectionMasterService: SectionMasterService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _dialog: MatDialog,\r\n  private readonly _userService: UserService,\r\n  private readonly _authService: AuthenticationService,\r\n) {\r\n  this.DepartmentMenuClassificationPermission.AddPageAccess\r\n    ? this._parentComponent.setpagelayout(\r\n        \"Section master List:\",\r\n        \"add\",\r\n        \"Add\",\r\n        \"/department-website/section-master/add\"\r\n      )\r\n    : this._parentComponent.setpagelayout(\"Section master List:\");\r\n  this.indexModel = new IndexModel();\r\n}\r\n\r\n//#endregion\r\n\r\n//#region << Method >>\r\n\r\nngOnInit() {\r\n  this.GetList();\r\n  this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n\r\n}\r\n\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc =\r\n    event.direction === AppSetting.orderByDscAsc\r\n      ? AppSetting.orderByAsc\r\n      : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nGetList() {\r\n  \r\n  this.indexModel.PageSize=101;\r\n  this._sectionMasterService.GetList(this.indexModel).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.listModel = <SectionMasterModel[]>(\r\n          data.Data.Data\r\n        );\r\n        this.dataSource = new MatTableDataSource<SectionMasterModel>(\r\n          this.listModel\r\n        );\r\n        this.totalRecords = data.Data.TotalRecords;\r\n        if (!this.indexModel.IsPostBack) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nOnStatusClick(id) {\r\n  this._sectionMasterService.ChangeActiveStatus(id).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._commonService.ScrollingTop();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSearchByKeyword(event) {\r\n  \r\n  this.indexModel.Search = event;\r\n  this.indexModel.AdvanceSearchModel={\"DepartmentCode\": this.departmentCode,\"MenuClassificationCode\": this.menuClassificationCode }\r\n  this.GetList();\r\n}\r\n\r\nReset() {\r\n  this.indexModel = new IndexModel();\r\n  this.departmentCode=\"\";\r\n  this.menuClassificationCode=\"\";\r\n  this.GetList();\r\n}\r\n//#endregion\r\n}\r\n"],"sourceRoot":""}