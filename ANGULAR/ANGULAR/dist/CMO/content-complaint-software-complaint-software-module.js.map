{"version":3,"sources":["webpack:///./src/app/content/complaint-software/Masters/entry-type/add-update-entry-type/add-update-entry-type.component.html","webpack:///./src/app/content/complaint-software/Masters/entry-type/entry-type.component.html","webpack:///./src/app/content/complaint-software/Masters/status/add-update-status/add-update-status.component.html","webpack:///./src/app/content/complaint-software/Masters/status/status.component.html","webpack:///./src/app/content/complaint-software/add-update-complaint/add-update-complaint.component.html","webpack:///./src/app/content/complaint-software/complaint-software-detail/complaint-software-detail.component.html","webpack:///./src/app/content/complaint-software/complaint-software.component.html","webpack:///./src/app/content/complaint-software/compliant-action-dialog/compliant-action-dialog.component.html","webpack:///./src/app/Shared/Enum/compliant.enum.ts","webpack:///./src/app/Shared/Model/Master/complain-entry-type-master-model.ts","webpack:///./src/app/Shared/Model/Master/complain-status-master-model.ts","webpack:///./src/app/Shared/Model/complaint.model.ts","webpack:///./src/app/Shared/Service/complain-entry-type-master.service.ts","webpack:///./src/app/Shared/Service/complain-status-master.service.ts","webpack:///./src/app/Shared/Service/complaint.service.ts","webpack:///./src/app/content/complaint-software/Masters/entry-type/add-update-entry-type/add-update-entry-type.component.css","webpack:///./src/app/content/complaint-software/Masters/entry-type/add-update-entry-type/add-update-entry-type.component.ts","webpack:///./src/app/content/complaint-software/Masters/entry-type/entry-type.component.css","webpack:///./src/app/content/complaint-software/Masters/entry-type/entry-type.component.ts","webpack:///./src/app/content/complaint-software/Masters/status/add-update-status/add-update-status.component.css","webpack:///./src/app/content/complaint-software/Masters/status/add-update-status/add-update-status.component.ts","webpack:///./src/app/content/complaint-software/Masters/status/status.component.css","webpack:///./src/app/content/complaint-software/Masters/status/status.component.ts","webpack:///./src/app/content/complaint-software/add-update-complaint/add-update-complaint.component.css","webpack:///./src/app/content/complaint-software/add-update-complaint/add-update-complaint.component.ts","webpack:///./src/app/content/complaint-software/complaint-software-detail/complaint-software-detail.component.css","webpack:///./src/app/content/complaint-software/complaint-software-detail/complaint-software-detail.component.ts","webpack:///./src/app/content/complaint-software/complaint-software-routing.module.ts","webpack:///./src/app/content/complaint-software/complaint-software.component.css","webpack:///./src/app/content/complaint-software/complaint-software.component.ts","webpack:///./src/app/content/complaint-software/complaint-software.module.ts","webpack:///./src/app/content/complaint-software/compliant-action-dialog/compliant-action-dialog.component.css","webpack:///./src/app/content/complaint-software/compliant-action-dialog/compliant-action-dialog.component.ts"],"names":[],"mappings":"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","file":"content-complaint-software-complaint-software-module.js","sourcesContent":["module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <p>{{title}} Compliant Entry Type</p>\\r\\n\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n    <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name\\r\\n      </mat-label>\\r\\n      <input matInput placeholder=\\\"Name in English\\\" [formControl]=\\\"name\\\" name=\\\"Name\\\" [(ngModel)]=\\\"model.Name\\\" id=\\\"Name\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"name.invalid && name.touched\\\">\\r\\n      Name in English is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name in Hindi\\r\\n      </mat-label>\\r\\n      <input matInput placeholder=\\\"Name in Hindi\\\" name=\\\"NameHindi\\\" [(ngModel)]=\\\"model.NameHindi\\\" id=\\\"NameHindi\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label\\\" appearance=\\\"outline\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"model.IsActive\\\"> IsActive</mat-checkbox>\\r\\n    </section>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n    <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row light-bg\\\">\\r\\n  <div class=\\\"col l6 xl6 m6 s6 \\\">\\r\\n    <h5 class=\\\"page-title\\\">Suggestion-Feedback Entry Type Master :</h5>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s6  text-right\\\" *ngIf=\\\"this.Permission.AddPageAccess\\\">\\r\\n    <button mat-button class=\\\"btn-submit mt-6\\\" (click)=\\\"OpenDialog(null)\\\">\\r\\n      <mat-icon>add</mat-icon>Create\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<!-- <alert ></alert> -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 s12 p-0\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n\\r\\n      <ng-container matColumnDef=\\\"index\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OpenDialog(group.Id)\\\" title=\\\"edit\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n      [pageSizeOptions]=\\\"[10, 20, 50,100]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons\\r\\n      *ngIf=\\\"totalRecords!=0\\\">\\r\\n    </mat-paginator>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <p>{{title}} Compliant Status</p>\\r\\n\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n    <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name </mat-label>\\r\\n      <input matInput placeholder=\\\"Name in English\\\" [formControl]=\\\"name\\\" name=\\\"Name\\\" [(ngModel)]=\\\"model.Name\\\" id=\\\"Name\\\">\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"name.invalid && name.touched\\\">\\r\\n      Name in English is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Name in Hindi </mat-label>\\r\\n      <input matInput placeholder=\\\"Name in Hindi\\\" name=\\\"NameHindi\\\" [(ngModel)]=\\\"model.NameHindi\\\" id=\\\"NameHindi\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-label>Action</mat-label>\\r\\n    <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label\\\" appearance=\\\"outline\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsAdmAction\\\">Admin</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsDevAction\\\">Developer</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsUserAction\\\">User</mat-checkbox>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-label>Filter</mat-label>\\r\\n    <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label\\\" appearance=\\\"outline\\\">\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsAdmFilter\\\">Admin</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsDevFilter\\\">Developer</mat-checkbox>\\r\\n      <mat-checkbox class=\\\"example-margin\\\" [(ngModel)]=\\\"model.IsUserFilter\\\">User</mat-checkbox>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label\\\" appearance=\\\"outline\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"model.IsSMS\\\"> Is SMS</mat-checkbox>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>SMS Content </mat-label>\\r\\n      <input matInput placeholder=\\\"SMS Content\\\" name=\\\"SMSContent\\\" [(ngModel)]=\\\"model.SMSContent\\\" id=\\\"SMSContent\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>No Of Days For Auto Close</mat-label>\\r\\n      <input matInput placeholder=\\\"No Of Days For Auto Close\\\" name=\\\"NoOfDaysForAutoClose\\\"\\r\\n        [(ngModel)]=\\\"model.NoOfDaysForAutoClose\\\" id=\\\"NoOfDaysForAutoClose\\\" (keypress)=\\\"Numberonly($event)\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <section class=\\\"example-full-width  checkbox-bx-custom checkbox-bx-custom-with-label\\\" appearance=\\\"outline\\\">\\r\\n      <mat-checkbox [(ngModel)]=\\\"model.IsActive\\\"> IsActive</mat-checkbox>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n    <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row light-bg\\\">\\r\\n  <div class=\\\"col l6 xl6 m6 s6 \\\">\\r\\n    <h5 class=\\\"page-title\\\">Suggestion-Feedback Status Master :</h5>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s6  text-right\\\" *ngIf=\\\"this.Permission.AddPageAccess\\\">\\r\\n    <button mat-button class=\\\"btn-submit mt-6\\\" (click)=\\\"OpenDialog(null)\\\">\\r\\n      <mat-icon>add</mat-icon>Create\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</div>\\r\\n<!-- <alert ></alert> -->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 s12 p-0\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" (matSortChange)=\\\"sortData($event)\\\">\\r\\n      <ng-container matColumnDef=\\\"index\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">{{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n      </ng-container>\\r\\n      <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsAdmAction\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>Is Admin Action</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'Adm','Action')\\\"\\r\\n            title=\\\"Update Admin Action Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsAdmAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsAdmAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Admin Action Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsAdmAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsAdmAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsDevAction\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is Dev Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'Dev','Action')\\\"\\r\\n            title=\\\"Update Dev Action Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsDevAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsDevAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Dev Action Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsDevAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsDevAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsUserAction\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is User Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'User','Action')\\\"\\r\\n            title=\\\"Update User Action Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsUserAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsUserAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"User Action  Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsUserAction\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsUserAction\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsAdmFilter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> IsAdmin Filter </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'Adm','Filter')\\\"\\r\\n            title=\\\"Update Admin Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsAdmFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsAdmFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Admin Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsAdmFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsAdmFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsDevFilter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is Dev Filter</th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'Dev','Filter')\\\"\\r\\n            title=\\\"Update Dev Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsDevFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsDevFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Dev Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsDevFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsDevFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsUserFilter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is User Filter </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'User','Filter')\\\"\\r\\n            title=\\\"Update  User Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsUserFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsUserFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\" User Filter Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsUserFilter\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsUserFilter\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsSMS\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Is SMS </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnActionStatusClick(element.Id,'','SMS')\\\"\\r\\n            title=\\\"Update SMS Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsSMS\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsSMS\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"SMS Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsSMS\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsSMS\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"IsActive\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Active Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"action-link toogle-btn\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OnStatusClick(element.Id)\\\" title=\\\"Update Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n          <a *ngIf=\\\"!this.Permission.UpdatePageAccess\\\" title=\\\"Active Status\\\">\\r\\n            <mat-icon *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;color: #74cb74;\\\">toggle_on</mat-icon>\\r\\n            <mat-icon *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;color: #ff7373;\\\">toggle_off\\r\\n            </mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n      <ng-container matColumnDef=\\\"Action\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n        <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n          <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OpenDialog(group.Id)\\\" title=\\\"edit\\\">\\r\\n            <mat-icon>edit</mat-icon>\\r\\n          </a>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n    </table>\\r\\n    <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\"\\r\\n      [pageSizeOptions]=\\\"[10, 20, 50,100]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons\\r\\n      *ngIf=\\\"totalRecords!=0\\\">\\r\\n    </mat-paginator>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n\\r\\n  </div>\\r\\n  <form [formGroup]=\\\"frmGrp\\\" (ngSubmit)=\\\"Saveclick();\\\">\\r\\n    <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n      <mat-label class=\\\"d-block mb-10\\\">Description <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n\\r\\n\\r\\n      <mat-form-field class=\\\"example-full-width\\\"\\r\\n        [ngClass]=\\\"{'editor-required':(frmGrp.get('Description').hasError('required') && frmGrp.get('Description').touched)}\\\"\\r\\n        appearance=\\\"outline\\\">\\r\\n\\r\\n\\r\\n\\r\\n        <input style=\\\"display:none; \\\" matInput placeholder=\\\"Description\\\" name=\\\"Description\\\" #Description>\\r\\n        <angular-editor formControlName=\\\"Description\\\" name=\\\"Description\\\" id=\\\"Description\\\" [(ngModel)]=\\\"model.Description\\\"\\r\\n          [config]=\\\"editorConfig\\\" style=\\\"margin-top: 30px;\\\"></angular-editor>\\r\\n        <mat-hint>{{model.Description?.length}}</mat-hint>\\r\\n      </mat-form-field>\\r\\n      <mat-error class=\\\"mat-error-static\\\"\\r\\n        *ngIf=\\\"(frmGrp.get('Description').hasError('required') && frmGrp.get('Description').touched)\\\">\\r\\n        <strong>Description </strong> is required!\\r\\n      </mat-error>\\r\\n      </div>\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Entry Type</mat-label>\\r\\n        <mat-select name=\\\"Sector\\\" [(ngModel)]=\\\"model.EntryTypeId\\\" formControlName=\\\"EntryTypeId\\\" #EntryTypeId>\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlEntryTypeModule\\\">{{item.Text}}\\r\\n          </mat-option>\\r\\n          </mat-select>\\r\\n          </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"(frmGrp.get('EntryTypeId').hasError('required') && frmGrp.get('EntryTypeId').touched) \\\">\\r\\n        Entry Type is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Priority</mat-label>\\r\\n        <mat-select name=\\\"Sector\\\" [(ngModel)]=\\\"model.PriorityId\\\" formControlName=\\\"PriorityId\\\" #PriorityId>\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlPriorityModule\\\">{{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n          </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"(frmGrp.get('PriorityId').hasError('required') && frmGrp.get('PriorityId').touched) \\\">\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        Priority is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label> Module Name <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n                    <mat-select name=\\\"Type\\\" [(ngModel)]=\\\"model.ModuleId\\\" [formControl]=\\\"ModuleName\\\">\\r\\n                      <mat-option>--Select--</mat-option>\\r\\n                      <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlModuleName\\\">{{item.Text}} </mat-option>\\r\\n                    </mat-select>\\r\\n                  </mat-form-field>\\r\\n                  <mat-error *ngIf=\\\"ModuleName.invalid && ModuleName.touched\\\">\\r\\n                    Module Name is <strong>required</strong>\\r\\n                  </mat-error>\\r\\n                </div> -->\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\">\\r\\n        <mat-label>Application <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"Application\\\" formControlName=\\\"ApplicationCode\\\" [(ngModel)]=\\\"model.ApplicationCode\\\"\\r\\n          (selectionChange)=\\\"getPageByPageType($event.value)\\\" #ApplicationCode>\\r\\n          <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlApplicationType\\\">{{k.Text}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n        </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"(frmGrp.get('ApplicationCode').hasError('required') && frmGrp.get('ApplicationCode').touched) \\\">\\r\\n        Application is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      </div>\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\">\\r\\n        <mat-label>Page <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"PageCode\\\" formControlName=\\\"PageCode\\\" [(ngModel)]=\\\"model.PageCode\\\" #PageCode>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlPageMasterDetails\\\">{{ k.Text }}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"(frmGrp.get('PageCode').hasError('required') && frmGrp.get('PageCode').touched)\\\">\\r\\n        Page is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Screen Url <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n        <input matInput placeholder=\\\"Screen URL\\\" name=\\\"ScreenURL\\\" formControlName=\\\"ScreenURL\\\" [(ngModel)]=\\\"model.ScreenURL\\\"\\r\\n          #ScreenURL>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"frmGrp.get('ScreenURL').touched && frmGrp.get('ScreenURL').invalid\\\">\\r\\n          <div *ngIf=\\\"frmGrp.get('ScreenURL').hasError('required')\\\">ScreenURL is <strong>required</strong>.</div>\\r\\n          <div *ngIf=\\\"frmGrp.get('ScreenURL').errors.pattern\\\">Please enter valid url.</div>\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label>Attachment(Pdf/Image(jpeg,png) Only) </label>\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\"\\r\\n          accept=\\\"application/pdf,image/jpeg,image/png\\\" multiple>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      <ul class=\\\"image-list\\\">\\r\\n        <li *ngFor=\\\"let url of documentUrlList; let i = index;\\\">\\r\\n\\r\\n          <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" href=\\\"javascript:void();\\\"\\r\\n            (click)=\\\"downloadPdf(url?.Url,url.DisplayName)\\\">\\r\\n            <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf </mat-icon>\\r\\n            {{ url.DisplayName}}\\r\\n          </a>\\r\\n          <a title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(i)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </a>\\r\\n          <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\">\\r\\n            <img [src]=\\\"url?.Url\\\" />\\r\\n          </div>\\r\\n          </li>\\r\\n          </ul>\\r\\n      <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\">\\r\\n        {{fileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button type=\\\"submit\\\" mat-raised-button class=\\\"btn-submit\\\">Submit</button>\\r\\n      </div>\\r\\n  </form>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row mt-20 detail-bx\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table custom-data-table\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Description:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td colspan=\\\"3\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n\\r\\n              <h3 class=\\\"color-grey\\\" [innerHTML]=\\\"model.Description != null ? model.Description : 'N/A'\\\">\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Entry Type:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                {{ model.EntryTypeName != null ? model.EntryTypeName : 'N/A' }}\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Priority:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                {{ model.PriorityName != null ? model.PriorityName : 'N/A' }}\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n          <!-- <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Created Date:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                {{ model.CreatedDate != null ? (model.CreatedDate | date: 'dd/MM/yyyy') : 'N/A' }}\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td> -->\\r\\n        </tr>\\r\\n\\r\\n        <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Application Title:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                {{ model.ApplicationTitle != null ? model.ApplicationTitle : 'N/A' }}\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Page:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                {{ model.PageTitle != null ? model.PageTitle : 'N/A' }}\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n\\r\\n\\r\\n        <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\"> Screen URL:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td colspan=\\\"3\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">\\r\\n                <a target=\\\"_blank\\\" href=\\\"{{model?.ScreenURL}}\\\">\\r\\n                  {{model?.ScreenURL}}\\r\\n                </a>\\r\\n              </h3>\\r\\n            </section>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n\\r\\n        <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Attachments:</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td colspan=\\\"2\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <ul class=\\\"image-list\\\" *ngIf=\\\"model?.AttachmentList\\\">\\r\\n                <li *ngFor=\\\"let url of model?.AttachmentList;let i = index;\\\">\\r\\n                  <!-- <a *ngIf=\\\"url?.split('.')[1]?.toLowerCase()=='pdf'\\\"\\r\\n                    (click)=\\\"this._commonService.downloadPdf(url,url?.split('.')[0])\\\" href=\\\"javascript:void(0);\\\">\\r\\n                    <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf</mat-icon>\\r\\n                  </a> -->\\r\\n                  <a *ngIf=\\\"(url?.includes('.pdf'))\\\" target=\\\"_blank\\\" href=\\\"{{(url)}}\\\">\\r\\n                    <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf </mat-icon>\\r\\n                  </a>\\r\\n                  <div *ngIf=\\\"!(url?.includes('.pdf'))\\\">\\r\\n                    <a target=\\\"_blank\\\" href=\\\"{{(url)}}\\\">\\r\\n                      <img [src]=\\\"(url)\\\" />\\r\\n                    </a>\\r\\n                  </div>\\r\\n                </li>\\r\\n              </ul>\\r\\n              <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.AttachmentList\\\">N/A</h3>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td style=\\\"text-align:right\\\">\\r\\n            <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OpenDialog(this.RecordId)\\\" title=\\\"Add New Action\\\">\\r\\n              <mat-icon>add_comment</mat-icon>\\r\\n            </a>\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n  <div class=\\\"col l12 x8 m4 s12 clearfix\\\" *ngIf=\\\"model?.ActionList?.length>0\\\">\\r\\n    <fieldset>\\r\\n      <legend class=\\\"row\\\">\\r\\n        <div class=\\\"col xl12 l12 m12 s12 text-left\\\">\\r\\n          <h5><strong>Action </strong></h5>\\r\\n        </div>\\r\\n      </legend>\\r\\n\\r\\n      <table class=\\\"mat-table\\\">\\r\\n\\r\\n        <thead>\\r\\n          <tr class=\\\"header\\\">\\r\\n            <th>#</th>\\r\\n            <th>Status</th>\\r\\n            <th>Comment</th>\\r\\n            <th>Attachments</th>\\r\\n            <th>EnterBy Date</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let  item  of model.ActionList;let i=index\\\">\\r\\n            <td> {{i+1}}</td>\\r\\n            <td> {{item.Status}}</td>\\r\\n            <td>\\r\\n              <div [innerHTML]=\\\"item.Comment != null ? item.Comment : ' '\\\"></div>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <ul class=\\\"image-list\\\" *ngIf=\\\"item?.AttachmentURL\\\">\\r\\n                  <li>\\r\\n                    <a *ngIf=\\\"(item?.AttachmentURL?.includes('.pdf'))\\\" target=\\\"_blank\\\" href=\\\"{{(item?.AttachmentURL)}}\\\">\\r\\n                      <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf</mat-icon>\\r\\n                    </a>\\r\\n                    <div *ngIf=\\\"!(item?.AttachmentURL?.includes('.pdf'))\\\">\\r\\n                      <a target=\\\"_blank\\\" href=\\\"{{(item?.AttachmentURL)}}\\\">\\r\\n                        <img [src]=\\\"(item?.AttachmentURL)\\\" />\\r\\n                      </a>\\r\\n                    </div>\\r\\n                  </li>\\r\\n                </ul>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"item?.AttachmentURL==null\\\">N/A</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td> {{item.FromUser}} <br /> {{item.CreatedDate != null ? (item.CreatedDate | date:\\r\\n              'dd/MM/yyyy h:mm:ss a') : '-' }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </fieldset>\\r\\n  </div>\\r\\n</div>\\r\\n<!-- <div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button *ngIf=\\\"loginBaseUserType!=userTypeEnum.ADM && loginBaseUserType!=userTypeDOS && loginBaseUserType!=userTypeVNDR && loginBaseUserType != userTypeVNDRUSER && !IsHideDeptInternal_VendorCommBtn\\\"\\r\\n      mat-button class=\\\"btn-submit mt-6\\\" (click)=\\\"OpenChangeOfficeDialog(model.CommunicationCode)\\\">Move to\\r\\n          Other Department Office</button>\\r\\n  </div>\\r\\n</div> -->\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l4 xl4 m4 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Status</mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"statusId\\\" multiple>\\r\\n        <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectAllStatus()\\\">\\r\\n          <mat-checkbox [checked]=\\\"selectedAllStatus || statusId?.length==dDLList?.ddlCompliantFilter?.length\\\"> SelectAll\\r\\n          </mat-checkbox>\\r\\n        </mat-option>\\r\\n        <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlCompliantFilter\\\">{{k.Text}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m4 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Entry Type</mat-label>\\r\\n      <mat-select name=\\\"Sector\\\" [(ngModel)]=\\\"searchModel.EntryTypeId\\\">\\r\\n        <mat-option>--Select--</mat-option>\\r\\n        <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlEntryTypeModule\\\">{{item.Text}} </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l4 xl4 m4 s12 text-right\\\" title=\\\"Advance Search\\\">\\r\\n      <a (click)=\\\"toggleDisplay()\\\" class=\\\"btn-ad-search\\\">\\r\\n        <span class=\\\"material-icons mat-icon\\\">\\r\\n          manage_search\\r\\n        </span>\\r\\n      <mat-icon>\\r\\n        {{!isShow?'keyboard_arrow_up ':\\\"keyboard_arrow_down\\\"}}\\r\\n      </mat-icon>\\r\\n    </a>\\r\\n  </div>\\r\\n  <br />\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"!isShow\\\">\\r\\n    <div class=\\\"col l4 xl4 m4 s12\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\">\\r\\n        <mat-label>Application <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"Application\\\" [(ngModel)]=\\\"searchModel.ApplicationCode\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlApplicationType\\\">{{k.Text}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l2 xl2 m2 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>From Date</mat-label>\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\"\\r\\n          [(ngModel)]=\\\"searchModel.FromDate\\\" [max]=\\\"searchModel.ToDate\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"col l2 xl2 m2 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>To Date</mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\"\\r\\n        [(ngModel)]=\\\"searchModel.ToDate\\\" [min]=\\\"searchModel.FromDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker2></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l2 xl2 m2 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Action From Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"ActionFromDate\\\" (focus)=\\\"ActionFromDate.open()\\\" readonly\\r\\n            placeholder=\\\"Action From Date\\\" [(ngModel)]=\\\"searchModel.ActionFromDate\\\" [max]=\\\"searchModel.ActionToDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"ActionFromDate\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #ActionFromDate></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col l2 xl2 m2 s12\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Action To Date</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"ActionToDate\\\" (focus)=\\\"ActionToDate.open()\\\" readonly placeholder=\\\"Action To Date\\\"\\r\\n              [(ngModel)]=\\\"searchModel.ActionToDate\\\" [min]=\\\"searchModel.ActionFromDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"ActionToDate\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #ActionToDate></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 xl12 m12 s12 \\\">\\r\\n      <button (click)=\\\"Search()\\\" mat-button class=\\\"btn-submit\\\">Search</button>\\r\\n      &nbsp;\\r\\n      <button (click)=\\\"Reset()\\\" mat-button class=\\\"btn-submit btn_orange mat-button\\\">Reset<mat-icon>refresh</mat-icon>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <mat-toolbar color=\\\"primary\\\" *ngIf=\\\"totalRecords==0\\\" class=\\\"no-record\\\">No Record...!</mat-toolbar>\\r\\n\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" (matSortChange)=\\\"sortData($event)\\\"\\r\\n          *ngIf=\\\"totalRecords!=0\\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Sno/Ticket No</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n            {{(searchModel.indexModel.Page-1)*searchModel.indexModel.PageSize +(i+1)}}/\\r\\n            {{element.Id}}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n          <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"StatusName\\\">\\r\\n          <th style=\\\"width: 140px;\\\" mat-header-cell *matHeaderCellDef> <span>Status </span></th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n            <div> {{group.StatusName != null ? group.StatusName : '-' }}</div>\\r\\n            <div class=\\\"info-bg-1\\\" matTooltip=\\\"Action By User Name\\\" *ngIf=\\\"group.ActionBy != null\\\"> {{group.ActionBy != null ?\\r\\n              group.ActionBy : '-' }}</div>\\r\\n            <div class=\\\"info-bg-2\\\" *ngIf=\\\"group.ActionBySSOID != null\\\" matTooltip=\\\"ActionBySSOID\\\"> {{group.ActionBySSOID != null\\r\\n              ? group.ActionBySSOID : '-' }}\\r\\n            </div>\\r\\n            <div class=\\\"info-bg-3\\\" matTooltip=\\\"Action Date\\\" *ngIf=\\\"group.ActionBy != null\\\"> {{group.ActionDate != null ?\\r\\n              (group.ActionDate | date:\\r\\n              'dd/MM/yyyy h:mm:ss a') : '-' }}\\r\\n            </div>\\r\\n            <div class=\\\"info-bg-2\\\" matTooltip=\\\"Action User Mobile Number\\\" *ngIf=\\\"group.ActionBy != null\\\">\\r\\n              <span class=\\\"mat-icon material-icons\\\" style=\\\"font-size: initial !important; \\\">\\r\\n                phone\\r\\n              </span>{{group.ActionUserMobile != null ?\\r\\n              +group.ActionUserMobile : '-' }}\\r\\n            </div>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\t\\t\\t <ng-container matColumnDef=\\\"Description\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Description </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\" [innerHTML]=\\\"group.Description\\\">\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"ScreenURL\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> URL </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\" title=\\\"{{group.ScreenURL}}\\\">\\r\\n            <a href=\\\"{{group.ScreenURL}}\\\" target=\\\"_blank\\\">\\r\\n              {{ group.ScreenURL.length>20 ? (group.ScreenURL |slice:0:20 )+'...' :group.ScreenURL}}\\r\\n            </a>\\r\\n\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"PriorityId\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Priority </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\" title={{group.PriorityName}}\\r\\n            [ngStyle]=\\\"{'background': group?.PriorityId==compliantEnum.High? '#e2111138': group.PriorityId==compliantEnum.Medium? '#e2dc1161':group.PriorityId==compliantEnum.Low?'#f2d600':'' }\\\">\\r\\n            {{ group.PriorityName}}\\r\\n\\r\\n          </td>\\r\\n          </ng-container>\\r\\n        <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> Entry Date </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n            {{ group.CreatedDate !=null ? (group.CreatedDate| date: 'dd/MM/yyyy') :'--' }}\\r\\n          </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Attachments\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Attachments</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n            <ul>\\r\\n              <li *ngFor=\\\"let url of element.AttachmentList; let i = index;\\\">\\r\\n                <a *ngIf=\\\"url?.includes('.pdf')\\\" target=\\\"_blank\\\" href=\\\"{{url}}\\\">\\r\\n                  <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf</mat-icon>\\r\\n                </a>\\r\\n                <a *ngIf=\\\"!url?.includes('.pdf')\\\" target=\\\"_blank\\\" href=\\\"{{url}}\\\">\\r\\n                  <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">image</mat-icon>\\r\\n                </a>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"UserDetail\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> <span>User Details </span></th>\\r\\n          <td style=\\\"width: 140px;\\\" mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n            <div class=\\\"info-bg-1\\\" matTooltip=\\\"Created By User Name\\\"> {{group.UserName != null ? group.UserName : '-' }}\\r\\n            </div>\\r\\n            <div class=\\\"info-bg-2\\\" *ngIf=\\\"group.SSOID != null\\\" matTooltip=\\\"SSOID\\\"> {{group.SSOID != null ? group.SSOID :\\r\\n              '-' }}\\r\\n            </div>\\r\\n            <div class=\\\"info-bg-3\\\" *ngIf=\\\"group.UserDepartmentName != null\\\" matTooltip=\\\"Department Name\\\">\\r\\n              {{group.UserDepartmentName\\r\\n              != null ?\\r\\n              group.UserDepartmentName : '-'\\r\\n              }} </div>\\r\\n            <div class=\\\"info-bg-1\\\" matTooltip=\\\"User Type\\\"> {{group.UserType != null ? group.UserType : '' }} </div>\\r\\n            <div class=\\\"info-bg-3\\\" matTooltip=\\\"Created Date\\\"> {{group.CreatedDate != null ? (group.CreatedDate | date:\\r\\n              'dd/MM/yyyy h:mm:ss a') : '-' }}\\r\\n            </div>\\r\\n            <div class=\\\"info-bg-2\\\" matTooltip=\\\"User Mobile Number\\\">\\r\\n              <span class=\\\"mat-icon material-icons\\\" style=\\\"font-size: initial !important; \\\">\\r\\n                phone\\r\\n              </span>{{group.UserMobile != null ?\\r\\n              +group.UserMobile : '-' }}\\r\\n            </div>\\r\\n          </td>\\r\\n          </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n            <a *ngIf=\\\"this.Permission.DetailPageAccess\\\" routerLink=\\\"/compliant/detail/{{group.Id}}\\\" matTooltipPosition=\\\"below\\\"\\r\\n              matTooltip=\\\"Detail\\\">\\r\\n              <mat-icon>visibility</mat-icon>\\r\\n            </a>\\r\\n            <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OpenDialog(group.Id)\\\" title=\\\"Add New Action\\\">\\r\\n              <mat-icon>add_comment</mat-icon>\\r\\n            </a>\\r\\n            </td>\\r\\n            </ng-container>\\r\\n\\r\\n        <!-- <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link\\\">\\r\\n            <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" (click)=\\\"OpenDialog(group.Id)\\\" title=\\\"edit\\\">\\r\\n              <mat-icon>edit</mat-icon>\\r\\n            </a>\\r\\n            <a *ngIf=\\\"this.Permission.UpdatePageAccess\\\" routerLink=\\\"/vc/participant/{{group.Code}}\\\" title=\\\"View Participant List\\\">\\r\\n                <mat-icon>visibility</mat-icon>\\r\\n              </a>\\r\\n              <a (click)=\\\"onDelete(group.Id);\\\" title=\\\"Delete\\\" class=\\\"btn_delete\\\" href=\\\"javascript:void(0)\\\">\\r\\n                <mat-icon>delete</mat-icon>\\r\\n              </a>\\r\\n          </td>\\r\\n        </ng-container> -->\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"searchModel.indexModel.PageSize\\\"\\r\\n        [pageSizeOptions]=\\\"[10, 20, 50,100]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons\\r\\n        *ngIf=\\\"totalRecords!=0\\\" [pageIndex]=\\\"this.searchModel.indexModel.Page-1\\\">\\r\\n      </mat-paginator>\\r\\n    </div>\\r\\n    </div>\\r\\n    </div>\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n    <p>Add Action</p>\\r\\n    <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n        <mat-icon>close</mat-icon>\\r\\n    </button>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n  <form [formGroup]=\\\"frmGrp\\\" (ngSubmit)=\\\"Saveclick();\\\">\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Status <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n            <mat-select name=\\\"StatusId\\\" [(ngModel)]=\\\"model.StatusId\\\" formControlName=\\\"Status\\\" #Status>\\r\\n                <mat-option>--Select--</mat-option>\\r\\n                <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlCompliantAction\\\">{{k.Text}}</mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"(frmGrp.get('Status').hasError('required') && frmGrp.get('Status').touched) \\\">\\r\\n          Status is <strong>required</strong>\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n\\r\\n        <mat-label class=\\\"d-block mb-10\\\">Comment <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-form-field class=\\\"example-full-width\\\"\\r\\n          [ngClass]=\\\"{'editor-required':(frmGrp.get('Comment').hasError('required') && frmGrp.get('Comment').touched)}\\\"\\r\\n          appearance=\\\"outline\\\">\\r\\n\\r\\n          <input style=\\\"display:none; \\\" matInput placeholder=\\\"Comment\\\" name=\\\"Comment\\\" #Comment>\\r\\n          <angular-editor formControlName=\\\"Comment\\\" name=\\\"Comment\\\" id=\\\"Comment\\\" [(ngModel)]=\\\"model.Comment\\\"\\r\\n            [config]=\\\"editorConfig\\\" style=\\\"margin-top: 30px;\\\"></angular-editor>\\r\\n        </mat-form-field>\\r\\n        <mat-error class=\\\"mat-error-static\\\"\\r\\n          *ngIf=\\\"(frmGrp.get('Comment').hasError('required') && frmGrp.get('Comment').touched)\\\">\\r\\n          <strong>Comment </strong> is required!\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n        <div class=\\\"upload-btn-wrapper\\\">\\r\\n          <label>Attachment(Pdf/Image(jpeg,png) Only) </label>\\r\\n          <input type=\\\"file\\\" id=\\\"file\\\" formControlName=\\\"Attachment\\\" (change)=\\\"handleFileInput($event.target.files)\\\"\\r\\n            accept=\\\"application/pdf,image/jpeg,image/png\\\" #Attachment>\\r\\n        </div>\\r\\n\\r\\n        <a *ngIf=\\\"model.Extension?.toLowerCase()=='pdf' && model?.AttachmentURL\\\" href=\\\"javascript:void();\\\" (click)=\\\"download(model?.AttachmentURL)\\\" >\\r\\n\\r\\n          <mat-icon class=\\\"mat-icon notranslate material-icons mat-icon-no-color\\\">picture_as_pdf </mat-icon>\\r\\n            Click Here to Download\\r\\n          </a>\\r\\n          <a title=\\\"Remove\\\" *ngIf=\\\"model?.AttachmentURL?.length > 0\\\" (click)=\\\"RemoveImageFile()\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </a>\\r\\n          <div *ngIf=\\\"model?.Extension?.toLowerCase()!='pdf' && model?.AttachmentURL\\\">\\r\\n            <img style=\\\"widows: 50px;height:50px;\\\" [src]=\\\"model?.AttachmentURL\\\" />\\r\\n          </div>\\r\\n\\r\\n      </div>\\r\\n       <mat-error *ngIf=\\\"Attachment.invalid && Attachment.touched\\\">\\r\\n            Attachment is <strong>required</strong>\\r\\n        </mat-error>\\r\\n\\r\\n        <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\">\\r\\n          {{fileValidationMsg}}\\r\\n        </mat-error>\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n        <button mat-button class=\\\"btn-submit\\\">Submit</button>\\r\\n    </div>\\r\\n    </form>\\r\\n</div>\\r\\n\"","export enum CompliantEnum {\r\n  High = 1,\r\n  Medium = 2,\r\n  Low = 3\r\n}\r\n","\r\nexport class ComplainEntryTypeMasterViewModel {\r\n  Id: number;\r\n  Name: string;\r\n  NameHindi: string;\r\n  IsActive: boolean | null;\r\n  IsDelete: boolean | null;\r\n  CreatedDate: string | null;\r\n  CreatedBy: number | null;\r\n  ModifiedDate: string | null;\r\n  ModifiedBy: number | null;\r\n  constructor() {\r\n    this.IsActive = false;\r\n    this.Id = 0;\r\n  }\r\n}\r\n","\r\nexport class ComplainStatusMasterViewModel {\r\n  Id: number;\r\n  Name: string;\r\n  NameHindi: string;\r\n  IsDevFilter: boolean | null;\r\n  IsAdmFilter: boolean | null;\r\n  IsUserFilter: boolean | null;\r\n  IsDevAction: boolean | null;\r\n  IsAdmAction: boolean | null;\r\n  IsUserAction: boolean | null;\r\n  IsSMS: boolean | null;\r\n  SMSContent: string;\r\n  NoOfDaysForAutoClose: number | null;\r\n  IsActive: boolean | null;\r\n  IsDelete: boolean | null;\r\n  CreatedDate: string | null;\r\n  CreatedBy: number | null;\r\n  ModifiedDate: string | null;\r\n  ModifiedBy: number | null;\r\n  constructor() {\r\n    this.Id = 0;\r\n    this.IsDevFilter = false\r\n    this.IsAdmFilter = false\r\n    this.IsUserFilter = false\r\n    this.IsDevAction = false\r\n    this.IsAdmAction = false\r\n    this.IsUserAction = false\r\n    this.IsSMS = false\r\n    this.IsActive = false\r\n    this.IsDelete = false\r\n  }\r\n}\r\nexport class ChangeStatus {\r\n  Id: number;\r\n  UserType: string;\r\n  ActionType: string;\r\n  UserId: number;\r\n}\r\n","import { IndexModel } from \"./general-model\";\r\n\r\nexport class ComplaintListModel {\r\n  Id: number;\r\n  Description: string;\r\n  EntryTypeId: number | string;\r\n  PriorityId: number | string;\r\n  ModuleId: number | string;\r\n  ScreenURL: string;\r\n  StatusId: number | string;\r\n  IsActive: boolean;\r\n  IsDelete: boolean;\r\n  CreatedDate: Date;\r\n  AttachmentList: ComplaintAttachmentModel[] = [];\r\n  ApplicationCode: number | string;\r\n  PageCode: number | string;\r\n\r\n}\r\n\r\nexport class ComplaintAttachmentModel {\r\n  Id: number;\r\n  ComplaintEntryId: number;\r\n  AttachmentsUrl: string;\r\n}\r\n\r\n// export class CompliantSearchModel extends IndexModel {\r\n//   status: number | string;\r\n// }\r\n\r\nexport class CompliantSearchModel {//extends IndexModel\r\n  constructor() {\r\n    this.indexModel = new IndexModel();\r\n    //  this.ApplicationCode = 0;\r\n    this.StatusId = null;\r\n    // this.EntryTypeId = 0;\r\n  }\r\n  LoginUserCode: number;\r\n  FromDate: string;\r\n  ToDate: string;\r\n  ActionFromDate: string;\r\n  ActionToDate: string;\r\n  ApplicationCode: number | string;\r\n  StatusId: number | string;\r\n  StatusIds: number[] | string[];\r\n  EntryTypeId: number | string;\r\n  indexModel: IndexModel;\r\n}\r\n\r\nexport class ComplaintEntryListModel {\r\n  Id: number;\r\n  Description: string;\r\n  PriorityId: number;\r\n  ScreenURL: string;\r\n  IsActive: boolean;\r\n  CreatedDate: Date | string;\r\n  PriorityName: string;\r\n  EntryTypeName: string;\r\n  StatusName: string;\r\n  ModuleName: string;\r\n  ModuleId: number;\r\n  EntryTypeId: number;\r\n  StatusId : number;\r\n  PageTitle: string;\r\n  ApplicationTitle: string;\r\n\tAttachmentList: string[]=[];\r\n  createdByName: string;\r\n  CreatedUserContact: string;\r\n\r\n  PermissionTitle: string;\r\n\r\n  ActionList: ComplaintActionHistory[] = [];\r\n  UserName: string;\r\n  UserMobile: string;\r\n  SSOID: string;\r\n  UserDepartmentName: string;\r\n  UserType: string;\r\n  ActionDate: Date | string;\r\n  ActionBy: string;\r\n  ActionBySSOID: string;\r\n  ActionUserMobile: string;\r\n}\r\n\r\nexport class ComplaintActionModel {\r\n  Id?: number;\r\n  ComplaintEntryId?: number ;\r\n  Comment?: number;\r\n  StatusId?: number | string;\r\n  AttachmentURL?: string;\r\n  IsActive?: boolean;\r\n  Extension: string;\r\n}\r\nexport class ComplaintActionHistory {\r\n  Id: number;\r\n  ComplaintEntryId: number;\r\n  AttachmentURL: string;\r\n  Comment: string;\r\n  StatusId: number | null;\r\n  Status: string;\r\n  IsActive: boolean | null;\r\n  IsDeleted: boolean | null;\r\n  CreatedBy: number | null;\r\n  CreatedDate: string | null;\r\n  UserName: string;\r\n  UserType: string;\r\n  UserTypeTitle: string;\r\n  FromBaseUserType: string;\r\n  FromBaseUserTypeTitle: string;\r\n  FromUser: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { ComplainEntryTypeMasterViewModel } from '../Model/Master/complain-entry-type-master-model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComplainEntryTypeMasterService {\r\n\r\n  constructor(private readonly _baseService: BaseService) { }\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.ComplainEntryTypeListUrl, model);\r\n  }\r\n\r\n  Add(model: ComplainEntryTypeMasterViewModel) {\r\n    return this._baseService.post(AppSetting.ComplainEntryTypeAddUrl, model);\r\n  }\r\n\r\n  Edit(model: ComplainEntryTypeMasterViewModel) {\r\n    return this._baseService.post(AppSetting.ComplainEntryTypeUpdateUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(AppSetting.ComplainEntryTypeUpdateStatusUrl + id);\r\n  }\r\n\r\n  GetById(id: number) {\r\n    return this._baseService.get(AppSetting.ComplainEntryTypeGetByIdUrl + id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { ChangeStatus, ComplainStatusMasterViewModel } from '../Model/Master/complain-status-master-model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComplainStatusMasterService {\r\n\r\n  constructor(private readonly _baseService: BaseService) { }\r\n\r\n  GetList(model: IndexModel) {\r\n    return this._baseService.post(AppSetting.ComplainStatusListUrl, model);\r\n  }\r\n\r\n  Add(model: ComplainStatusMasterViewModel) {\r\n    return this._baseService.post(AppSetting.ComplainStatusAddUrl, model);\r\n  }\r\n\r\n  Edit(model: ComplainStatusMasterViewModel) {\r\n    return this._baseService.post(AppSetting.ComplainStatusUpdateUrl, model);\r\n  }\r\n\r\n  ChangeActiveStatus(id: number) {\r\n    return this._baseService.get(AppSetting.ComplainStatusUpdateStatusUrl + id);\r\n  }\r\n\r\n  GetById(id: number) {\r\n    return this._baseService.get(AppSetting.ComplainStatusGetByIdUrl + id);\r\n  }\r\n  ChangeStatus(model: ChangeStatus) {\r\n    return this._baseService.post(AppSetting.ComplainStatusChangeStatusUrl, model);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { ComplaintListModel, ComplaintActionModel, CompliantSearchModel } from '../Model/complaint.model';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { AuthenticationService } from './authentication.service';\r\nimport { subscribeOn } from 'rxjs/operators';\r\nimport { UserModel } from '../Model/user-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComplaintService {\r\n\r\n  constructor(\r\n    private readonly _baseService: BaseService,\r\n    private readonly _authService: AuthenticationService,\r\n  ) {\r\n\r\n  }\r\n\r\n  GetList(model: CompliantSearchModel) {\r\n    model.LoginUserCode = this._authService.GetCurrentUserDetail().UserViewModel.UserId;\r\n      const result = this._baseService.post(AppSetting.ComplaintList, model);\r\n      return result;\r\n    }\r\n\r\n    Add(model: ComplaintListModel) {\r\n      const result = this._baseService.post(AppSetting.ComplaintAdd, model);\r\n      return result;\r\n    }\r\n\r\n    AddAction(model:ComplaintActionModel) {\r\n      const result = this._baseService.post(AppSetting.ComplaintAddAction, model);\r\n      return result;\r\n    }\r\n\r\n\r\n    // GetById(Id) {\r\n    //   const result = this._baseService.get(AppSetting.GovermentAchivementGetById + Id, null);\r\n    //   return result;\r\n    // }\r\n\r\n    // Edit(model: GovermentAchivementModel) {\r\n    //   const result = this._baseService.post(AppSetting.GovermentAchivementEdit, model);\r\n    //   return result;\r\n    // }\r\n  Detail(id: number) {\r\n    return this._baseService.get(AppSetting.ComplaintDetailUrl + id);\r\n  }\r\n\r\n   }\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL01hc3RlcnMvZW50cnktdHlwZS9hZGQtdXBkYXRlLWVudHJ5LXR5cGUvYWRkLXVwZGF0ZS1lbnRyeS10eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AdminDepartmentService } from 'src/app/Shared/Service/admin-department.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { ComplainEntryTypeMasterViewModel } from 'src/app/Shared/Model/Master/complain-entry-type-master-model';\r\nimport { ComplainEntryTypeMasterService } from 'src/app/Shared/Service/complain-entry-type-master.service';\r\n@Component({\r\n  selector: 'app-add-update-entry-type',\r\n  templateUrl: './add-update-entry-type.component.html',\r\n  styleUrls: ['./add-update-entry-type.component.css']\r\n})\r\nexport class AddUpdateEntryTypeComponent implements OnInit {\r\n\r\n\r\n  id: number;\r\n  model: ComplainEntryTypeMasterViewModel;\r\n  loginData: UserViewModel;\r\n  name = new FormControl('', [Validators.required]);\r\n\r\n  title: string = \"Add\";\r\n\r\n  constructor(\r\n    private readonly _userService: UserService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _dialogRef: MatDialogRef<AddUpdateEntryTypeComponent>,\r\n    private readonly _complainEntryTypeMasterService: ComplainEntryTypeMasterService,\r\n    private readonly _authService: AuthenticationService,\r\n    public readonly _commonService: CommonService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    if (data) {\r\n      this.id = data;\r\n      this.GetById();\r\n      this.title = 'Edit';\r\n    }\r\n    this.model = new ComplainEntryTypeMasterViewModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  }\r\n\r\n  GetById() {\r\n    this._complainEntryTypeMasterService.GetById(this.id).subscribe(\r\n      data => {\r\n        if (\r\n          (data.IsSuccess)\r\n        ) {\r\n          this.model = <ComplainEntryTypeMasterViewModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this.model = new ComplainEntryTypeMasterViewModel();\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  SaveClick() {\r\n    this.name.markAsTouched();\r\n    if (this.name.valid) {\r\n      if (this.model.Id) {\r\n        this.model.ModifiedBy = this.loginData.UserId;\r\n        this._complainEntryTypeMasterService.Edit(this.model).subscribe(data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._dialogRef.close(true);\r\n          }\r\n          else {\r\n            this._alertService.error(data.Message);\r\n\r\n          }\r\n        }, error => {\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n      else {\r\n        this.model.CreatedBy = this.loginData.UserId;\r\n        this._complainEntryTypeMasterService.Add(this.model).subscribe(data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._dialogRef.close(true);\r\n          }\r\n          else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        }, error => {\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL01hc3RlcnMvZW50cnktdHlwZS9lbnRyeS10eXBlLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { ComplainEntryTypeMasterViewModel } from \"src/app/Shared/Model/Master/complain-entry-type-master-model\";\r\nimport { MatDialog, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { ColumnHeaderModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport { IndexModel, PermissionModel } from \"src/app/Shared/Model/general-model\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { ComplainEntryTypeMasterService } from \"src/app/Shared/Service/complain-entry-type-master.service\";\r\nimport { OTPDialogComponent } from \"src/app/otp-dialog/otp-dialog.component\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { AddUpdateEntryTypeComponent } from \"./add-update-entry-type/add-update-entry-type.component\";\r\nimport { ConfirmationDialogComponent } from \"src/app/confirmation-dialog/confirmation-dialog.component\";\r\nimport { GlobalMessagesModel } from \"src/app/Shared/Model/common.messages\";\r\n\r\n\r\n@Component({\r\n  selector: 'app-entry-type',\r\n  templateUrl: './entry-type.component.html',\r\n  styleUrls: ['./entry-type.component.css']\r\n})\r\nexport class EntryTypeComponent implements OnInit {\r\n\r\n  //#region Variable\r\n  listModel: ComplainEntryTypeMasterViewModel[];\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  id: number;\r\n  displayedColumns: string[] = ['index', 'Name', 'NameHindi', 'IsActive', 'Action'];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [{ Value: 'Name', Text: 'Entry Type Name' }, { Value: 'NameHindi', Text: 'Entry Type Name In Hindi' }];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  Permission: PermissionModel = this._commonService.GetPagePermission(\"/compliant/master/entrytype\", \"/compliant/master/entrytype/add\", \"\", \"/compliant/master/entrytype/edit\", \"\");\r\n  indexModel: IndexModel;\r\n  totalRecords: number;\r\n  //#endregion\r\n  constructor(\r\n    private readonly _alertService: AlertService,\r\n    private readonly _parentApi: AppComponent,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _router: Router,\r\n    private readonly _complainEntryTypeMasterService: ComplainEntryTypeMasterService) {\r\n    this._parentApi.setpagelayout(\"\", \"\", \"\", \"\", true);\r\n    this.indexModel = new IndexModel();\r\n\r\n  }\r\n  //#endregion\r\n\r\n  ngOnInit() {\r\n    this.GetList();\r\n  }\r\n\r\n\r\n  GetList() {\r\n    this._complainEntryTypeMasterService.GetList(this.indexModel).subscribe(\r\n      data => {\r\n        if ((data.IsSuccess)) {\r\n          this.listModel = <ComplainEntryTypeMasterViewModel[]>data.Data.Data;\r\n          this.dataSource = new MatTableDataSource<ComplainEntryTypeMasterViewModel>(this.listModel);\r\n          this.totalRecords = data.Data.TotalRecords;\r\n          if (!this.indexModel.IsPostBack) {\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  OpenDialog(Id) {\r\n    const _dialogRef = this._dialog.open(AddUpdateEntryTypeComponent, {\r\n      width: \"500px\",\r\n      data: Id,\r\n      disableClose: true\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.GetList();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  OnStatusClick(id) {\r\n    this._commonService.GenerateOTP().subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const _dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n            width: \"50%\",\r\n            data: GlobalMessagesModel.ConfirmStatusChanged\r\n          });\r\n          _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n            if (result) {\r\n              this._complainEntryTypeMasterService.ChangeActiveStatus(id).subscribe(\r\n                data => {\r\n                  if (data.IsSuccess) {\r\n                    this.GetList();\r\n                    this._alertService.success(data.Message);\r\n                  } else {\r\n                    this._alertService.error(data.Message);\r\n                  }\r\n                },\r\n                error => {\r\n                  this._alertService.error(error.message);\r\n                }\r\n              );\r\n\r\n            }\r\n          });\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  sortData(event) {\r\n    this.indexModel.OrderBy = event.active;\r\n    this.indexModel.OrderByAsc =\r\n      event.direction == AppSetting.orderByDscAsc\r\n        ? AppSetting.orderByAsc\r\n        : AppSetting.orderByDsc;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n  //#endregion\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL01hc3RlcnMvc3RhdHVzL2FkZC11cGRhdGUtc3RhdHVzL2FkZC11cGRhdGUtc3RhdHVzLmNvbXBvbmVudC5jc3MifQ== */\"","\r\n\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { Component, OnInit, Inject } from '@angular/core';\r\nimport { UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { FormControl, Validators } from '@angular/forms';\r\n\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { AdminDepartmentService } from 'src/app/Shared/Service/admin-department.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\n\r\nimport { ComplainEntryTypeMasterService } from 'src/app/Shared/Service/complain-entry-type-master.service';\r\nimport { ComplainStatusMasterService } from 'src/app/Shared/Service/complain-status-master.service';\r\nimport { ComplainStatusMasterViewModel } from 'src/app/Shared/Model/Master/complain-status-master-model';\r\n@Component({\r\n  selector: 'app-add-update-status',\r\n  templateUrl: './add-update-status.component.html',\r\n  styleUrls: ['./add-update-status.component.css']\r\n})\r\nexport class AddUpdateStatusComponent implements OnInit {\r\n\r\n\r\n  id: number;\r\n  model: ComplainStatusMasterViewModel;\r\n  loginData: UserViewModel;\r\n  name = new FormControl('', [Validators.required]);\r\n\r\n  title: string = \"Add\";\r\n\r\n  constructor(\r\n    private readonly _userService: UserService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _dialogRef: MatDialogRef<AddUpdateStatusComponent>,\r\n    private readonly _complainStatusMasterService: ComplainStatusMasterService,\r\n    private readonly _authService: AuthenticationService,\r\n    public readonly _commonService: CommonService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n    if (data) {\r\n      this.id = data;\r\n      this.GetById();\r\n      this.title = 'Edit';\r\n    }\r\n    this.model = new ComplainStatusMasterViewModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n  }\r\n\r\n  GetById() {\r\n    this._complainStatusMasterService.GetById(this.id).subscribe(\r\n      data => {\r\n        if (\r\n          (data.IsSuccess)\r\n        ) {\r\n          this.model = <ComplainStatusMasterViewModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this.model = new ComplainStatusMasterViewModel();\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  SaveClick() {\r\n    this.name.markAsTouched();\r\n    if (this.name.valid) {\r\n      if (this.model.Id) {\r\n        this.model.ModifiedBy = this.loginData.UserId;\r\n        this._complainStatusMasterService.Edit(this.model).subscribe(data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._dialogRef.close(true);\r\n          }\r\n          else {\r\n            this._alertService.error(data.Message);\r\n\r\n          }\r\n        }, error => {\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n      else {\r\n        this.model.CreatedBy = this.loginData.UserId;\r\n        this._complainStatusMasterService.Add(this.model).subscribe(data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._dialogRef.close(true);\r\n          }\r\n          else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        }, error => {\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        });\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n  Numberonly(event): boolean {\r\n    return this._commonService.numberOnly(event);\r\n  }\r\n}\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL01hc3RlcnMvc3RhdHVzL3N0YXR1cy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\nimport { MatDialog, MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { OTPDialogComponent } from \"src/app/otp-dialog/otp-dialog.component\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { ColumnHeaderModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport { PermissionModel, IndexModel } from \"src/app/Shared/Model/general-model\";\r\nimport { ChangeStatus, ComplainStatusMasterViewModel } from \"src/app/Shared/Model/Master/complain-status-master-model\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { ComplainStatusMasterService } from \"src/app/Shared/Service/complain-status-master.service\";\r\nimport { AddUpdateStatusComponent } from \"./add-update-status/add-update-status.component\";\r\nimport { ConfirmationDialogComponent } from \"src/app/confirmation-dialog/confirmation-dialog.component\";\r\nimport { GlobalMessagesModel } from \"src/app/Shared/Model/common.messages\";\r\nimport { UserViewModel } from \"src/app/Shared/Model/user-model\";\r\nimport { AuthenticationService } from \"src/app/Shared/Service/authentication.service\";\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent implements OnInit {\r\n\r\n  //#region Variable\r\n  loginData: UserViewModel;\r\n  listModel: ComplainStatusMasterViewModel[];\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  id: number;\r\n  displayedColumns: string[] = ['index', 'Name', 'NameHindi', 'IsAdmAction', 'IsDevAction', 'IsUserAction', 'IsAdmFilter', 'IsDevFilter', 'IsUserFilter', 'SMSContent', 'NoOfDaysForAutoClose', 'IsActive', 'Action'];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [{ Value: 'Name', Text: 'Status Name' }, { Value: 'NameHindi', Text: 'Status Name In Hindi' }, { Value: 'SMSContent', Text: 'SMS Content' }, { Value: 'NoOfDaysForAutoClose', Text: 'No Of Days For Auto Close' }];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  Permission: PermissionModel = this._commonService.GetPagePermission(\"/compliant/master/status\", \"/compliant/master/status/add\", \"\", \"/compliant/master/status/edit\", \"\");\r\n  indexModel: IndexModel;\r\n  totalRecords: number;\r\n  //#endregion\r\n  constructor(\r\n    private readonly _alertService: AlertService,\r\n    private readonly _parentApi: AppComponent,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _router: Router,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _complainStatusMasterService: ComplainStatusMasterService) {\r\n    this._parentApi.setpagelayout(\"\", \"\", \"\", \"\", true);\r\n    this.indexModel = new IndexModel();\r\n\r\n  }\r\n  //#endregion\r\n\r\n  ngOnInit() {\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.GetList();\r\n  }\r\n\r\n\r\n  GetList() {\r\n    this._complainStatusMasterService.GetList(this.indexModel).subscribe(\r\n      data => {\r\n        if ((data.IsSuccess)) {\r\n          this.listModel = <ComplainStatusMasterViewModel[]>data.Data.Data;\r\n          this.dataSource = new MatTableDataSource<ComplainStatusMasterViewModel>(this.listModel);\r\n          console.log(this.listModel)\r\n          this.totalRecords = data.Data.TotalRecords;\r\n          if (!this.indexModel.IsPostBack) {\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  OpenDialog(Id) {\r\n    const _dialogRef = this._dialog.open(AddUpdateStatusComponent, {\r\n      width: \"50%\",\r\n      data: Id,\r\n      disableClose: true\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n\r\n      if (result) {\r\n        this.GetList();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  OnStatusClick(id) {\r\n    this._commonService.GenerateOTP().subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const _dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n            width: \"50%\",\r\n            data: GlobalMessagesModel.ConfirmStatusChanged\r\n          });\r\n          _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n            if (result) {\r\n\r\n              this._complainStatusMasterService.ChangeActiveStatus(id).subscribe(\r\n                data => {\r\n                  if (data.IsSuccess) {\r\n                    this.GetList();\r\n                    this._alertService.success(data.Message);\r\n                  } else {\r\n                    this._alertService.error(data.Message);\r\n                  }\r\n                },\r\n                error => {\r\n                  this._alertService.error(error.message);\r\n                }\r\n              );\r\n\r\n            }\r\n          });\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n  OnActionStatusClick(id, userType, actionType) {\r\n    this._commonService.GenerateOTP().subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const _dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n            width: \"50%\",\r\n            data: GlobalMessagesModel.ConfirmStatusChanged\r\n          });\r\n          _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n            if (result) {\r\n              let changeStatus = new ChangeStatus();\r\n              changeStatus.Id = id;\r\n              changeStatus.UserType = userType;\r\n              changeStatus.ActionType = actionType;\r\n              changeStatus.UserId = this.loginData.UserId;\r\n              this._complainStatusMasterService.ChangeStatus(changeStatus).subscribe(\r\n                data => {\r\n                  if (data.IsSuccess) {\r\n                    this.GetList();\r\n                    this._alertService.success(data.Message);\r\n                  } else {\r\n                    this._alertService.error(data.Message);\r\n                  }\r\n                },\r\n                error => {\r\n                  this._alertService.error(error.message);\r\n                }\r\n              );\r\n\r\n            }\r\n          });\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  sortData(event) {\r\n    this.indexModel.OrderBy = event.active;\r\n    this.indexModel.OrderByAsc =\r\n      event.direction == AppSetting.orderByDscAsc\r\n        ? AppSetting.orderByAsc\r\n        : AppSetting.orderByDsc;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n  //#endregion\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL2FkZC11cGRhdGUtY29tcGxhaW50L2FkZC11cGRhdGUtY29tcGxhaW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from \"@angular/forms\";\r\nimport { AuthenticationService } from \"src/app/Shared/Service/authentication.service\";\r\nimport { UserService } from \"src/app/Shared/Service/user.service\";\r\nimport { MatDialog } from \"@angular/material\";\r\nimport { DDLModel, DocumentUrlModel, DdlItemModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport { ComplaintListModel, ComplaintAttachmentModel } from 'src/app/Shared/Model/complaint.model';\r\nimport { ComplaintService } from 'src/app/Shared/Service/complaint.service';\r\n\r\n@Component({\r\n  selector: \"app-add-update-complaint\",\r\n  templateUrl: \"./add-update-complaint.component.html\",\r\n  styleUrls: [\"./add-update-complaint.component.css\"]\r\n})\r\nexport class AddUpdateComplaintComponent implements OnInit {\r\n  //#region   Variable\r\n  frmGrp: FormGroup;\r\n  dDLList: DDLModel;\r\n  model: ComplaintListModel;\r\n  ddlPageMasterDetails: DdlItemModel[]=[];\r\n  title:string;\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  //Description = new FormControl('', [Validators.required]);\r\n  fileValidationMsg: string;\r\n  //ApplicationCode = new FormControl('', [Validators.required]);\r\n  //PageCode = new FormControl('', [Validators.required]);\r\n  //ScreenURL = new FormControl('', [Validators.required]);\r\n  //#endregion\r\n  editorConfig = AppSetting.editorConfig as AngularEditorConfig;\r\n  constructor(private readonly fb: FormBuilder,\r\n    private _parentApi: AppComponent,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _router: Router,\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _userService: UserService,\r\n    private _dialog: MatDialog,\r\n    private _route: ActivatedRoute,\r\n    private _complaintService: ComplaintService\r\n  ) {\r\n    this._parentApi.setpagelayout('Add Suggestion-Feedback  :', 'keyboard_backspace', \"Back To List\", \"compliant\");\r\n    this.model = new ComplaintListModel();\r\n  }\r\n  //#region Method\r\n  ngOnInit() {\r\n    this.formGroupInit();\r\n    this.GetDDLList();\r\n  }\r\n\r\n  formGroupInit() {\r\n    const reg = '(?:http(s)?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/?';\r\n    this.frmGrp = this.fb.group({\r\n      Description: [null, Validators.required],\r\n      EntryTypeId: [null, Validators.required],\r\n      PriorityId: [null, Validators.required],\r\n      ApplicationCode: [null, Validators.required],\r\n      PageCode: [null, Validators.required],\r\n      ScreenURL: [null, [Validators.required, Validators.pattern(reg)]]\r\n    });\r\n  }\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.GenerateComplaintDDLKey).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getPageByPageType(applicationCode='') {\r\n    this._commonService.GetPageMasterByPageTypeCode(0, applicationCode).subscribe(\r\n      data => {\r\n        \r\n        if (data.IsSuccess) {\r\n          this.ddlPageMasterDetails = <DdlItemModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  // Save complaint method\r\n\r\n  Saveclick() {\r\n    this.frmGrp.markAllAsTouched();\r\n\r\n\r\n\r\n\r\n    if (this.frmGrp.valid) {\r\n\r\n        this._complaintService.Add(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate(['compliant']);\r\n          } else {\r\n\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        error => {\r\n          this._commonService.ScrollingTop();\r\n          console.log(error);\r\n          this._alertService.error(error.error.ExceptionMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  handleFileInput(files: FileList) {\r\n    let count = 0;\r\n    if (this.documentUrlList.length > 0) {\r\n      count = this.documentUrlList.length;\r\n    }\r\n    // this.documentUrlList = [];\r\n    // this.model.AttachmentList = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n\r\n      if (files.item(index).type.match('application/pdf|image/jpeg|image/png')) {\r\n        if (files.item(index).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\"))) ) {\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e: any) => {\r\n            this.documentUrlList.push(new DocumentUrlModel());\r\n\r\n            this.documentUrlList[index + count].Url = <string>reader.result;\r\n            //  this.documentUrlList[index + count].Extension = (files[index].name.split('.'))[1];\r\n            this.documentUrlList[index + count].Extension = (files[index].type.split('/'))[1];\r\n            // if (this.documentUrlList[index + count].Extension === 'pdf') {\r\n            //if (this.documentUrlList[index + count].Extension.toLowerCase() === 'pdf') {\r\n            if (this.documentUrlList[index + count].Extension.includes('pdf')) {\r\n              this.documentUrlList[index + count].DisplayName = files[index].name;\r\n            }\r\n            //console.log(this.documentUrlList)\r\n            this.model.AttachmentList.push(new ComplaintAttachmentModel());\r\n            // this.model.AttachmentList[index].AttachmentsUrl = files[index].name;\r\n            this.model.AttachmentList[index + count].AttachmentsUrl = <string>reader.result;\r\n          };\r\n          reader.readAsDataURL(files[index]);\r\n        } else {\r\n          this.documentUrlList = [];\r\n          this.model.AttachmentList = [];\r\n          // this.fileValidationMsg = this.fileSizeValidationMsg;\r\n          return;\r\n        }\r\n\r\n      } else {\r\n        this.fileValidationMsg = 'only *pdf';\r\n        this.documentUrlList = [];\r\n        this.model.AttachmentList = [];\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this.fileValidationMsg = '';\r\n    // this.model.File = files;\r\n\r\n  }\r\n\r\n\r\n  downloadPdf(Url, name) {\r\n    \r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n\r\n\r\n  RemoveImageFile(i) {\r\n        this.documentUrlList.splice(i, 1);\r\n       // this.Imeges.slice(i, 1);\r\n      }\r\n\r\n\r\n  //#endregion\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL2NvbXBsYWludC1zb2Z0d2FyZS1kZXRhaWwvY29tcGxhaW50LXNvZnR3YXJlLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { UserTypeEnum } from \"src/app/Shared/Enum/user-type.enum\";\r\nimport { ComplaintEntryListModel } from \"src/app/Shared/Model/complaint.model\";\r\nimport { PermissionModel } from \"src/app/Shared/Model/general-model\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { AuthenticationService } from \"src/app/Shared/Service/authentication.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { ComplaintService } from \"src/app/Shared/Service/complaint.service\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { isNullOrUndefined } from \"util\";\r\nimport { CompliantActionDialogComponent } from \"../compliant-action-dialog/compliant-action-dialog.component\";\r\nimport { MatDialog, MatTableDataSource, MatPaginator, MatSort, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\n@Component({\r\n  selector: 'app-complaint-software-detail',\r\n  templateUrl: './complaint-software-detail.component.html',\r\n  styleUrls: ['./complaint-software-detail.component.css']\r\n})\r\nexport class ComplaintSoftwareDetailComponent implements OnInit {\r\n\r\n  //#region <<Variable>>\r\n  loginBaseUserType: string;\r\n  model: ComplaintEntryListModel;\r\n  RecordId: number = 0;\r\n  IsHideDeptInternal_VendorCommBtn: boolean = false;\r\n  userTypeEnum = UserTypeEnum;\r\n  Permission: PermissionModel = this._commonService.GetPagePermission(\"/compliant\", \"compliant/create\", \"compliant/detail\", \"compliant/update\", \"compliant/delete\");\r\n  //#endregion\r\n\r\n  //#region <<Constructor>>\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly appComponent: AppComponent,\r\n    public readonly _commonService: CommonService,\r\n    private readonly _alertService: AlertService,\r\n    private _route: ActivatedRoute,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _authService: AuthenticationService,\r\n    private _complaintService: ComplaintService\r\n  ) {\r\n    this.model = new ComplaintEntryListModel();\r\n    if (!isNullOrUndefined(this._route.snapshot.params.id)) {\r\n      this.RecordId = this._route.snapshot.params.id;\r\n    }\r\n    this._parentApi.setpagelayout(\r\n      \"Suggestion-Feedback :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"compliant\"\r\n    );\r\n\r\n  }\r\n  //#endregion\r\n\r\n  ngOnInit() {\r\n    if (this.RecordId != 0) {\r\n      this.getDetail();\r\n    }\r\n  }\r\n\r\n  getDetail() {\r\n    this._complaintService.Detail(this.RecordId).subscribe(\r\n      data => {\r\n        console.log(data)\r\n        if (data.IsSuccess) {\r\n          this.model = <ComplaintEntryListModel>data.Data;\r\n          // if (this.model.Status == StatusEnum.SENT && this.loginBaseUserType != UserTypeEnum.VNDR && this.loginBaseUserType != UserTypeEnum.VNDRUSER) {\r\n          //   this.model.Status = StatusEnum.RECEIVED;\r\n          // }\r\n\r\n          // if (this.model.Status == StatusEnum.RECEIVED || this.model.Status == StatusEnum.RETURN || this.model.Status == StatusEnum.ACCEPT || this.model.Status == StatusEnum.CLOSE || this.model.Status == StatusEnum.DISPOSED || this.model.Status == StatusEnum.REJECT) {\r\n          //   this.IsHideDeptInternal_VendorCommBtn = true;\r\n          // }\r\n          // else{\r\n          //   this.IsHideDeptInternal_VendorCommBtn = false;\r\n          // }\r\n          //  this.appComponent.setPageLayout(\"Suggestion-Feedback Detail :\", \"keyboard_backspace\", \"Back To List\", \"complaint-software\");\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  OpenChangeOfficeDialog(Id) {\r\n    // const _dialogRef = this._dialog.open(ChangeCommunicationOfficeDialogComponent, {\r\n    //   width: \"500px\",\r\n    //   data: { Id },\r\n    //   disableClose: true\r\n    // });\r\n    // _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n    //   if (result) {\r\n    //     this.getDetail();\r\n    //   }\r\n    // });\r\n  }\r\n  getAbsalutePath(url) {\r\n    return environment.ApiBaseUrl + url.replace(\"~/\", \"\").trim();\r\n  }\r\n  downloadPdf(Url, name) {\r\n\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n  OpenDialog(id) {\r\n    const dialogRef = this._dialog.open(CompliantActionDialogComponent, {\r\n      width: '500px',\r\n      data: id\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.getDetail();\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ComplaintSoftwareComponent } from './complaint-software.component';\r\nimport { AddUpdateComplaintComponent } from './add-update-complaint/add-update-complaint.component';\r\nimport { ComplaintSoftwareDetailComponent } from './complaint-software-detail/complaint-software-detail.component';\r\nimport { EntryTypeComponent } from './Masters/entry-type/entry-type.component';\r\nimport { StatusComponent } from './Masters/status/status.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ComplaintSoftwareComponent,\r\n  },\r\n\r\n  {\r\n    path: 'compliantList',\r\n    component: ComplaintSoftwareComponent\r\n  },\r\n  {\r\n    path: 'compliantListAddUpdate',\r\n    component: AddUpdateComplaintComponent\r\n  },\r\n  {\r\n    path: 'compliantListAddUpdate/:id',\r\n    component: AddUpdateComplaintComponent\r\n  },\r\n  {\r\n    path: \"detail/:id\",\r\n    component: ComplaintSoftwareDetailComponent\r\n  },\r\n\r\n  {\r\n    path: 'master/entrytype',\r\n    component: EntryTypeComponent\r\n  },\r\n  {\r\n    path: 'master/status',\r\n    component: StatusComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ComplaintSoftwareRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL2NvbXBsYWludC1zb2Z0d2FyZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { MatDialog, MatTableDataSource, MatPaginator, MatSort, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ComplaintService } from 'src/app/Shared/Service/complaint.service';\r\nimport {  CompliantSearchModel, ComplaintEntryListModel } from 'src/app/Shared/Model/complaint.model';\r\nimport { ColumnHeaderModel, DdlItemModel, DDLModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { CompliantEnum } from 'src/app/Shared/Enum/compliant.enum';\r\nimport { CompliantActionDialogComponent } from './compliant-action-dialog/compliant-action-dialog.component';\r\nimport { JsonPipe } from '@angular/common';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IndexModel, PermissionModel } from 'src/app/Shared/Model/general-model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-complaint-software',\r\n  templateUrl: './complaint-software.component.html',\r\n  styleUrls: ['./complaint-software.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS },\r\n  ],\r\n})\r\nexport class ComplaintSoftwareComponent implements OnInit {\r\n\r\n  //#region  // Variable //\r\n  dDLList: DDLModel;\r\n  listModel: ComplaintEntryListModel[];\r\n  indexModel: CompliantSearchModel;\r\n  dataSource: any;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  totalRecords: number;\r\n  compliantEnum = CompliantEnum;\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"Description\",\r\n    \"ScreenURL\",\r\n    \"StatusName\",\r\n    \"EntryTypeName\",\r\n\r\n    \"ApplicationTitle\",\r\n    \"PermissionTitle\",\r\n    \"UserDetail\",\r\n    \"PriorityId\",\r\n    \"Attachments\",\r\n    \"Action\",\r\n  ];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    //{ Value: \"StatusName\", Text: \"Status\" },\r\n    { Value: \"EntryTypeName\", Text: \"Entry Type\" },\r\n    { Value: \"ApplicationTitle\", Text: \"Application\" },\r\n    { Value: \"PermissionTitle\", Text: \"Page\" }\r\n  ];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n\r\n  statusId: string[] = [];\r\n  Permission: PermissionModel = this._commonService.GetPagePermission(\"/compliant\", \"compliant/create\", \"compliant/detail\", \"compliant/update\", \"compliant/delete\");\r\n  //#endregion\r\n  // searchModel = new CompliantSearchModel();\r\n  searchModel = this._commonService.modelSetGet(new CompliantSearchModel()) as CompliantSearchModel;\r\n  isShow = true;\r\n  selectedAllStatus: boolean = false;\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _userService: UserService,\r\n    private _route: ActivatedRoute,\r\n    private _complaintService: ComplaintService\r\n  ) {\r\n    this._parentApi.setpagelayout('Suggestion-Feedback :', \"add\", \"Add\", \"/compliant/compliantListAddUpdate\");\r\n   // this.searchModel = new CompliantSearchModel();\r\n   }\r\n\r\n  ngOnInit() {\r\n    if (this.searchModel.StatusId == null) {\r\n      this.statusId = ['2'];\r\n    }\r\n    this.GetList();\r\n    this.GetDDLList();\r\n\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.ComplaintFilterDDLKey).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetList() {\r\n    if (this.statusId.length > 0) {\r\n      //this.searchModel.indexModel.AdvanceSearchModel = { StatusIds: JSON.stringify(this.statusId) };\r\n      this.searchModel.StatusId = this.statusId.toString();\r\n    }\r\n    this.statusId = this.searchModel.StatusId ? this.searchModel.StatusId.toString().split(\",\") : this.statusId;\r\n\r\n    this._complaintService.GetList(this._commonService.modelSetGet(this.searchModel, true)).subscribe(\r\n      (data) => {\r\n        if (data.IsSuccess) {\r\n          this.listModel = <ComplaintEntryListModel[]>data.Data.Data;\r\n          this.dataSource = new MatTableDataSource<ComplaintEntryListModel>(\r\n            this.listModel\r\n          );\r\n\r\n          this.totalRecords = data.Data.TotalRecords;\r\n          if (!this.searchModel.indexModel.IsPostBack) {\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        }\r\n      },\r\n      (error) => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getAbsalutePath(url) {\r\n    return environment.ApiBaseUrl + url.replace(\"~/\", \"\").trim();\r\n }\r\n\r\n  sortData(event) {\r\n    this.searchModel.indexModel.OrderBy = event.active;\r\n    this.searchModel.indexModel.OrderByAsc =\r\n      event.direction == AppSetting.orderByDscAsc\r\n        ? AppSetting.orderByAsc\r\n        : AppSetting.orderByDsc;\r\n    this.searchModel.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.searchModel.indexModel.Page = event.pageIndex + 1;\r\n    this.searchModel.indexModel.PageSize = event.pageSize;\r\n    this.searchModel.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n    this.searchModel = this._commonService.modelSetGet(this.searchModel, true)\r\n  }\r\n\r\n  OpenDialog(id) {\r\n    const dialogRef = this._dialog.open(CompliantActionDialogComponent, {\r\n      width: '500px',\r\n      data: id\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.GetList();\r\n      }\r\n    });\r\n  }\r\n  toggleDisplay() {\r\n    this.isShow = !this.isShow;\r\n  }\r\n\r\n  Reset() {\r\n    this.statusId = [];\r\n    this.searchModel = new CompliantSearchModel();\r\n    this.GetDDLList();\r\n    this.GetList();\r\n    this.searchModel = this._commonService.modelSetGet(this.searchModel, true)\r\n  }\r\n\r\n  selectAllStatus() {\r\n    if (this.selectedAllStatus) {\r\n      this.statusId = [];\r\n      this.statusId = this.dDLList.ddlCompliantFilter.map(function (a) {\r\n        return String(a.Value);\r\n      });\r\n    } else {\r\n      this.statusId = [];\r\n    }\r\n    this.selectedAllStatus = !this.selectedAllStatus;\r\n  }\r\n  Search() {\r\n    this.searchModel.indexModel = new IndexModel();\r\n    this.GetList();\r\n    this.searchModel = this._commonService.modelSetGet(this.searchModel, true)\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComplaintSoftwareRoutingModule } from './complaint-software-routing.module';\r\nimport { AppMaterialModule } from 'src/app/Shared/app-material/app-material.module';\r\nimport { CKEditorModule } from 'ng2-ckeditor';\r\nimport { ComplaintSoftwareComponent } from './complaint-software.component';\r\nimport { Routes } from '@angular/router';\r\nimport { AddUpdateComplaintComponent } from './add-update-complaint/add-update-complaint.component';\r\nimport { CompliantActionDialogComponent } from './compliant-action-dialog/compliant-action-dialog.component';\r\nimport { ComplaintSoftwareDetailComponent } from './complaint-software-detail/complaint-software-detail.component';\r\n\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\nimport { EntryTypeComponent } from './Masters/entry-type/entry-type.component';\r\nimport { StatusComponent } from './Masters/status/status.component';\r\nimport { AddUpdateEntryTypeComponent } from './Masters/entry-type/add-update-entry-type/add-update-entry-type.component';\r\nimport { AddUpdateStatusComponent } from './Masters/status/add-update-status/add-update-status.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ComplaintSoftwareComponent, AddUpdateComplaintComponent, CompliantActionDialogComponent, ComplaintSoftwareDetailComponent, EntryTypeComponent, StatusComponent, AddUpdateEntryTypeComponent, AddUpdateStatusComponent],\r\n  entryComponents:[\r\n    CompliantActionDialogComponent, AddUpdateEntryTypeComponent, AddUpdateStatusComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ComplaintSoftwareRoutingModule,\r\n    AppMaterialModule,\r\n    CKEditorModule,\r\n    AngularEditorModule\r\n  ]\r\n})\r\nexport class ComplaintSoftwareModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvY29tcGxhaW50LXNvZnR3YXJlL2NvbXBsaWFudC1hY3Rpb24tZGlhbG9nL2NvbXBsaWFudC1hY3Rpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ComplaintActionModel } from 'src/app/Shared/Model/complaint.model';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { AngularEditorConfig } from '@kolkov/angular-editor';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { Router, Event } from '@angular/router';\r\nimport { DDLModel, DocumentUrlModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { ComplaintService } from 'src/app/Shared/Service/complaint.service';\r\n\r\n@Component({\r\n  selector: 'app-compliant-action-dialog',\r\n  templateUrl: './compliant-action-dialog.component.html',\r\n  styleUrls: ['./compliant-action-dialog.component.css']\r\n})\r\nexport class CompliantActionDialogComponent implements OnInit {\r\n\r\n//#region   Variable\r\n\tfrmGrp: FormGroup;\r\ndDLList: DDLModel;\r\n//Status = new FormControl('', [Validators.required]);\r\n//Comment = new FormControl('', [Validators.required]);\r\n//ttachment = new FormControl('', null);\r\nmodel:ComplaintActionModel;\r\nfileValidationMsg: string;\r\ndocumentUrlList: DocumentUrlModel[] = [];\r\n\teditorConfig = AppSetting.editorConfig as AngularEditorConfig;\r\n//#endregion\r\n\r\n  constructor(\r\n  private readonly fb: FormBuilder,\r\n    public _dialogRef: MatDialogRef<CompliantActionDialogComponent>,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _router: Router,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private _complaintService: ComplaintService\r\n  ) {\r\n    this.model = new ComplaintActionModel();\r\n    if(data){\r\n      this.model.ComplaintEntryId = data;\r\n     }\r\n  }\r\n\r\n  ngOnInit() {\r\n\t\t\t\t\t this.formGroupInit()\r\n    this.GetDDLList();\r\n  }\r\n//#region  method\r\nformGroupInit() {\r\n\r\n    this.frmGrp = this.fb.group({\r\n      Status: [null, Validators.required],\r\n      Comment: [null, Validators.required],\r\n      Attachment: [null, null],\r\n\r\n    });\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.GenerateComplaintDDLKey).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n  Saveclick() {\r\n    \r\n  //  this.Status.markAsTouched();\r\n  //  this.Comment.markAsTouched();\r\n  //  this.Attachment.markAsTouched();\r\n //   if (this.Status.valid && this.Comment.valid && this.Attachment.valid) {\r\n\r\n\t\t this.frmGrp.markAllAsTouched();\r\n    if (this.frmGrp.valid) {\r\n        this._complaintService.AddAction(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            \r\n            this._alertService.success(data.Message);\r\n            this._dialogRef.close(true);\r\n          } else {\r\n\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        error => {\r\n          this._commonService.ScrollingTop();\r\n          console.log(error);\r\n          this._alertService.error(error.error.ExceptionMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n\r\n  // handleFileInput(files: FileList) {\r\n  \r\n  //   let count = 0;\r\n  //   if (this.documentUrlList.length > 0) {\r\n  //     count = this.documentUrlList.length;\r\n  //   }\r\n  //   // this.documentUrlList = [];\r\n  //   // this.model.AttachmentList = [];\r\n  //   for (let index = 0; index < files.length; index++) {\r\n\r\n  //     if (files.item(index).type.match('application/pdf|image/jpeg')) {\r\n  //       if (files.item(index).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\"))) ) {\r\n  //         const reader = new FileReader();\r\n\r\n  //         reader.onload = (e: any) => {\r\n  //           this.documentUrlList.push(new DocumentUrlModel());\r\n\r\n  //           this.documentUrlList[index + count].Url = <string>reader.result;\r\n  //           this.documentUrlList[index + count].Extension = (files[index].name.split('.'))[1];\r\n  //           if (this.documentUrlList[index + count].Extension === 'pdf') {\r\n  //             this.documentUrlList[index + count].DisplayName = files[index].name;\r\n  //           }\r\n\r\n  //           this.model.AttachmentsUrl.push(new ComplaintAttachmentModel());\r\n  //           // this.model.AttachmentList[index].AttachmentsUrl = files[index].name;\r\n  //           this.model.AttachmentList[index + count].AttachmentsUrl = <string>reader.result;\r\n  //         };\r\n  //         reader.readAsDataURL(files[index]);\r\n  //       } else {\r\n  //         this.documentUrlList = [];\r\n  //         this.model.AttachmentList = [];\r\n  //         // this.fileValidationMsg = this.fileSizeValidationMsg;\r\n  //         return;\r\n  //       }\r\n\r\n  //     } else {\r\n  //       this.fileValidationMsg = 'only *pdf';\r\n  //       this.documentUrlList = [];\r\n  //       this.model.AttachmentList = [];\r\n  //       return;\r\n  //     }\r\n\r\n  //   }\r\n\r\n  //   this.fileValidationMsg = '';\r\n  //   // this.model.File = files;\r\n\r\n  // }\r\n\r\n\r\n\r\n  handleFileInput(files) {\r\n    \r\n    if (files.item(0).type.match('application/pdf|image/jpeg|image/png')) {\r\n      if (files.item(0).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\")))) {\r\n        const reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n            this.model.AttachmentURL =  event.target.result;\r\n            this.model.Extension = (files.item(0).name.split('.'))[1];\r\n        };\r\n        reader.readAsDataURL(files.item(0));\r\n      }\r\n    } else {\r\n        this.fileValidationMsg = \"only pdf/Image file accepted  \";\r\n      }\r\n    }\r\n\r\n\r\n\r\n  download(URL) {\r\n    const linkSource = URL;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n   // downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n\r\n\r\n  RemoveImageFile() {\r\n    \r\n        this.model.AttachmentURL = null;\r\n        this.model.Extension = null;\r\n       // this.Imeges.slice(i, 1);\r\n      }\r\n\r\n\r\n  //#endregion\r\n\r\n\r\n}\r\n"],"sourceRoot":""}