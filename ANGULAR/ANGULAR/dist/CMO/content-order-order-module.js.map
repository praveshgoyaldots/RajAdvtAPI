{"version":3,"sources":["webpack:///./src/app/content/order/add-old-order/add-old-order.component.html","webpack:///./src/app/content/order/add-order/add-order.component.html","webpack:///./src/app/content/order/delete-order/delete-order.component.html","webpack:///./src/app/content/order/detail-order/detail-order.component.html","webpack:///./src/app/content/order/generate-order/dispatch-dialog/dispatch-dialog.component.html","webpack:///./src/app/content/order/generate-order/e-sign-dialog/e-sign-dialog.component.html","webpack:///./src/app/content/order/generate-order/generate-order-add-update/generate-order-add-update.component.html","webpack:///./src/app/content/order/generate-order/generate-order-authority-list/generate-order-authority-list.component.html","webpack:///./src/app/content/order/generate-order/generate-order-preview/generate-order-preview.component.html","webpack:///./src/app/content/order/generate-order/generate-order.component.html","webpack:///./src/app/content/order/generate-order/order-final-approval-list/order-final-approval-list.component.html","webpack:///./src/app/content/order/order-cancellation-dialog/order-cancellation-dialog.component.html","webpack:///./src/app/content/order/order-detail-report/order-detail-report.component.html","webpack:///./src/app/content/order/order-report/order-department-report/order-department-report.component.html","webpack:///./src/app/content/order/order-report/order-documenttype-summary-report/order-documenttype-summary-report.component.html","webpack:///./src/app/content/order/order-report/order-report.component.html","webpack:///./src/app/content/order/order-report/order-summary-report/order-summary-report.component.html","webpack:///./src/app/content/order/order-report/order-summary-with-lasttransdate-report/order-summary-with-lasttransdate-report.component.html","webpack:///./src/app/content/order/order.component.html","webpack:///./src/app/content/order/relatedto-dialog/relatedto-dialog.component.html","webpack:///./src/app/content/order/update-order/update-order.component.html","webpack:///./src/app/content/order/upload-attachment/upload-attachment.component.html","webpack:///./src/app/Shared/Enum/generate-order.enum.ts","webpack:///./src/app/Shared/Model/generate-order.model.ts","webpack:///./src/app/Shared/Model/order-cancellation.model.ts","webpack:///./src/app/Shared/Service/generate-order.service.ts","webpack:///./src/app/Shared/Service/order-cancellation.service.ts","webpack:///./src/app/Shared/Service/orderentry.service.ts","webpack:///./src/app/content/order/add-old-order/add-old-order.component.css","webpack:///./src/app/content/order/add-old-order/add-old-order.component.ts","webpack:///./src/app/content/order/add-order/add-order.component.css","webpack:///./src/app/content/order/add-order/add-order.component.ts","webpack:///./src/app/content/order/delete-order/delete-order.component.css","webpack:///./src/app/content/order/delete-order/delete-order.component.ts","webpack:///./src/app/content/order/detail-order/detail-order.component.css","webpack:///./src/app/content/order/detail-order/detail-order.component.ts","webpack:///./src/app/content/order/generate-order/dispatch-dialog/dispatch-dialog.component.css","webpack:///./src/app/content/order/generate-order/dispatch-dialog/dispatch-dialog.component.ts","webpack:///./src/app/content/order/generate-order/e-sign-dialog/e-sign-dialog.component.css","webpack:///./src/app/content/order/generate-order/e-sign-dialog/e-sign-dialog.component.ts","webpack:///./src/app/content/order/generate-order/generate-order-add-update/generate-order-add-update.component.css","webpack:///./src/app/content/order/generate-order/generate-order-add-update/generate-order-add-update.component.ts","webpack:///./src/app/content/order/generate-order/generate-order-authority-list/generate-order-authority-list.component.css","webpack:///./src/app/content/order/generate-order/generate-order-authority-list/generate-order-authority-list.component.ts","webpack:///./src/app/content/order/generate-order/generate-order-preview/generate-order-preview.component.css","webpack:///./src/app/content/order/generate-order/generate-order-preview/generate-order-preview.component.ts","webpack:///./src/app/content/order/generate-order/generate-order.component.css","webpack:///./src/app/content/order/generate-order/generate-order.component.ts","webpack:///./src/app/content/order/generate-order/order-final-approval-list/order-final-approval-list.component.css","webpack:///./src/app/content/order/generate-order/order-final-approval-list/order-final-approval-list.component.ts","webpack:///./src/app/content/order/order-cancellation-dialog/order-cancellation-dialog.component.css","webpack:///./src/app/content/order/order-cancellation-dialog/order-cancellation-dialog.component.ts","webpack:///./src/app/content/order/order-detail-report/order-detail-report.component.css","webpack:///./src/app/content/order/order-detail-report/order-detail-report.component.ts","webpack:///./src/app/content/order/order-report/order-department-report/order-department-report.component.css","webpack:///./src/app/content/order/order-report/order-department-report/order-department-report.component.ts","webpack:///./src/app/content/order/order-report/order-documenttype-summary-report/order-documenttype-summary-report.component.css","webpack:///./src/app/content/order/order-report/order-documenttype-summary-report/order-documenttype-summary-report.component.ts","webpack:///./src/app/content/order/order-report/order-report.component.css","webpack:///./src/app/content/order/order-report/order-report.component.ts","webpack:///./src/app/content/order/order-report/order-summary-report/order-summary-report.component.css","webpack:///./src/app/content/order/order-report/order-summary-report/order-summary-report.component.ts","webpack:///./src/app/content/order/order-report/order-summary-with-lasttransdate-report/order-summary-with-lasttransdate-report.component.css","webpack:///./src/app/content/order/order-report/order-summary-with-lasttransdate-report/order-summary-with-lasttransdate-report.component.ts","webpack:///./src/app/content/order/order-routing.module.ts","webpack:///./src/app/content/order/order.component.css","webpack:///./src/app/content/order/order.component.ts","webpack:///./src/app/content/order/order.module.ts","webpack:///./src/app/content/order/relatedto-dialog/relatedto-dialog.component.css","webpack:///./src/app/content/order/relatedto-dialog/relatedto-dialog.component.ts","webpack:///./src/app/content/order/update-order/update-order.component.css","webpack:///./src/app/content/order/update-order/update-order.component.ts","webpack:///./src/app/content/order/upload-attachment/upload-attachment.component.css","webpack:///./src/app/content/order/upload-attachment/upload-attachment.component.ts"],"names":[],"mappings":"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","file":"content-order-order-module.js","sourcesContent":["module.exports = \"\\r\\n    <div class=\\\"row\\\">\\r\\n      <div style=\\\"text-align: right;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadPdf(helpDocument.Url,true)\\\"\\r\\n          href=\\\"JavaScript:Void(0);\\\">\\r\\n          <mat-icon>picture_as_pdf</mat-icon>\\r\\n          Click to download Help Document\\r\\n        </a> </div>\\r\\n\\r\\n        <div style=\\\"text-align: left;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadPdf(helpDocument.BlankDocUrl)\\\"\\r\\n          href=\\\"JavaScript:Void(0);\\\">\\r\\n          <mat-icon>picture_as_pdf</mat-icon>\\r\\n          Click to download Blank Document\\r\\n        </a> </div>\\r\\n    </div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n    <section class=\\\"mat-typography\\\">\\r\\n        <h2 class=\\\"color-blue mb-0\\\">Issuer Details</h2>\\r\\n      </section>\\r\\n</div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n          <mat-label>Nodal Department <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n          <mat-select name=\\\"DepartmentCode\\\" [(ngModel)]=\\\"model.DepartmentCode\\\" [formControl]=\\\"department\\\" (selectionChange)=\\\"GetSubType(model.DepartmentCode,model.Type,true)\\\">\\r\\n            <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">\\r\\n              {{ k.DepartmentTitle }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"department.invalid && department.touched\\\">\\r\\n          Nodal  Department is <strong>required</strong>\\r\\n          </mat-error>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field  appearance = \\\"outline\\\">\\r\\n          <mat-label> Document Type <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n          <mat-select name=\\\"Type\\\" [(ngModel)]=\\\"model.Type\\\" [formControl]=\\\"type\\\" (selectionChange)=\\\"checkValid($event.value);GetSubType(model.DepartmentCode,$event.value)\\\" >\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.OrderWithRequiredType\\\">{{item.Name}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"type.invalid && type.touched\\\">\\r\\n           Type is <strong>required</strong>\\r\\n        </mat-error>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field  appearance = \\\"outline\\\">\\r\\n          <mat-label> Document Sub Type <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n          <mat-select name=\\\"SubTypeCode\\\" [(ngModel)]=\\\"model.SubTypeCode\\\"  [formControl]=\\\"SubType\\\">\\r\\n            <mat-option>--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of ddlSubType\\\">{{item.Text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"SubType.invalid && SubType.touched\\\">\\r\\n           Document Sub Type is <strong>required</strong>\\r\\n         </mat-error>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n          <mat-label>Sector <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n          <mat-select name=\\\"Sector\\\" [(ngModel)]=\\\"model.Sector\\\" multiple [formControl]=\\\"Sector\\\">\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderSector\\\">{{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"Sector.invalid && Sector.touched\\\">\\r\\n            Sector is <strong>required</strong>\\r\\n          </mat-error>\\r\\n      </div>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n        <mat-label>Office</mat-label>\\r\\n        <input matInput name=\\\"Remarks\\\" [(ngModel)]=\\\"loginData.OfficeName\\\" readonly>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> District <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n          <mat-select  #DistrictCode [formControl]=\\\"district\\\" [(ngModel)]=\\\"model.DistrictCode\\\">\\r\\n              <mat-option>--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{ k.DistrictCode }}\\\" *ngFor=\\\"let k of ddlDistrict\\\">{{ k.DistrictTitle }} </mat-option>\\r\\n\\r\\n          </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"district.invalid && district.touched\\\">\\r\\n        District is <strong>required</strong>\\r\\n        </mat-error>\\r\\n  </div> -->\\r\\n\\r\\n    <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n          <h2 class=\\\"color-blue mb-0\\\">Orders/Circulars/Notification Details (Document Details)</h2>\\r\\n        </section>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\" >\\r\\n      <mat-label> Title/Subject <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n      <textarea matInput placeholder=\\\" Title/Subject\\\" name=\\\"Title\\\" [(ngModel)]=\\\"model.Title\\\" [formControl]=\\\"title\\\"\\r\\n       ></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"title.invalid && title.touched\\\">\\r\\n      Title is <strong>required</strong>\\r\\n    </mat-error>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n        <mat-label> Brief Description </mat-label>\\r\\n        <textarea matInput placeholder=\\\"Brief Description\\\" name=\\\"Description\\\" [(ngModel)]=\\\"model.Description\\\"\\r\\n          [formControl]=\\\"description\\\" style=\\\"height: 200px;\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"description.invalid && description.touched\\\">\\r\\n        Brief Description is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDocumentNoMandatory!=this.orderDocumentNoValidationEnum.No\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n        <mat-label>Document No. <span style=\\\"color: red\\\" *ngIf=\\\"orderTypeData?.IsDocumentNoMandatory===this.orderDocumentNoValidationEnum.Yes\\\">*</span></mat-label>\\r\\n        <input matInput placeholder=\\\"12DD\\\" name=\\\"OrderNo\\\" [formControl]=\\\"orderNo\\\" [(ngModel)]=\\\"model.OrderNo\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"orderNo.invalid && orderNo.touched\\\">\\r\\n        Order No. is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDateMandatory\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n      <mat-label>Issue Date <span style=\\\"color: red\\\">*</span>\\r\\n\\r\\n      </mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Issue Date\\\" name=\\\"Date\\\"\\r\\n        id=\\\"Date\\\" [(ngModel)]=\\\"model.Date\\\" [max]=\\\"tomorrow\\\" [formControl]=\\\"date\\\" (ngModelChange)=\\\"modelChanged()\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"date.invalid && date.touched\\\">\\r\\n      Issue Date is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDateMandatory\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n      <mat-label>With Affect From (Date)\\r\\n      </mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly placeholder=\\\"With Affect From (Date)\\\"\\r\\n        name=\\\"EffectForm\\\" id=\\\"EffectForm\\\" [min]=\\\"model.Date\\\" [(ngModel)]=\\\"model.EffectForm\\\" >\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n  <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>Departments Affected</mat-label>\\r\\n      <mat-select name=\\\"DepartmentEffected\\\" [(ngModel)]=\\\"model.DepartmentEffected\\\" multiple>\\r\\n\\r\\n          <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectAll()\\\">\\r\\n              <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"selectedAll>0 || model?.DepartmentEffected?.length==dDLList?.ddlDepartment?.length\\\"> SelectAll </mat-checkbox>\\r\\n          </mat-option>\\r\\n        <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlDepartment\\\">{{item.Text}} </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div> -->\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>Previous Document Reference No</mat-label>\\r\\n      <input matInput placeholder=\\\"Previous Document Reference No\\\" name=\\\"ReferenceNumber\\\"\\r\\n        [(ngModel)]=\\\"model.ReferenceNumber\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" >\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n      <mat-label>Beneficiary Category</mat-label>\\r\\n      <mat-select name=\\\"BeneficiaryCategory\\\" [(ngModel)]=\\\"model.BeneficiaryCategory\\\" multiple>\\r\\n          <!-- <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectBenificiaryAll()\\\">\\r\\n              <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"selectedBenAll>0 || model?.BeneficiaryCategory?.length==dDLList?.ddlBeneficiaryCategory?.length\\\"> SelectAll </mat-checkbox>\\r\\n          </mat-option> -->\\r\\n        <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlBeneficiaryCategory\\\">{{item.Text}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"  aria-label=\\\"Select an option\\\"  [(ngModel)]=\\\"model.LinkToScheme\\\" name=\\\"LinkToScheme\\\"  >\\r\\n      <mat-label class=\\\"mr-5\\\" style=\\\"display: inline;\\\">Linked To Scheme(If Any) </mat-label>\\r\\n      <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.RadioLinkedToScheme;let i = index\\\">{{item.Text}}</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n      <mat-label>Remarks</mat-label>\\r\\n      <input matInput placeholder=\\\"Remarks if any\\\" name=\\\"Remarks\\\" [(ngModel)]=\\\"model.Remarks\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"false\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n      <mat-label>URL (Reference Link)</mat-label>\\r\\n      <input matInput placeholder=\\\"References Link\\\" name=\\\"ReferenceLink\\\" [(ngModel)]=\\\"model.ReferenceLink\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label>Attachment(Pdf Only)  <span style=\\\"color: red\\\">*</span></label>\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" [formControl]=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\" accept=\\\"application/pdf\\\" multiple>\\r\\n\\r\\n      </div>\\r\\n            \\r\\n\\r\\n\\r\\n      <mat-error *ngIf=\\\"file.invalid && file.touched\\\">\\r\\n          Attachment is <strong>required</strong>\\r\\n        </mat-error>\\r\\n        <span style=\\\"color: red\\\">{{fileSizeValidationMsg}}</span>\\r\\n\\r\\n      <ul class=\\\"image-list\\\">\\r\\n      <li *ngFor=\\\"let url of documentUrlList; let i = index;\\\" >\\r\\n\\r\\n        <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" href=\\\"{{url?.Url}}\\\" target=\\\"_blank\\\">\\r\\n          {{ url.DisplayName}}\\r\\n        </a>\\r\\n         <a title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(i)\\\">\\r\\n          <mat-icon>delete</mat-icon>\\r\\n        </a>\\r\\n        <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" /></div>\\r\\n\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n      <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">{{fileValidationMsg}}</mat-error>\\r\\n    </div>\\r\\n\\r\\n  <div class=\\\"col l12 xl12 m12 s12 mat-list-n-d\\\" *ngIf=\\\"model.LinkToScheme==orderEnum.LinkToScheme\\\">\\r\\n      <mat-label class=\\\"cc-ref\\\" appearance=\\\"outline\\\">Scheme <mat-checkbox (change)=\\\"showAllScheme($event);\\\"> Show All Scheme </mat-checkbox>\\r\\n      </mat-label>\\r\\n      <mat-selection-list  [(ngModel)]=\\\"model.BenificiarySchemeIds\\\" (selectionChange)=\\\"onSelection()\\\" >\\r\\n                <mat-list-option [value]=\\\"item.Value\\\" *ngFor=\\\"let item of dDLList?.ddlSchemeName ;let i = index\\\">\\r\\n                               <span> {{ i+1 }} <span>. </span> {{ item.Text}}</span>\\r\\n                                  </mat-list-option>\\r\\n      </mat-selection-list>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" style=\\\"display: none;\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\" disabled=\\\"true\\\"\\r\\n    aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"model.IssueBy\\\" name=\\\"IssueBy\\\">\\r\\n    <mat-label class=\\\"mr-5\\\">Order Issue By </mat-label>\\r\\n    <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderIssueBy;let i = index\\\" [checked]=\\\"i === 1\\\">{{item.Text}}</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          <div class=\\\"col l6 xl6 m6 s12\\\" *ngIf=\\\"model.LinkToScheme==orderEnum.LinkToScheme\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n                <mat-label>Individual Beneficiary Scheme</mat-label>\\r\\n                <textarea matInput placeholder=\\\"Individual Beneficiary Scheme\\\" name=\\\"IndividualBeneficiaryScheme\\\"\\r\\n                  [(ngModel)]=\\\"model.IndividualBeneficiaryScheme\\\">\\r\\n                </textarea>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Search criteria keyword</mat-label>\\r\\n                <textarea matInput placeholder=\\\"Search keyword\\\" name=\\\"SearchCriteria\\\" [(ngModel)]=\\\"model.SearchCriteria\\\" [formControl]=\\\"searchCriteria\\\"></textarea>\\r\\n              </mat-form-field>\\r\\n              <mat-error *ngIf=\\\"searchCriteria.errors?.minlength || (searchCriteria.invalid && searchCriteria.touched)\\\">\\r\\n                Search criteria keyword must be at least 50 characters long.\\r\\n           </mat-error>\\r\\n            </div>\\r\\n        <div class=\\\"col l12 m12 s12 mb-20\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue mb-0\\\">Linked with (Budget/CM Announcement/CM Directions/Jan Ghoshna Patra)</h2>\\r\\n              </section>\\r\\n        </div>\\r\\n\\r\\n  <div class=\\\"row highlight_view btn_add_box\\\">\\r\\n\\r\\n      <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n        <mat-form-field  appearance = \\\"outline\\\">\\r\\n          <mat-label>Module</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"orderRelatedTo.ModuleId\\\">\\r\\n            <mat-option >--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderModuleName\\\">{{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n          <mat-label>Year </mat-label>\\r\\n\\r\\n          <mat-select [(ngModel)]=\\\"orderRelatedTo.YearValue\\\">\\r\\n            <mat-option >--Select--</mat-option>\\r\\n            <!-- <mat-option value=\\\"{{item.rowno}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToYear\\\">{{item.particulars}} </mat-option> -->\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlCMISBudgetYear\\\">\\r\\n              {{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col l4 x8 m4 s12  pos_relative\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n          <mat-label>Department</mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"orderRelatedTo.DepartmentId\\\">\\r\\n            <mat-option >--Select--</mat-option>\\r\\n            <!-- <mat-option value=\\\"{{item.prj_dept}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToDepartment\\\">{{item.particulars}} </mat-option> -->\\r\\n            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlDepartmentForCMISReport\\\">\\r\\n              {{item.Text}} </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n\\r\\n        <div class=\\\"d-inline\\\" *ngIf=\\\"model.RelatedToOrderParameterList.length <5\\\"><a class=\\\"btn_add\\\" href=\\\"javascript:void(0)\\\"\\r\\n          (click)=\\\"AddMoreItems()\\\">\\r\\n          <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">add</mat-icon>\\r\\n        </a></div>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col l12 m12 s12 footer-info-bx\\\">\\r\\n        <table class=\\\"table new_table table_border mb-20\\\" *ngIf=\\\"model.RelatedToOrderParameterList.length>0\\\">\\r\\n          <thead>\\r\\n            <tr>\\r\\n              <th scope=\\\"col\\\">#</th>\\r\\n              <th scope=\\\"col\\\" colspan=\\\"3\\\">Details</th>\\r\\n              <th scope=\\\"col\\\" width=\\\"100\\\">Action</th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n            <tr *ngFor=\\\"let item of model.RelatedToOrderParameterList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n                <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                <td colspan=\\\"3\\\">\\r\\n                  <div class=\\\"\\\">\\r\\n\\r\\n                      <div class=\\\"d-inline\\\"> <strong> Module: </strong><span  *ngIf=\\\"item?.ModuleId\\\">{{moduleNameItems[item?.ModuleId]}}</span><span  *ngIf=\\\"!item?.ModuleId\\\">--</span> </div>\\r\\n                      <div class=\\\"d-inline\\\"> <strong>Year: </strong><span  *ngIf=\\\"item?.YearValue\\\">{{yearItems[item?.YearValue]}}</span><span  *ngIf=\\\"!item?.YearValue\\\">--</span> </div>\\r\\n                      <div class=\\\"d-inline\\\"> <strong>Department: </strong><span  *ngIf=\\\"item?.DepartmentId\\\">{{departmentItems[item?.DepartmentId]}}</span><span  *ngIf=\\\"!item?.DepartmentId\\\">--</span> </div>\\r\\n\\r\\n                    </div>\\r\\n                    <div class=\\\"\\\" *ngIf=\\\"item.RelatedToResult\\\">\\r\\n\\r\\n                        <!-- <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.modulename\\\"> <strong> Name: </strong> {{item.RelatedToResult.modulename}}</div>\\r\\n                        <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.filenumber\\\">\\r\\n                          <strong> File Number:</strong> {{item.RelatedToResult.filenumber}}\\r\\n                        </div> -->\\r\\n                        <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.prj_description\\\"><strong>Description:</strong>\\r\\n                          {{item.RelatedToResult.prj_description}}</div>\\r\\n\\r\\n                      </div>\\r\\n                  </td>\\r\\n                  <td class=\\\"action_icon\\\"><a class=\\\"del-icon\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"RemoveClick(i)\\\">\\r\\n                      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">delete</mat-icon>\\r\\n                    </a>\\r\\n                    <a class=\\\"get-icon\\\" href=\\\"javascript:void(0)\\\"\\r\\n                    (click)=\\\"GetRelatedToResult(item.ModuleName,item.DepartmentId,item.DepartmentName,item.YearText,i)\\\">Budget Details</a>\\r\\n                  </td>\\r\\n\\r\\n            </tr>\\r\\n\\r\\n          </tbody>\\r\\n        </table>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"Saveclick()\\\">Submit</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col  s12\\\">\\r\\n      <div class=\\\"mesgs\\\">\\r\\n          <div class=\\\"msg_history\\\">\\r\\n            <div class=\\\"incoming_msg\\\">\\r\\n              <div class=\\\"incoming_msg_img\\\"> <img src=\\\"http://localhost:4200/assets/images/profile.png\\\" alt=\\\"sunil\\\"> </div>\\r\\n              <div class=\\\"received_msg\\\">\\r\\n                <div class=\\\"received_withd_msg\\\">\\r\\n                  <div class=\\\"username\\\">User Name</div>\\r\\n                  <p>Test which is a new approach to have all\\r\\n                    solutions\\r\\n\\r\\n                    <br/>\\r\\n\\r\\n                    <a href=\\\"#\\\">sdsdsdsadsdsad dsadsdsdsdsd</a>\\r\\n\\r\\n                    <br/>\\r\\n\\r\\n                    <a href=\\\"#\\\">sdsdsdsadsdsad dsadsdsdsdsd</a>\\r\\n\\r\\n                    <br/>\\r\\n\\r\\n                    <a href=\\\"#\\\">sdsdsdsadsdsad dsadsdsdsdsd</a>\\r\\n\\r\\n                    <br/>\\r\\n\\r\\n                    <a href=\\\"#\\\">sdsdsdsadsdsad dsadsdsdsdsd</a>\\r\\n                  \\r\\n                  \\r\\n                  </p>\\r\\n                   \\r\\n                  <span class=\\\"time_date\\\"> 11:01 AM    |    June 9  <i class=\\\"material-icons msg-unseen\\\">\\r\\n                    check\\r\\n                    </i></span></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"outgoing_msg\\\">\\r\\n              <div class=\\\"sent_msg\\\">\\r\\n                <div class=\\\"username\\\">User Name</div>\\r\\n                <p>Test which is a new approach to have all\\r\\n                  solutions</p>\\r\\n                <span class=\\\"time_date\\\"> 11:01 AM    |    June 9</span> </div>\\r\\n            </div>\\r\\n            <div class=\\\"incoming_msg\\\">\\r\\n              <div class=\\\"incoming_msg_img\\\"> <img src=\\\"http://localhost:4200/assets/images/profile.png\\\" alt=\\\"sunil\\\"> </div>\\r\\n              <div class=\\\"received_msg\\\">\\r\\n                <div class=\\\"received_withd_msg\\\">\\r\\n                  <div class=\\\"username\\\">User Name</div>\\r\\n                  <p>Test, which is a new approach to have</p>\\r\\n\\r\\n                  <span class=\\\"time_date\\\"> 11:01 AM    |    Yesterday <i class=\\\"material-icons msg-unseen msg_seen\\\">\\r\\n                    check\\r\\n                    </i></span></div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"outgoing_msg\\\">\\r\\n              <div class=\\\"sent_msg\\\">\\r\\n                <div class=\\\"username\\\">User Name</div>\\r\\n                <p>Apollo University, Delhi, India Test</p>\\r\\n                <span class=\\\"time_date\\\"> 11:01 AM    |    Today</span> </div>\\r\\n            </div>\\r\\n            <div class=\\\"incoming_msg\\\">\\r\\n              <div class=\\\"incoming_msg_img\\\"> <img src=\\\"http://localhost:4200/assets/images/profile.png\\\" alt=\\\"sunil\\\"> </div>\\r\\n              <div class=\\\"received_msg\\\">\\r\\n                <div class=\\\"received_withd_msg\\\">\\r\\n                  <div class=\\\"username\\\">User Name</div>\\r\\n\\r\\n                  <p>We work directly with our designers and suppliers,\\r\\n                    and sell direct to you, which means quality, exclusive\\r\\n                    products, at a price anyone can afford.</p>\\r\\n                  <span class=\\\"time_date\\\"> 11:01 AM    |    Today</span></div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n    \\r\\n  \\r\\n  \\r\\n        </div>\\r\\n\\r\\n  \\r\\n  \\r\\n  </div>\\r\\n  \\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"footer_type_msg\\\">\\r\\n\\r\\n    <div class=\\\"row no-margin\\\">\\r\\n\\r\\n      <div class=\\\"col  s12\\\">\\r\\n  \\r\\n        <div class=\\\"d-flex\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n        <mat-label>Type a message...</mat-label>\\r\\n        <input matInput placeholder=\\\"Type a message...\\\">\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- <button mat-button class=\\\"btn-add\\\" ><i class=\\\"material-icons\\\">attach_file</i></button> -->\\r\\n\\r\\n      <div class=\\\"file-btn\\\">\\r\\n        <i class=\\\"material-icons\\\">attach_file</i>\\r\\n        <input type=\\\"file\\\" name=\\\"file\\\">\\r\\n      </div>\\r\\n\\r\\n      <button mat-button class=\\\"btn-send\\\" ><i class=\\\"material-icons\\\">send</i></button>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n \\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row mt-20 detail-bx scheme_detail_page\\\">\\r\\n    <div class=\\\"table-responsive w-100\\\">\\r\\n        <table class=\\\"table custom-data-table\\\">\\r\\n            <tbody>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Attached :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td colspan=\\\"3\\\" *ngIf=\\\"documentUrlList.length>0\\\">\\r\\n                      <ul class=\\\"image-list\\\">\\r\\n                        <li class=\\\"\\\" *ngFor=\\\"let url of documentUrlList\\\"> <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\"\\r\\n                            href=\\\"{{url?.Url}}\\\" (click)=\\\"downloadPdf(url?.Url,url.DisplayName)\\\"> {{ url.DisplayName}} </a>\\r\\n                          <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" height=\\\"100px\\\" width=\\\"100px\\\" />\\r\\n                          </div>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                    <td colspan=\\\"3\\\" *ngIf=\\\"documentUrlList.length==0\\\">\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n\\r\\n                    <td width=\\\"15%\\\">\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Old Orders/CIR./NOTI. Number : </h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td width=\\\"35%\\\">\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.ReferenceNumber\\\">{{model?.ReferenceNumber}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.ReferenceNumber\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td width=\\\"15%\\\">\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Order Status:</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td width=\\\"35%\\\">\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.IsOldOrder\\\">Old Order</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.IsOldOrder\\\"> New Order</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Type : </h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.TypeName\\\">{{model?.TypeName}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.TypeName\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Title :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Title\\\">{{model?.Title}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Title\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Sector Name :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.SectorName\\\">{{model?.SectorName}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.SectorName\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Department Name :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.DepartmentTitle\\\">{{model?.DepartmentTitle}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.DepartmentTitle\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Order No :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.OrderNo\\\">{{model?.OrderNo}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.OrderNo\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Individual Beneficiary Scheme :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.IndividualBeneficiaryScheme\\\">{{model?.IndividualBeneficiaryScheme }}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.IndividualBeneficiaryScheme\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\"> Description :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Description\\\">{{model?.Description}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Description\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">With Affect From (Date) :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.EffectForm\\\">{{model?.EffectForm| date: 'dd/MM/yyyy'}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.EffectForm\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Beneficiary Category :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.BeneficiaryCategoryName\\\">{{model?.BeneficiaryCategoryName}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.BeneficiaryCategoryName\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Department Effected :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.DepartmentEffectedName\\\">{{model?.DepartmentEffectedName}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.DepartmentEffectedName\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Reference Link :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.ReferenceLink\\\">{{model?.ReferenceLink}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.ReferenceLink\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Issue Date :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Date\\\">{{model?.Date| date: 'dd/MM/yyyy'}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Date\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n\\r\\n\\r\\n                </tr>\\r\\n\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Remarks :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Remarks\\\">{{model?.Remarks}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Remarks\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Order Issue By :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.IssueByName\\\">{{model?.IssueByName}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.IssueByName\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h2 class=\\\"color-blue\\\">Search criteiar :</h2>\\r\\n                        </section>\\r\\n                    </td>\\r\\n                    <td>\\r\\n                        <section class=\\\"mat-typography\\\">\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.SearchCriteria\\\">{{model?.SearchCriteria}}</h3>\\r\\n                            <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.SearchCriteria\\\">NA</h3>\\r\\n                        </section>\\r\\n                    </td>\\r\\n\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col s12\\\" *ngIf=\\\"model?.RelatedToOrderParameterList?.length>0\\\">\\r\\n        <section class=\\\"mat-typography\\\">\\r\\n            <h2 class=\\\"result-title text-center\\\">Related To section</h2>\\r\\n        </section>\\r\\n    </div>\\r\\n    <div class=\\\"rel-list row\\\" *ngFor=\\\"let item of model?.RelatedToOrderParameterList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n        <div class=\\\"col s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"result-title-sm text-center\\\">Related To Parameter</h2>\\r\\n            </section>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.ModuleName\\\"><strong class=\\\"color-blue\\\"> Name:</strong> {{model.RelatedToOrderParameterList[i]?.ModuleName}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.ModuleName\\\"><strong class=\\\"color-blue\\\">Module Name:</strong> NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.DepartmentName\\\"><strong class=\\\"color-blue\\\">Department Name:</strong> {{model.RelatedToOrderParameterList[i]?.DepartmentName}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.DepartmentName\\\"><strong class=\\\"color-blue\\\">Department Name:</strong> NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.YearText\\\"><strong class=\\\"color-blue\\\">Year:</strong> {{model.RelatedToOrderParameterList[i]?.YearText}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.YearText\\\"><strong class=\\\"color-blue\\\">Year: </strong> NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"result-title-sm-small text-center\\\">Result By Parameter</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\"><strong class=\\\"color-blue\\\">modulename:</strong> {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\"><strong class=\\\"color-blue\\\">modulename:</strong> NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\"><strong class=\\\"color-blue\\\">File Number: </strong>{{model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\"> <strong class=\\\"color-blue\\\">Filen Nmber: </strong>NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n        <div class=\\\"col l4  s12\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\"><strong class=\\\"color-blue\\\">Description:</strong> {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\"><strong class=\\\"color-blue\\\">Description:</strong> NA</h3>\\r\\n            </section>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"row mt-20 detail-bx\\\">\\r\\n    <button mat-button class=\\\"btn-submit mr-5\\\" (click)=\\\"OnDelete()\\\">Delete</button>\\r\\n    <button mat-button class=\\\"btn-submit mr-5\\\" routerLink=\\\"/order\\\">Cancel</button>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"row mt-20 detail-bx scheme_detail_page\\\">\\r\\n  <div class=\\\"table-responsive w-100\\\">\\r\\n    <table class=\\\"table custom-data-table mb-20\\\">\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td width=\\\"15%\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Attachment :</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td colspan=\\\"3\\\" *ngIf=\\\"documentUrlList.length>0\\\">\\r\\n            <ul class=\\\"image-list\\\">\\r\\n              <li *ngFor=\\\"let url of documentUrlList\\\"> <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\"\\r\\n                  href=\\\"Javascript:void(0);\\\" (click)=\\\"downloadPdf(url?.Url,url.DisplayName)\\\"> {{ url.DisplayName}} </a>\\r\\n                <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" height=\\\"100px\\\" width=\\\"100px\\\" />\\r\\n                </div>\\r\\n              </li>\\r\\n            </ul>\\r\\n          </td>\\r\\n\\r\\n\\r\\n          <td colspan=\\\"3\\\" *ngIf=\\\"documentUrlList.length==0\\\">\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\">NA</h3>\\r\\n            </section>\\r\\n          </td>\\r\\n\\r\\n        </tr>\\r\\n\\r\\n  \\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n<div class=\\\"order-d-box\\\">\\r\\n    <div class=\\\"order-d-box__title\\\">Issues Details</div>\\r\\n  <div class=\\\"table-responsive w-100\\\">\\r\\n    <table class=\\\"table custom-data-table mb-20\\\">\\r\\n        <tbody>\\r\\n           \\r\\n  \\r\\n          <tr>\\r\\n            <td  width=\\\"15%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Nodel Department :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td  width=\\\"35%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.DepartmentTitle\\\">{{model?.DepartmentTitle}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.DepartmentTitle\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n            <td  width=\\\"15%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Type : </h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td  width=\\\"35%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.TypeName\\\">{{model?.TypeName}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.TypeName\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n          <tr>\\r\\n  \\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Document Sub Type:</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.SubTypeName\\\">{{model?.SubTypeName }}\\r\\n                </h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.SubTypeName\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n  \\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Sector:</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.SectorName\\\">{{model?.SectorName }}\\r\\n                </h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.SectorName\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n  \\r\\n  \\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n         \\r\\n        </tbody>\\r\\n      </table>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"order-d-box\\\">\\r\\n    <div class=\\\"order-d-box__title\\\">Documents Details</div>\\r\\n<div class=\\\"table-responsive w-100\\\">\\r\\n    <table class=\\\"table custom-data-table\\\">\\r\\n        <tbody>\\r\\n\\r\\n  \\r\\n  \\r\\n  \\r\\n          <tr>\\r\\n  \\r\\n  \\r\\n              <td  width=\\\"15%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Title :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td  width=\\\"35%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Title\\\">{{model?.Title}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Title\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n            <td  width=\\\"15%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Document No :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td  width=\\\"35%\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.OrderNo\\\">{{model?.OrderNo}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.OrderNo\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n          </tr>\\r\\n  \\r\\n          <tr>\\r\\n  \\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Issue Date:</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Date\\\">{{ model?.Date| date: 'dd/MM/yyyy'}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Date\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">With Affect From (Date) :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.EffectForm\\\">{{model?.EffectForm| date: 'dd/MM/yyyy'}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.EffectForm\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n          <tr>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Departments Affected :</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.DepartmentEffectedName\\\">{{model?.DepartmentEffectedName}}</h3>\\r\\n              <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.DepartmentEffectedName\\\">NA</h3>\\r\\n            </section>\\r\\n          </td>\\r\\n  \\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue\\\">Previous Document Reference No :</h2>\\r\\n            </section>\\r\\n          </td>\\r\\n          <td>\\r\\n            <section class=\\\"mat-typography\\\">\\r\\n              <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.ReferenceNumber\\\">{{model?.ReferenceNumber }}\\r\\n              </h3>\\r\\n              <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.ReferenceNumber\\\">NA</h3>\\r\\n            </section>\\r\\n          </td>\\r\\n  \\r\\n        </tr>\\r\\n  \\r\\n          <tr>\\r\\n  \\r\\n            <td >\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Beneficiary Category :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.BeneficiaryCategoryName\\\">{{model?.BeneficiaryCategoryName}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.BeneficiaryCategoryName\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Linked to scheme :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.linktoschemeName\\\">{{model?.linktoschemeName}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.linktoschemeName\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n          <tr>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Remarks :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td colspan=\\\"3\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Remarks\\\">{{model?.Remarks}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Remarks\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n  \\r\\n            <!-- <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\">Search Criteria :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td>\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.SearchCriteria\\\">{{model?.SearchCriteria}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.SearchCriteria\\\">NA</h3>\\r\\n              </section>\\r\\n            </td> -->\\r\\n  \\r\\n  \\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n          <tr>\\r\\n  \\r\\n  \\r\\n            <td >\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h2 class=\\\"color-blue\\\"> Description :</h2>\\r\\n              </section>\\r\\n            </td>\\r\\n            <td colspan=\\\"3\\\">\\r\\n              <section class=\\\"mat-typography\\\">\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"model?.Description\\\">{{model?.Description}}</h3>\\r\\n                <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model?.Description\\\">NA</h3>\\r\\n              </section>\\r\\n            </td>\\r\\n          </tr>\\r\\n  \\r\\n  \\r\\n  \\r\\n        </tbody>\\r\\n      </table>\\r\\n</div>\\r\\n</div>\\r\\n \\r\\n\\r\\n\\r\\n  <div class=\\\"col s12\\\" *ngIf=\\\"model?.RelatedToOrderParameterList?.length>0\\\">\\r\\n    <section class=\\\"mat-typography\\\">\\r\\n      <h2 class=\\\"result-title\\\">Related To section</h2>\\r\\n    </section>\\r\\n  </div>\\r\\n  <div class=\\\"row highlight_view parameter_bx\\\" *ngFor=\\\"let item of model?.RelatedToOrderParameterList; let i = index\\\"\\r\\n    [attr.data-index]=\\\"i\\\">\\r\\n    <div class=\\\"col s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h2 class=\\\"result-title-sm text-center\\\">Related To Parameter</h2>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n    <table class=\\\"table new_table table_border\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th width=\\\"200\\\">\\r\\n\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.ModuleName\\\">\\r\\n              Name:</span>\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.ModuleName\\\">Module Name: </span>\\r\\n\\r\\n\\r\\n          </th>\\r\\n\\r\\n          <th width=\\\"250\\\">\\r\\n\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.DepartmentName\\\">\\r\\n              Department Name:</span>\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.DepartmentName\\\">\\r\\n              Department Name:\\r\\n            </span>\\r\\n\\r\\n          </th>\\r\\n\\r\\n          <th>\\r\\n\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.YearText\\\">\\r\\n              Year:</span>\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.YearText\\\">\\r\\n              Year:\\r\\n            </span>\\r\\n\\r\\n          </th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td><span\\r\\n              *ngIf=\\\"model.RelatedToOrderParameterList[i]?.ModuleName\\\">{{model.RelatedToOrderParameterList[i]?.ModuleName}}</span><span\\r\\n              *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.ModuleName\\\"> NA</span></td>\\r\\n          <td>\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.DepartmentName\\\">\\r\\n              {{model.RelatedToOrderParameterList[i]?.DepartmentName}}</span>\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.DepartmentName\\\">\\r\\n              NA\\r\\n            </span>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.YearText\\\">\\r\\n              {{model.RelatedToOrderParameterList[i]?.YearText}}</span>\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.YearText\\\">\\r\\n              NA\\r\\n            </span>\\r\\n\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <!--\\r\\n    <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.ModuleName\\\"><strong class=\\\"color-blue\\\">\\r\\n            Name:</strong> {{model.RelatedToOrderParameterList[i]?.ModuleName}}</h3>\\r\\n\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.ModuleName\\\"><strong\\r\\n            class=\\\"color-blue\\\">Module Name:</strong> NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.DepartmentName\\\"><strong\\r\\n            class=\\\"color-blue\\\">Department Name:</strong> {{model.RelatedToOrderParameterList[i]?.DepartmentName}}</h3>\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.DepartmentName\\\"><strong\\r\\n            class=\\\"color-blue\\\">Department Name:</strong> NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n    <!--\\r\\n    <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.YearText\\\"><strong\\r\\n            class=\\\"color-blue\\\">Year:</strong> {{model.RelatedToOrderParameterList[i]?.YearText}}</h3>\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.YearText\\\"><strong class=\\\"color-blue\\\">Year:\\r\\n          </strong> NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h2 class=\\\"result-title-sm text-center\\\">Result By Parameter\\r\\n        </h2>\\r\\n      </section>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <table class=\\\"table new_table table_border\\\">\\r\\n      <thead>\\r\\n        <tr>\\r\\n          <th width=\\\"200\\\">\\r\\n\\r\\n            <span *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\">\\r\\n              Modulename:</span>\\r\\n\\r\\n\\r\\n            <span *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\">Module Name: </span>\\r\\n\\r\\n\\r\\n          </th>\\r\\n\\r\\n\\r\\n          <th width=\\\"250\\\">\\r\\n\\r\\n            <span   *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\">\\r\\n              File Number:</span>\\r\\n\\r\\n\\r\\n            <span   *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\">\\r\\n              File Number:\\r\\n            </span>\\r\\n\\r\\n          </th>\\r\\n\\r\\n\\r\\n          <th>\\r\\n\\r\\n            <span   *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\">\\r\\n              Description:</span>\\r\\n\\r\\n\\r\\n            <span   *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\">\\r\\n              Description:\\r\\n            </span>\\r\\n\\r\\n          </th>\\r\\n\\r\\n        </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td><span\\r\\n            *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\">{{model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename}}</span><span\\r\\n            *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\"> NA</span></td>\\r\\n          <td>\\r\\n            <span  *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\">\\r\\n              {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber}}</span>\\r\\n\\r\\n            <span  *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\">\\r\\n              NA\\r\\n            </span>\\r\\n          </td>\\r\\n\\r\\n          <td>\\r\\n\\r\\n            <span  *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\">\\r\\n              {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description}}</span>\\r\\n\\r\\n\\r\\n            <span  *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\">\\r\\n              NA\\r\\n            </span>\\r\\n\\r\\n\\r\\n          </td>\\r\\n        </tr>\\r\\n\\r\\n      </tbody>\\r\\n    </table>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\"><strong\\r\\n            class=\\\"color-blue\\\">modulename:</strong>\\r\\n          {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename}}</h3>\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.modulename\\\"><strong\\r\\n            class=\\\"color-blue\\\">modulename:</strong> NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\"><strong\\r\\n            class=\\\"color-blue\\\">File Number:\\r\\n          </strong>{{model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber}}</h3>\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.filenumber\\\"> <strong\\r\\n            class=\\\"color-blue\\\">Filen Nmber: </strong>NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4  s12\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\"><strong\\r\\n            class=\\\"color-blue\\\">Description:</strong>\\r\\n          {{model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description}}</h3>\\r\\n        <h3 class=\\\"color-grey\\\" *ngIf=\\\"!model.RelatedToOrderParameterList[i]?.RelatedToResult?.prj_description\\\"><strong\\r\\n            class=\\\"color-blue\\\">Description:</strong> NA</h3>\\r\\n      </section>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <p>Dispatch Number </p>\\r\\n\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Dispatch Number\\r\\n          </mat-label>\\r\\n          <input matInput maxlength=\\\"50\\\" placeholder=\\\"Dispatch Number\\\" [formControl]=\\\"dispatchNoVal\\\"  name=\\\"dispatchNoVal\\\" [(ngModel)]=\\\"dispatchNo\\\" id=\\\"dispatchNoVal\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"dispatchNoVal.invalid && dispatchNoVal.touched\\\">\\r\\n        Dispatch Number is <strong>required</strong>\\r\\n            </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"saveClick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <p>E-Sign</p>\\r\\n\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n\\r\\n</div>\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Adhar No\\r\\n          </mat-label>\\r\\n          <input matInput type=\\\"number\\\"  onKeyPress=\\\"if(this.value.length==12) return false;\\\" placeholder=\\\"Adhar No\\\" [formControl]=\\\"adharNoVal\\\"  name=\\\"adharNoVal\\\" [(ngModel)]=\\\"adharNo\\\" id=\\\"adharNoVal\\\">\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"adharNoVal.invalid && adharNoVal.touched\\\">\\r\\n        Adhar No is <strong>required</strong>\\r\\n            </mat-error>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"saveClick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row m-20\\\">\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12 download_pdf\\\">\\r\\n        <mat-radio-group aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"model.IsHindi\\\">\\r\\n            <mat-radio-button [value]=\\\"true\\\">Hindi</mat-radio-button>\\r\\n            <mat-radio-button [value]=\\\"false\\\">English</mat-radio-button>\\r\\n        </mat-radio-group>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n        <button class=\\\"btn-submit mat-button\\\" mat-button (click)=\\\"saveAsDrafts();\\\">Save As Draft</button>\\r\\n    </div>\\r\\n</div>\\r\\n<div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n    <div style=\\\"text-align: center;\\\" class=\\\"col l6 s6 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadDoc(helpDocument?.Url,true)\\\"\\r\\n        href=\\\"JavaScript:Void(0);\\\">\\r\\n        <mat-icon>picture_as_pdf</mat-icon>\\r\\n        Click to download Help Document\\r\\n      </a> </div>\\r\\n\\r\\n      <div style=\\\"text-align: center;\\\" class=\\\"col l6 s6 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadDoc(helpDocument.BlankDocUrl)\\\"\\r\\n          href=\\\"JavaScript:Void(0);\\\">\\r\\n          <mat-icon>picture_as_pdf</mat-icon>\\r\\n          Click to download Blank Document\\r\\n        </a> </div>\\r\\n    </div>\\r\\n<div class=\\\"row add_scheme add-order-stepper\\\">\\r\\n    <mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\r\\n        <mat-step [stepControl]=\\\"firstFormGroup\\\">\\r\\n            <form [formGroup]=\\\"firstFormGroup\\\">\\r\\n                <ng-template matStepLabel>Basic Information</ng-template>\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n                    <section class=\\\"mat-typography\\\">\\r\\n                        <h2 class=\\\"color-blue mb-0\\\">Issuer Details</h2>\\r\\n                    </section>\\r\\n                </div>\\r\\n                <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label> Document Type <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"model.Type\\\" #Type formControlName=\\\"Type\\\" [disabled]=\\\"model.Id\\\" (selectionChange)=\\\"GetSubType($event.value)\\\">\\r\\n                            <mat-option>--Select--</mat-option>\\r\\n                            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlGenerateOrderType\\\">{{item.Text}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"firstFormGroup.get('Type').hasError('required') && (firstFormGroup.get('Type').touched && firstFormGroup.get('Type').invalid) \\\">\\r\\n                        Type is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Sector</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"model.SectorCodes\\\" multiple #SectorCodes formControlName=\\\"SectorCodes\\\">\\r\\n                            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderSector\\\">\\r\\n                                {{item.Text}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Department </mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"model.DepartmentCode\\\" #DepartmentCode formControlName=\\\"DepartmentCode\\\" [disabled]=\\\"model.Id\\\" (selectionChange)=\\\"GetCCcategoryByDepartment($event.value)\\\">\\r\\n                            <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">\\r\\n                                {{ k.DepartmentTitle }}</mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"firstFormGroup.get('DepartmentCode').hasError('required') && (firstFormGroup.get('DepartmentCode').touched && firstFormGroup.get('DepartmentCode').invalid) \\\">\\r\\n                        Department is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Departments Affected</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"model.DepartmentEffectedCodes\\\" multiple #DepartmentEffectedCodes\\r\\n                            formControlName=\\\"DepartmentEffectedCodes\\\">\\r\\n                            <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectAll()\\\">\\r\\n                                <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"selectedAll>0 || model?.DepartmentEffectedCodes?.length==dDLList?.ddlDepartment?.length\\\"> SelectAll </mat-checkbox>\\r\\n                            </mat-option>\\r\\n                            <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlDepartment\\\">{{item.Text}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                      <mat-label> Document Sub Type  </mat-label>\\r\\n                      <mat-select [(ngModel)]=\\\"model.SubTypeCode\\\" #SubTypeCode formControlName=\\\"SubTypeCode\\\">\\r\\n                          <mat-option>--Select--</mat-option>\\r\\n                          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of ddlSubType\\\">{{item.Text}}\\r\\n                          </mat-option>\\r\\n                      </mat-select>\\r\\n                  </mat-form-field>\\r\\n\\r\\n              </div>\\r\\n              <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label> District <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n                    <mat-select  #DistrictCode formControlName=\\\"DistrictCode\\\" [(ngModel)]=\\\"model.DistrictCode\\\">\\r\\n                        <mat-option>--Select--</mat-option>\\r\\n                        <mat-option value=\\\"{{ k.DistrictCode }}\\\" *ngFor=\\\"let k of ddlDistrict\\\">{{ k.DistrictTitle }} </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                </mat-form-field>\\r\\n                <mat-error\\r\\n                *ngIf=\\\"firstFormGroup.get('DistrictCode').hasError('required') && (firstFormGroup.get('DistrictCode').touched && firstFormGroup.get('DistrictCode').invalid) \\\">\\r\\n                District is <strong>required!</strong>\\r\\n            </mat-error>\\r\\n            </div>\\r\\n            <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n                  <mat-label>Office</mat-label>\\r\\n                  <input matInput #OfficeCode formControlName=\\\"OfficeCode\\\" [(ngModel)]=\\\"loginData.OfficeName\\\" disabled=\\\"true\\\">\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n                <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n                    <section class=\\\"mat-typography\\\">\\r\\n                        <h2 class=\\\"color-blue mb-0\\\">Orders/Circulars/Notification Details</h2>\\r\\n                    </section>\\r\\n                </div>\\r\\n                <div class=\\\"col l12 m12 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label> Title <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n                        <input matInput placeholder=\\\"Title\\\" [(ngModel)]=\\\"model.Title\\\" #Title formControlName=\\\"Title\\\"\\r\\n                            maxlength=\\\"250\\\">\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"firstFormGroup.get('Title').hasError('required') && (firstFormGroup.get('Title').touched && firstFormGroup.get('Title').invalid) \\\">\\r\\n                        Title is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>File no.</mat-label>\\r\\n                        <input matInput placeholder=\\\"File Number\\\" [(ngModel)]=\\\"model.FileNumber\\\" #FileNumber\\r\\n                            formControlName=\\\"FileNumber\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Date of issue </mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly\\r\\n                            placeholder=\\\"Issue Date\\\" [(ngModel)]=\\\"model.Date\\\" [max]=\\\"tomorrow\\\" #Date\\r\\n                            (dateChange)=\\\"DateOfIssueClick()\\\" formControlName=\\\"Date\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker1></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"firstFormGroup.get('Date').hasError('required') && (firstFormGroup.get('Date').touched && firstFormGroup.get('Date').invalid) \\\">\\r\\n                        Date of issue is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Date With Affect From</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly\\r\\n                            placeholder=\\\"With Affect From (Date)\\\" [(ngModel)]=\\\"model.EffectForm\\\" #EffectForm\\r\\n                            formControlName=\\\"EffectForm\\\">\\r\\n                        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n                        <mat-datepicker #picker></mat-datepicker>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l12 m12 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Description <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n                        <textarea matInput placeholder=\\\"Hindi & English\\\" [(ngModel)]=\\\"model.Description\\\"\\r\\n                            maxlength=\\\"1000\\\" #Description formControlName=\\\"Description\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"firstFormGroup.get('Description').hasError('required') && (firstFormGroup.get('Description').touched && firstFormGroup.get('Description').invalid) \\\">\\r\\n                        Description is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Document Details</mat-label>\\r\\n                        <input matInput placeholder=\\\"Old Orders/CIR./NOTI. Number\\\" [(ngModel)]=\\\"model.ReferenceNumber\\\"\\r\\n                            #ReferenceNumber formControlName=\\\"ReferenceNumber\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"false\\\">\\r\\n                    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                        aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"model.LinkToScheme\\\" #LinkToScheme\\r\\n                        formControlName=\\\"LinkToScheme\\\">\\r\\n                        <mat-label class=\\\"mr-5\\\">Linked To Scheme(If Any) </mat-label>\\r\\n                        <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\"\\r\\n                            *ngFor=\\\"let item of dDLList?.RadioLinkedToScheme;let i = index\\\" [checked]=\\\"i=== 1\\\">\\r\\n                            {{item.Text}}\\r\\n                        </mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Individual Beneficiary Scheme</mat-label>\\r\\n                        <input matInput placeholder=\\\"Individual Beneficiary Scheme\\\"\\r\\n                            [(ngModel)]=\\\"model.IndividualBeneficiaryScheme\\\" #IndividualBeneficiaryScheme\\r\\n                            formControlName=\\\"IndividualBeneficiaryScheme\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Remarks</mat-label>\\r\\n                        <input matInput placeholder=\\\"Remarks if any\\\" [(ngModel)]=\\\"model.OrderRemarks\\\" #OrderRemarks\\r\\n                            formControlName=\\\"OrderRemarks\\\">\\r\\n                    </mat-form-field>\\r\\n                </div> -->\\r\\n\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"false\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>URL (Reference Link)</mat-label>\\r\\n                        <input matInput placeholder=\\\"References Link\\\" [(ngModel)]=\\\"model.ReferenceLink\\\" #ReferenceLink\\r\\n                            formControlName=\\\"ReferenceLink\\\">\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"false\\\">\\r\\n                    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                        aria-label=\\\"Select an option\\\" disabled=\\\"true\\\" [(ngModel)]=\\\"model.IssueBy\\\" #IssueBy\\r\\n                        formControlName=\\\"IssueBy\\\">\\r\\n                        <mat-label class=\\\"mr-5\\\">Order Issue By </mat-label>\\r\\n                        <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\"\\r\\n                            *ngFor=\\\"let item of dDLList?.ddlOrderIssueBy;let i = index\\\" [checked]=\\\"i=== 1\\\">\\r\\n                            {{item.Text}}\\r\\n                        </mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n                    <section class=\\\"mat-typography\\\">\\r\\n                        <h2 class=\\\"color-blue mb-0\\\">Linked with (Budget/CM Announcement/CM Directions/Jan Ghoshna Patra)</h2>\\r\\n                    </section>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"row highlight_view btn_add_box\\\">\\r\\n\\r\\n\\r\\n                    <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Related To Module </mat-label>\\r\\n                            <mat-select formControlName=\\\"ModuleId\\\" [(ngModel)]=\\\"orderRelatedTo.ModuleId\\\"\\r\\n                                name=\\\"ModuleId\\\">\\r\\n                                <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderModuleName\\\">\\r\\n                                    {{item.Text}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Year </mat-label>\\r\\n                            <mat-select formControlName=\\\"YearValue\\\" [(ngModel)]=\\\"orderRelatedTo.YearValue\\\"\\r\\n                                name=\\\"YearValue\\\">\\r\\n                                <mat-option value=\\\"{{item.rowno}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToYear\\\">\\r\\n                                    {{item.particulars}} </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Department </mat-label>\\r\\n                            <mat-select formControlName=\\\"DepartmentId\\\" [(ngModel)]=\\\"orderRelatedTo.DepartmentId\\\"\\r\\n                                name=\\\"DepartmentId\\\">\\r\\n                                <mat-option value=\\\"{{item.prj_dept}}\\\"\\r\\n                                    *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToDepartment\\\">{{item.particulars}}\\r\\n                                </mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                        <div class=\\\"d-inline\\\" *ngIf=\\\"model?.RelatedToOrderParameterList?.length <5\\\"><a class=\\\"btn_add\\\"\\r\\n                                href=\\\"javascript:void(0)\\\" (click)=\\\"AddMoreRelatedTo()\\\">\\r\\n                                <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">add</mat-icon>\\r\\n                            </a></div>\\r\\n                    </div>\\r\\n\\r\\n\\r\\n                    <div class=\\\"col l12 m12 s12 \\\">\\r\\n\\r\\n\\r\\n                        <div class=\\\"footer-info-bx\\\">\\r\\n                            <table class=\\\"table new_table table_border mb-20\\\" *ngIf=\\\"model.RelatedToOrderParameterList.length>0\\\">\\r\\n\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                  <th>#</th>\\r\\n                                  <th>Details</th>\\r\\n                                  <th width=\\\"100\\\">Action</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n\\r\\n\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of model.RelatedToOrderParameterList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n                                    <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n                                    <td>\\r\\n                                      <div class=\\\"footer-info-bx\\\">\\r\\n\\r\\n                                          <div class=\\\"d-inline\\\"> <strong> </strong><span  *ngIf=\\\"item?.ModuleId\\\">{{moduleNameItems[item?.ModuleId]}}</span><span  *ngIf=\\\"!item?.ModuleId\\\">--</span> </div>\\r\\n                                          <div class=\\\"d-inline\\\"> <strong>Year: </strong><span  *ngIf=\\\"item?.YearValue\\\">{{yearItems[item?.YearValue]}}</span><span  *ngIf=\\\"!item?.YearValue\\\">--</span> </div>\\r\\n                                          <div class=\\\"d-inline\\\"> <strong>Department: </strong><span  *ngIf=\\\"item?.DepartmentId\\\">{{departmentItems[item?.DepartmentId]}}</span><span  *ngIf=\\\"!item?.DepartmentId\\\">--</span> </div>\\r\\n\\r\\n                                        </div>\\r\\n                                        <div class=\\\"footer-info-bx\\\" *ngIf=\\\"item.RelatedToResult\\\">\\r\\n\\r\\n                                            <!-- <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.modulename\\\"> <strong> Name: </strong> {{item.RelatedToResult.modulename}}</div>\\r\\n                                            <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.filenumber\\\">\\r\\n                                              <strong> File Number:</strong> {{item.RelatedToResult.filenumber}}\\r\\n                                            </div> -->\\r\\n                                            <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.prj_description\\\"><strong>Description:</strong>\\r\\n                                              {{item.RelatedToResult.prj_description}}</div>\\r\\n\\r\\n                                          </div>\\r\\n                                      </td>\\r\\n                                      <td class=\\\"action_icon\\\"><a  class=\\\"del-icon\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"RemoveClick(i)\\\">\\r\\n                                          <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">delete</mat-icon>\\r\\n                                        </a>\\r\\n                                        <a class=\\\"get-icon\\\" href=\\\"javascript:void(0)\\\"\\r\\n                                        (click)=\\\"GetRelatedToResult(item.ModuleName,item.DepartmentName,item.YearText,i)\\\"><mat-icon>chevron_right</mat-icon></a>\\r\\n                                      </td>\\r\\n\\r\\n                                </tr>\\r\\n\\r\\n                              </tbody>\\r\\n\\r\\n                            </table>\\r\\n\\r\\n\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchFirst(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"secondFormGroup\\\">\\r\\n            <form [formGroup]=\\\"secondFormGroup\\\">\\r\\n                <ng-template matStepLabel><a href=\\\"javascript:void(0);\\\"\\r\\n                        (click)=\\\"touchFirst(stepper)\\\">Subject/Reference</a> </ng-template>\\r\\n                <div class=\\\"col l12 m12 s12\\\">\\r\\n\\r\\n\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label> Subject <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n\\r\\n                        <textarea matInput placeholder=\\\"Subject\\\" [(ngModel)]=\\\"model.Subject\\\" #Subject\\r\\n                            formControlName=\\\"Subject\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"secondFormGroup.get('Subject').hasError('required') && (secondFormGroup.get('Subject').touched && secondFormGroup.get('Subject').invalid)\\\">\\r\\n                        Subject is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col l12 m12 s12\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label> Reference </mat-label>\\r\\n\\r\\n                        <textarea matInput placeholder=\\\"Reference\\\" [(ngModel)]=\\\"model.Reference\\\" #Reference\\r\\n                            formControlName=\\\"Reference\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col l12 m12 s12\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label> Context </mat-label>\\r\\n                        <textarea matInput placeholder=\\\"Context\\\" [(ngModel)]=\\\"model.Context\\\" #Context\\r\\n                            formControlName=\\\"Context\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchSecond(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"thirdFormGroup\\\">\\r\\n            <form [formGroup]=\\\"thirdFormGroup\\\">\\r\\n                <ng-template matStepLabel><a href=\\\"javascript:void(0);\\\" (click)=\\\"touchSecond(stepper)\\\">Content</a>\\r\\n                </ng-template>\\r\\n                <div class=\\\"col s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <label style=\\\"padding: 10px 0px; display: inline-block;\\\">\\r\\n                            Content <span style=\\\"color: red\\\">*</span>\\r\\n                        </label>\\r\\n                        <textarea style=\\\"display:none;\\\" matInput placeholder=\\\"Content\\\" #Description\\r\\n                            formControlName=\\\"Content\\\" maxlength=\\\"100000\\\"></textarea>\\r\\n\\r\\n                        <ckeditor [config]=\\\"{uiColor: '#26389b'}\\\" [(ngModel)]=\\\"model.Content\\\" placeholder=\\\"Content\\\"\\r\\n                            formControlName=\\\"Content\\\" #Content></ckeditor>\\r\\n                        <!-- <mat-hint>{{ Content.value.length }}/100000</mat-hint> -->\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"thirdFormGroup.get('Content').hasError('required') && (thirdFormGroup.get('Content').touched && thirdFormGroup.get('Content').invalid)\\\">\\r\\n                        Content is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n                <div class=\\\"col l12 xl12 m12 s12\\\">\\r\\n                  <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                      aria-label=\\\"Select an option\\\" #IsByOrderOfGovernor formControlName=\\\"IsByOrderOfGovernor\\\" [(ngModel)]=\\\"model.IsByOrderOfGovernor\\\">\\r\\n                      <mat-label class=\\\"mr-5\\\">Is By Order Of Governor</mat-label>\\r\\n                      <mat-radio-button [value]=\\\"true\\\" class=\\\" mr-5\\\">Yes</mat-radio-button>\\r\\n                      <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                  </mat-radio-group>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"col l12 m12 s12\\\" *ngIf=\\\"model.IsByOrderOfGovernor\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                    <mat-label> By Order Of Governor Text </mat-label>\\r\\n                    <input matInput placeholder=\\\"By Order Of Governor Text \\\" [(ngModel)]=\\\"model.IsByOrderOfGovernortext\\\" #IsByOrderOfGovernortext formControlName=\\\"IsByOrderOfGovernortext\\\"\\r\\n                        maxlength=\\\"350\\\">\\r\\n                </mat-form-field>\\r\\n                <mat-error\\r\\n                    *ngIf=\\\"firstFormGroup.get('Title').hasError('required') && (firstFormGroup.get('Title').touched && firstFormGroup.get('Title').invalid) \\\">\\r\\n                    Title is <strong>required!</strong>\\r\\n                </mat-error>\\r\\n            </div>\\r\\n\\r\\n                <div class=\\\"col  s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Signature<span style=\\\"color: red\\\">*</span>\\r\\n                        </mat-label>\\r\\n                        <mat-select formControlName=\\\"AuthoritySignatureCode\\\" [(ngModel)]=\\\"model.AuthoritySignatureCode\\\"\\r\\n                            name=\\\"AuthoritySignatureCode\\\" *ngIf=\\\"!model.IsHindi\\\">\\r\\n                            <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.ddlAuthoritySignatory\\\">\\r\\n                              {{item.Name}} , {{item.Designation}}\\r\\n                            </mat-option>\\r\\n\\r\\n                        </mat-select>\\r\\n                        <mat-select formControlName=\\\"AuthoritySignatureCode\\\" [(ngModel)]=\\\"model.AuthoritySignatureCode\\\"\\r\\n                            name=\\\"AuthoritySignatureCode\\\" *ngIf=\\\"model.IsHindi\\\">\\r\\n                            <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.ddlAuthoritySignatory\\\">\\r\\n                              {{item.NameHindi}} , {{item.DesignationHindi}}\\r\\n                            </mat-option>\\r\\n\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error\\r\\n                        *ngIf=\\\"thirdFormGroup.get('AuthoritySignatureCode').hasError('required') && (thirdFormGroup.get('AuthoritySignatureCode').touched && thirdFormGroup.get('AuthoritySignatureCode').invalid)\\\">\\r\\n                        Signature is <strong>required!</strong>\\r\\n                    </mat-error>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchThird(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"fourFormGroup\\\">\\r\\n            <form [formGroup]=\\\"fourFormGroup\\\">\\r\\n                <ng-template matStepLabel><a href=\\\"javascript:void(0);\\\" (click)=\\\"touchThird(stepper)\\\">Correspondence\\r\\n                        Copy</a> </ng-template>\\r\\n\\r\\n                        <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label> CC Category Name </mat-label>\\r\\n                              <mat-select formControlName=\\\"CCCategoryCode\\\" [(ngModel)]=\\\"model.CCCategoryCode\\\"\\r\\n                                name=\\\"CCCategoryCode\\\"  (selectionChange)=\\\"cCCategoryClick($event.value)\\\">\\r\\n                                <mat-option [value]=\\\"0\\\">--All CC Referenc--</mat-option>\\r\\n                                <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlCCcategory\\\">{{ k.Text }}</mat-option>\\r\\n                            </mat-select>\\r\\n                          </mat-form-field>\\r\\n\\r\\n                      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n                    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                        aria-label=\\\"Select an option\\\" #CCreferenceTextAutofill formControlName=\\\"CCreferenceTextAutofill\\\" [(ngModel)]=\\\"isCCreferenceTextAutofill\\\">\\r\\n                        <mat-label class=\\\"mr-5\\\">Is CC Reference Text Autofill</mat-label>\\r\\n                        <mat-radio-button [value]=\\\"true\\\" class=\\\"mr-5\\\">Yes</mat-radio-button>\\r\\n                        <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col s12\\\">\\r\\n                        <mat-label class=\\\"cc-ref\\\">Copy To\\r\\n                        </mat-label>\\r\\n                        <mat-selection-list formControlName=\\\"CCReferenceList\\\" [(ngModel)]=\\\"model.CCReferenceList\\\" (selectionChange)=\\\"onSelection()\\\" class=\\\"checkdata\\\">\\r\\n                          <mat-list-option [value]=\\\"item.Code\\\" *ngFor=\\\"let item of ddlCCReferencs\\\">\\r\\n                            {{model.IsHindi==true? item.ReferenceHindi : item.Reference}}\\r\\n                            </mat-list-option>\\r\\n                          <!-- <mat-list-option [value]=\\\"item.Code\\\" *ngFor=\\\"let item of dDLList?.ddlCCReference\\\">\\r\\n                                {{model.IsHindi==true? item.ReferenceHindi : item.Reference}}\\r\\n                                </mat-list-option> -->\\r\\n                        </mat-selection-list>\\r\\n\\r\\n\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <label> CC Reference Text </label>\\r\\n                            <textarea matInput placeholder=\\\"CCReferenceList Text\\\" #CCReferenceListText [(ngModel)]=\\\"model.CCReferenceListText\\\"\\r\\n                                formControlName=\\\"CCReferenceListText\\\" maxlength=\\\"100000\\\"></textarea>\\r\\n                            <mat-hint>{{ CCReferenceListText.value.length }}/100000</mat-hint>\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                <div class=\\\"col s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>CC Signature </mat-label>\\r\\n                        <!-- <mat-select formControlName=\\\"CCSignatureCode\\\" [(ngModel)]=\\\"model.CCSignatureCode\\\"\\r\\n                            name=\\\"CCSignatureCode\\\">\\r\\n                            <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.ddlAuthoritySignatory\\\">\\r\\n                              <span *ngIf=\\\"model.IsHindi==true\\\">    {{item.NameHindi}} , {{item.DesignationHindi}}</span>\\r\\n                              <span *ngIf=\\\"!model.IsHindi==true\\\">    {{item.Name}} , {{item.Designation}}</span>\\r\\n                            </mat-option>\\r\\n                        </mat-select> -->\\r\\n                        <mat-select formControlName=\\\"CCSignatureCode\\\" [(ngModel)]=\\\"model.CCSignatureCode\\\"\\r\\n                        name=\\\"CCSignatureCode\\\" *ngIf=\\\"!model.IsHindi\\\">\\r\\n                        <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.ddlAuthoritySignatory\\\">\\r\\n                          {{item.Name}} , {{item.Designation}}\\r\\n                        </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                    <mat-select formControlName=\\\"CCSignatureCode\\\" [(ngModel)]=\\\"model.CCSignatureCode\\\"\\r\\n                        name=\\\"CCSignatureCode\\\" *ngIf=\\\"model.IsHindi\\\">\\r\\n                        <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.ddlAuthoritySignatory\\\">\\r\\n                          {{item.NameHindi}} , {{item.DesignationHindi}}\\r\\n                        </mat-option>\\r\\n\\r\\n                    </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchFourth(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"fifthformGroup\\\">\\r\\n            <form [formGroup]=\\\"fifthformGroup\\\">\\r\\n                <ng-template matStepLabel> <a href=\\\"javascript:void(0);\\\" (click)=\\\"touchFourth(stepper)\\\">Remarks</a>\\r\\n                </ng-template>\\r\\n                <div class=\\\"col m6 s12\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                        <mat-label> Remarks </mat-label>\\r\\n                        <textarea matInput placeholder=\\\"Remarks\\\" [(ngModel)]=\\\"model.OrdGenrateRemarks\\\"\\r\\n                            #OrdGenrateRemarks formControlName=\\\"OrdGenrateRemarks\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col m6 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label> Search criteria keyword</mat-label>\\r\\n                        <textarea matInput placeholder=\\\"Search keyword\\\" [(ngModel)]=\\\"model.SearchCriteria\\\"\\r\\n                            #SearchCriteria formControlName=\\\"SearchCriteria\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchFifth(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"sixthformGroup\\\">\\r\\n            <form [formGroup]=\\\"sixthformGroup\\\">\\r\\n                <ng-template matStepLabel><a href=\\\"javascript:void(0);\\\" (click)=\\\"touchFifth(stepper)\\\">Attachments</a>\\r\\n                </ng-template>\\r\\n                <div class=\\\"col l2  m6 s12\\\">\\r\\n                    <mat-hint class=\\\"pull-right\\\"> &nbsp; </mat-hint>\\r\\n\\r\\n                    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                        aria-label=\\\"Select an option\\\" #IsAnnexure formControlName=\\\"IsAnnexure\\\" [(ngModel)]=\\\"attachmentsLookup.IsAnnexure\\\">\\r\\n                        <mat-label class=\\\"mr-5\\\">Is Annexure</mat-label>\\r\\n                        <mat-radio-button [value]=\\\"true\\\" class=\\\" mr-5\\\">Yes</mat-radio-button>\\r\\n                        <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col l5 xl5 m6 s12\\\">\\r\\n                    <mat-hint class=\\\"pull-right\\\"> &nbsp; </mat-hint>\\r\\n                  <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label>Attachment Title</mat-label>\\r\\n                      <input matInput placeholder=\\\"Attachment Title\\\" [(ngModel)]=\\\"attachmentsLookup.Description\\\" #Description\\r\\n                          formControlName=\\\"Description\\\">\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n                <div class=\\\"col l5 xl5 m6 s12 btn_add_box\\\">\\r\\n                    <mat-hint class=\\\"pull-right\\\">*Image Only</mat-hint>\\r\\n                    <div class=\\\"upload-btn-wrapper\\\">\\r\\n                        <mat-label>Attachment <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n                        <input type=\\\"file\\\" id=\\\"AttachmentUrl\\\" formControlName=\\\"AttachmentUrl\\\"\\r\\n                            (change)=\\\"handleFileLogo($event)\\\" accept=\\\"image/*,application/pdf\\\">\\r\\n                        <img *ngIf=\\\"attachmentsLookup.AttachmentUrl && !attachmentsLookup.IsPdf\\\" [src]=\\\"attachmentsLookup.AttachmentUrl\\\" height=\\\"100px\\\"\\r\\n                            width=\\\"100px\\\" />\\r\\n                            <a *ngIf=\\\"attachmentsLookup.AttachmentUrl && attachmentsLookup.IsPdf\\\" (click)=\\\"downloadFaqDocPdf(attachmentsLookup.AttachmentUrl)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n                              Show More Details\\r\\n                             </a>\\r\\n                    </div>\\r\\n\\r\\n                    <mat-error\\r\\n                    *ngIf=\\\"sixthformGroup.get('AttachmentUrl').hasError('required') && (sixthformGroup.get('AttachmentUrl').touched && sixthformGroup.get('AttachmentUrl').invalid)\\\">\\r\\n                    Attachment is <strong>required!</strong>\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">{{fileValidationMsg}}</mat-error>\\r\\n\\r\\n                    <span style=\\\"color: red; float: right;\\\">{{fileSizeValidationMsg}}</span>\\r\\n\\r\\n                    <a style=\\\"top:25px\\\"  class=\\\"btn_add\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"AddMoreAttachment()\\\">\\r\\n                      <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">add</mat-icon>\\r\\n                  </a>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 \\\">\\r\\n                    <div class=\\\"footer-info-bx\\\">\\r\\n                        <table class=\\\"table new_table table_border mb-20\\\"\\r\\n                            *ngIf=\\\"model.AttachmentList.length>0\\\">\\r\\n                            <thead>\\r\\n                                <tr>\\r\\n                                    <th>#</th>\\r\\n                                    <th>Is Annexure</th>\\r\\n                                    <th>Attachment</th>\\r\\n                                    <th>Attachment Title</th>\\r\\n                                    <th width=\\\"100\\\">Action</th>\\r\\n                                </tr>\\r\\n                            </thead>\\r\\n                            <tbody>\\r\\n                                <tr *ngFor=\\\"let item of model.AttachmentList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n                                    <th>{{i+1}}</th>\\r\\n                                    <th><span *ngIf=\\\"item.IsAnnexure\\\">Yes</span><span *ngIf=\\\"!item.IsAnnexure\\\">No</span></th>\\r\\n                                    <td>\\r\\n                                        <img *ngIf=\\\"item.AttachmentUrl && !item.IsPdf\\\" [src]=\\\"item.AttachmentUrl\\\" height=\\\"100px\\\"\\r\\n                                            width=\\\"100px\\\" />\\r\\n                                            <a *ngIf=\\\"item.AttachmentUrl && item.IsPdf\\\" (click)=\\\"downloadFaqDocPdf(item.AttachmentUrl)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n                                              Show More Details\\r\\n                                             </a>\\r\\n                                        <span *ngIf=\\\"!item.AttachmentUrl\\\">--</span>\\r\\n                                    </td>\\r\\n                                    <td>\\r\\n                                        {{item.Description}}\\r\\n                                    </td>\\r\\n                                    <td class=\\\"action_icon\\\">\\r\\n                                        <a href=\\\"javascript:void(0)\\\" (click)=\\\"RemoveAttachmentClick(i)\\\"\\r\\n                                            class=\\\"del-icon\\\">\\r\\n                                            <mat-icon>delete</mat-icon>\\r\\n                                        </a>\\r\\n                                    </td>\\r\\n                                </tr>\\r\\n                            </tbody>\\r\\n                        </table>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button matStepperNext (click)=\\\"touchSixth(stepper)\\\">Next</button>\\r\\n                </div>\\r\\n\\r\\n\\r\\n\\r\\n            </form>\\r\\n        </mat-step>\\r\\n        <mat-step [stepControl]=\\\"sevenformGroup\\\">\\r\\n            <form [formGroup]=\\\"sevenformGroup\\\">\\r\\n                <ng-template matStepLabel> <a href=\\\"javascript:void(0);\\\" (click)=\\\"touchSixth(stepper)\\\">Address To</a>\\r\\n                </ng-template>\\r\\n                <div class=\\\"col l12 xl12 m12 s12\\\">\\r\\n                    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n                        aria-label=\\\"Select an option\\\" #IsWithinSecretariat formControlName=\\\"IsWithinSecretariat\\\" [(ngModel)]=\\\"model.IsWithinSecretariat\\\">\\r\\n                        <mat-label class=\\\"mr-5\\\">Is Within Secretariat</mat-label>\\r\\n                        <mat-radio-button [value]=\\\"true\\\" class=\\\" mr-5\\\">Yes</mat-radio-button>\\r\\n                        <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n                    </mat-radio-group>\\r\\n                </div>\\r\\n                <div class=\\\"col m12 s12\\\">\\r\\n                    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label> Address To</mat-label>\\r\\n                        <textarea matInput placeholder=\\\"Address To\\\" [(ngModel)]=\\\"model.AddressTo\\\" #AddressTo\\r\\n                            formControlName=\\\"AddressTo\\\"></textarea>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col l12 m12 s12 text-right\\\">\\r\\n                    <button class=\\\"grey_btn mr-5 mat-button\\\" mat-button matStepperPrevious>Back</button>\\r\\n                    <button class=\\\"btn-submit mat-button\\\" mat-button (click)=\\\"saveClick();\\\">Submit</button>\\r\\n                </div>\\r\\n            </form>\\r\\n        </mat-step>\\r\\n    </mat-horizontal-stepper>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n    <app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col l12 s12 \\\">\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8 table_border\\\">\\r\\n\\r\\n              <ng-container matColumnDef=\\\"index\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Sr No</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">  {{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n            <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Date\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Issue </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Date !=null ? (group.Date| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Entry </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.CreatedDate !=null ? (group.CreatedDate| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <!-- <ng-container matColumnDef=\\\"Status\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Published </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                <ng-container>\\r\\n                  <div *ngIf=\\\"!group.ESignedFinalUrl\\\" title=\\\"This is Locked record\\\">\\r\\n                    <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                    <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n                  </div>\\r\\n                  <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"group.ESignedFinalUrl && this.generateOrderPermission.UpdatePageAccess\\\" (click)=\\\"statusClick(group.Id)\\\" title=\\\"Publish\\\">\\r\\n                    <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                    <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n                  </a>\\r\\n                 </ng-container>\\r\\n              </td>\\r\\n            </ng-container> -->\\r\\n\\r\\n            <ng-container matColumnDef=\\\"AllowToEdit\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Allow To Edit</th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"toogle-btn\\\">\\r\\n                  <div *ngIf=\\\"group.IsCancel || (this.generateOrderPermission.DeletePageAccess && group.ESignedUrl5) || !this.generateOrderPermission.DeletePageAccess\\\">\\r\\n                    <ng-container>\\r\\n                      <mat-icon style=\\\"cursor:pointer;\\\" title=\\\"Block\\\">lock</mat-icon>\\r\\n                   </ng-container>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"this.generateOrderPermission.DeletePageAccess && !group.ESignedUrl5 && !group.IsCancel\\\" >\\r\\n                    <ng-container> <a href=\\\"JavaScript:Void(0);\\\" (click)=\\\"lockClick(group.Id)\\\">\\r\\n                      <mat-icon  class=\\\"toggle_on\\\" *ngIf=\\\"!group.IsLock\\\" style=\\\"cursor:pointer; font-size: 20px;\\\" title=\\\"Click To Block\\\">edit_attributes</mat-icon>\\r\\n                      <mat-icon  class=\\\"toggle_off\\\" *ngIf=\\\"group.IsLock\\\" style=\\\"cursor:pointer; font-size: 20px;\\\" title=\\\"Click To Allow\\\">cancel_presentation</mat-icon>\\r\\n                    </a> </ng-container>\\r\\n                  </div>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Action\\\">\\r\\n                <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n                  <a class=\\\"btn_delete\\\"  (click)=\\\"previewClick(group.Id)\\\" title=\\\"Preview\\\"><mat-icon >image</mat-icon></a>\\r\\n\\r\\n                  <a *ngIf=\\\"!group.ESignedUrl5 && !group.IsCancel\\\"  title=\\\"Click to sign document\\\" (click)=\\\"DocumentESign(group.Id)\\\"><mat-icon >assignment_turned_in</mat-icon></a>\\r\\n\\r\\n                  <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"group.ESignedFinalUrl && this.generateOrderPermission.UpdatePageAccess\\\" (click)=\\\"statusClick(group.Id)\\\" >\\r\\n                    <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\" title=\\\"Published\\\">toggle_on</mat-icon>\\r\\n                    <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\" title=\\\"Click To Publish\\\">toggle_off</mat-icon>\\r\\n                  </a>\\r\\n\\r\\n                  <a *ngIf=\\\"group.ESignedUrl1\\\" (click)=\\\"downloadPdf(group.ESignedUrl1)\\\" title=\\\"Document V1\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl2\\\" (click)=\\\"downloadPdf(group.ESignedUrl2)\\\" title=\\\"Document V2\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl3\\\" (click)=\\\"downloadPdf(group.ESignedUrl3)\\\" title=\\\"Document V3\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl4\\\" (click)=\\\"downloadPdf(group.ESignedUrl4)\\\" title=\\\"Document V4\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl5\\\" (click)=\\\"downloadPdf(group.ESignedUrl5)\\\" title=\\\"Document V5\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n\\r\\n                  <!-- <a class=\\\"btn_delete\\\" *ngIf=\\\"this.generateOrderPermission.DetailPageAccess \\\" routerLink=\\\"/order/generateorderpreview/{{group.Id}}\\\" title=\\\"Preview\\\"><mat-icon >image</mat-icon></a> -->\\r\\n\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsCancel\\\"  title=\\\"Send Email\\\" (click)=\\\"sendNotificationClick(group.Id,true)\\\"><mat-icon >mail</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsCancel\\\"  title=\\\"Send SMS\\\" (click)=\\\"sendNotificationClick(group.Id)\\\"><mat-icon >sms</mat-icon></a>\\r\\n\\r\\n                  <!-- Order Cancellation Action START-->\\r\\n                  <a class=\\\"btn_delete\\\" *ngIf=\\\"this.generateOrderPermission.Custome1PageAccess && group.IsCancel\\\"  title=\\\"Order Cancelled\\\" ><mat-icon >close</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.Custome1PageAccess && !group.IsCancel\\\"  title=\\\"Click To Cancel Order\\\" (click)=\\\"orderCancellationClick(group.Id)\\\"><mat-icon >cancel</mat-icon></a>\\r\\n\\r\\n                   <!-- Order Cancellation Action END-->\\r\\n                  </td>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay; let entry\\\" [ngClass]=\\\"{'make-gold': entry.IsCancel == true}\\\"></tr>\\r\\n          </table>\\r\\n          <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\" [pageSizeOptions]=\\\"[5,10, 20, 50]\\\"\\r\\n        (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons>\\r\\n      </mat-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n\"","module.exports = \"<link href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\" rel=\\\"stylesheet\\\">\\r\\n\\r\\n\\r\\n<!-- <section class=\\\"invoice\\\" id=\\\"capture\\\" style=\\\"margin-top: -2000px;\\\">  -->\\r\\n<section class=\\\"invoice\\\" id=\\\"capture\\\">\\r\\n  <div id=\\\"header\\\">\\r\\n    <!-- title row -->\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n        <img [src]=\\\"model?.DepartmentSetupList?.Logo1\\\" alt=\\\"\\\" class=\\\"logo \\\" />\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-6 text-center\\\">\\r\\n        <div class=\\\"invoice-heading text-center\\\">{{model?.DepartmentSetupList?.Address1}}</div>\\r\\n        <h4> {{model?.DepartmentSetupList?.Address2}}</h4>\\r\\n        <h4> {{model?.DepartmentSetupList?.Address3}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-sm-3 text-right\\\">\\r\\n        <img [src]=\\\"model?.DepartmentSetupList?.Logo2\\\" alt=\\\"\\\" class=\\\"logo\\\" />\\r\\n      </div>\\r\\n\\r\\n      <!-- /.col -->\\r\\n    </div>\\r\\n    <!-- info row -->\\r\\n\\r\\n    <div class=\\\"row invoice-info\\\">\\r\\n      <div class=\\\"col-sm-8 invoice-col\\\"> FN: <strong>{{model?.FileNumber}}</strong> </div>\\r\\n      <!-- /.col -->\\r\\n\\r\\n      <!-- /.col -->\\r\\n      <div class=\\\"col-sm-4 invoice-col text-right\\\"> <b>Date:</b>{{ model?.Date| date: 'dd/MM/yyyy'}}<br>\\r\\n        <b>Type:</b> {{model?.TypeName}} </div>\\r\\n      <!-- /.col -->\\r\\n    </div>\\r\\n    <!-- /.row -->\\r\\n\\r\\n    <div class=\\\"row invoice-info\\\">\\r\\n      <div class=\\\"col-sm-12 invoice-col\\\">\\r\\n        <address style=\\\"text-transform:uppercase\\\">\\r\\n          <strong>Address:</strong><br>\\r\\n          {{model?.AddressTo}}\\r\\n        </address>\\r\\n      </div>\\r\\n\\r\\n      <!-- /.col -->\\r\\n    </div>\\r\\n    <div class=\\\"col-12 table-responsive\\\">\\r\\n      <table class=\\\"table table-striped table-bordered\\\">\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <th><strong>Subject: </strong> </th>\\r\\n            <td>{{model?.Subject}} </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th><strong>References: </strong> </th>\\r\\n            <td>{{model?.Reference}} </td>\\r\\n          </tr>\\r\\n          <tr>\\r\\n            <th><strong>Context: </strong> </th>\\r\\n            <td>{{model?.Context}} </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  <div id=\\\"content\\\">\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <h2 class=\\\"ttile\\\">Content</h2>\\r\\n      <ul class=\\\"content-list\\\">\\r\\n        <li>\\r\\n          <div class=\\\"\\\" [innerHTML]=\\\"html\\\"></div>\\r\\n        </li>\\r\\n\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-12\\\">\\r\\n      <h2 class=\\\"ttile\\\">Attachment</h2>\\r\\n      <ul class=\\\"content-list\\\">\\r\\n        <li *ngFor=\\\"let item of model?.AttachmentList; let i = index\\\" [attr.data-index]=\\\"i\\\">{{i+1}}\\r\\n          {{item?.Description}}</li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    <div class=\\\"clearfix\\\">&nbsp;</div>\\r\\n  </div>\\r\\n  <div id=\\\"footer\\\">\\r\\n    <div class=\\\"row invoice-info\\\">\\r\\n      <div class=\\\"col-sm-8 invoice-col\\\"> FN: <strong>{{model?.FileNumber}}</strong> <br />\\r\\n        <br />\\r\\n        CC: <strong>{{model?.CCReferenceListText}}</strong> </div>\\r\\n      <!-- /.col -->\\r\\n\\r\\n      <!-- /.col -->\\r\\n      <div class=\\\"col-sm-4 invoice-col text-right\\\"> <b>Date:</b> {{ model?.EffectForm| date: 'dd/MM/yyyy'}}<br>\\r\\n        <!-- /.col -->\\r\\n      </div>\\r\\n      <div class=\\\"msg_thank\\\" style=\\\"text-transform:uppercase\\\">\\r\\n        <p> {{model?.DepartmentSetupList?.FooterLine1}}</p>\\r\\n        <p> {{model?.DepartmentSetupList?.FooterLine2}}</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <!-- /.row -->\\r\\n\\r\\n\\r\\n</section>\\r\\n\\r\\n<button (click)=\\\"downloadPdf()\\\" class=\\\"btn-submit mt-6 mat-button\\\">Export To Word</button>\\r\\n<button (click)=\\\"downloadPdf(true)\\\" class=\\\"btn-submit mt-6 mat-button\\\">Export To Pdf</button>\\r\\n\"","module.exports = \"\\r\\n    <app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n            <div style=\\\"text-align: center;\\\" class=\\\"col l12 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadDoc(helpDocument.Url,true)\\\"\\r\\n                href=\\\"JavaScript:Void(0);\\\">\\r\\n                <mat-icon>picture_as_pdf</mat-icon>\\r\\n                Click to download Help Document\\r\\n              </a> </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n              <div style=\\\"text-align: center;\\\" class=\\\"col l12 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadDoc(helpDocument.BlankDocUrl)\\\"\\r\\n                  href=\\\"JavaScript:Void(0);\\\">\\r\\n                  <mat-icon>picture_as_pdf</mat-icon>\\r\\n                  Click to download Blank Document\\r\\n                </a> </div>\\r\\n            </div>\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8 table_border\\\">\\r\\n\\r\\n              <ng-container matColumnDef=\\\"index\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Sr No</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">  {{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n            <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Date\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Issue </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Date !=null ? (group.Date| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Entry </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.CreatedDate !=null ? (group.CreatedDate| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"DepartmentCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Department Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.DepartmentCode }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Order Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Id }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Action\\\">\\r\\n                <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n                    <a class=\\\"btn_delete\\\" *ngIf=\\\"this.generateOrderPermission.DetailPageAccess \\\" (click)=\\\"previewClick(group.Id)\\\" title=\\\"Preview\\\"><mat-icon >image</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsLock && !group.IsApprove\\\" routerLink=\\\"/order/generateorderadd/{{group.Id}}\\\" title=\\\"Update\\\"><mat-icon >edit</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsApprove\\\" (click)=\\\"approveClick(group.Id)\\\" title=\\\"Click To Approve\\\"><mat-icon >assignment_turned_in</mat-icon></a>\\r\\n                  <a *ngIf=\\\"group.IsApprove\\\" title=\\\"Approved\\\"><mat-icon >assignment_turned_in</mat-icon></a>\\r\\n                  <a *ngIf=\\\"group.ESignedUrl1\\\" (click)=\\\"downloadPdf(group.ESignedUrl1)\\\" title=\\\"Document V1\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl2\\\" (click)=\\\"downloadPdf(group.ESignedUrl2)\\\" title=\\\"Document V2\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl3\\\" (click)=\\\"downloadPdf(group.ESignedUrl3)\\\" title=\\\"Document V3\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl4\\\" (click)=\\\"downloadPdf(group.ESignedUrl4)\\\" title=\\\"Document V4\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl5\\\" (click)=\\\"downloadPdf(group.ESignedUrl5)\\\" title=\\\"Document V5\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n\\r\\n                  <!-- <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"group.ESignedFinalUrl && this.generateOrderPermission.UpdatePageAccess\\\" (click)=\\\"statusClick(group.Id)\\\" title=\\\"Publish\\\">\\r\\n                      <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                      <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n                    </a> -->\\r\\n                  </td>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;  let entry\\\" [ngClass]=\\\"{'make-gold': entry.IsCancel == true}\\\"></tr>\\r\\n          </table>\\r\\n          <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\" [pageSizeOptions]=\\\"[5,10, 20, 50]\\\"\\r\\n        (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons>\\r\\n      </mat-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n\"","module.exports = \"\\r\\n    <app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n        <div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n            <div style=\\\"text-align: center;\\\" class=\\\"col l12 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadDoc(helpDocument.Url,true)\\\"\\r\\n                href=\\\"JavaScript:Void(0);\\\">\\r\\n                <mat-icon>picture_as_pdf</mat-icon>\\r\\n                Click to download Help Document\\r\\n              </a> </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n              <div style=\\\"text-align: center;\\\" class=\\\"col l12 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadDoc(helpDocument.BlankDocUrl)\\\"\\r\\n                  href=\\\"JavaScript:Void(0);\\\">\\r\\n                  <mat-icon>picture_as_pdf</mat-icon>\\r\\n                  Click to download Blank Document\\r\\n                </a> </div>\\r\\n            </div>\\r\\n          <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8 table_border\\\">\\r\\n\\r\\n              <ng-container matColumnDef=\\\"index\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Sr No</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">  {{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n                </ng-container>\\r\\n\\r\\n            <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"Date\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Issue </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Date !=null ? (group.Date| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n            <ng-container matColumnDef=\\\"CreatedDate\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Date of Entry </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.CreatedDate !=null ? (group.CreatedDate| date: 'dd/MM/yyyy') :'--' }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"DepartmentCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Department Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.DepartmentCode }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Order Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Id }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Action\\\">\\r\\n                <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n                    <a class=\\\"btn_delete\\\" *ngIf=\\\"this.generateOrderPermission.DetailPageAccess \\\" (click)=\\\"previewClick(group.Id)\\\" title=\\\"Preview\\\"><mat-icon >image</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsLock && !group.IsApprove\\\" routerLink=\\\"/order/generateorderadd/{{group.Id}}\\\" title=\\\"Update\\\"><mat-icon >edit</mat-icon></a>\\r\\n                  <a *ngIf=\\\"this.generateOrderPermission.UpdatePageAccess && !group.IsApprove\\\" (click)=\\\"approveClick(group.Id)\\\" title=\\\"Click To Approve\\\"><mat-icon >assignment_turned_in</mat-icon></a>\\r\\n                  <a *ngIf=\\\"group.IsApprove\\\" title=\\\"Approved\\\"><mat-icon >assignment_turned_in</mat-icon></a>\\r\\n                  <a *ngIf=\\\"group.ESignedUrl1\\\" (click)=\\\"downloadPdf(group.ESignedUrl1)\\\" title=\\\"Document V1\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl2\\\" (click)=\\\"downloadPdf(group.ESignedUrl2)\\\" title=\\\"Document V2\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl3\\\" (click)=\\\"downloadPdf(group.ESignedUrl3)\\\" title=\\\"Document V3\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl4\\\" (click)=\\\"downloadPdf(group.ESignedUrl4)\\\" title=\\\"Document V4\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n                  <a  *ngIf=\\\"group.ESignedUrl5\\\" (click)=\\\"downloadPdf(group.ESignedUrl5)\\\" title=\\\"Document V5\\\"><mat-icon >cloud_download</mat-icon></a>\\r\\n\\r\\n                  <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"group.ESignedFinalUrl && this.generateOrderPermission.UpdatePageAccess\\\" (click)=\\\"statusClick(group.Id)\\\" title=\\\"Publish\\\">\\r\\n                      <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                      <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n                    </a>\\r\\n                  </td>\\r\\n\\r\\n          </ng-container>\\r\\n\\r\\n            <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n            <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;  let entry\\\" [ngClass]=\\\"{'make-gold': entry.IsCancel == true}\\\"></tr>\\r\\n          </table>\\r\\n          <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\" [pageSizeOptions]=\\\"[5,10, 20, 50]\\\"\\r\\n        (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons>\\r\\n      </mat-paginator>\\r\\n        </div>\\r\\n      </div>\\r\\n\"","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <p>Order Cancellation</p>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"col l12 s12 \\\">\\r\\n      <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                      <mat-label> Reason<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n                      <mat-select  name=\\\"reason\\\" id=\\\"reason\\\"   [(ngModel)]=\\\"model.Reason\\\" [formControl]=\\\"reason\\\" >\\r\\n                        <mat-option>--Select--</mat-option>\\r\\n                        <mat-option [value]=\\\"k.Value\\\" *ngFor=\\\"let k of dDLList?.ddlCancellationReason\\\">{{ k.Text }}</mat-option>\\r\\n                      </mat-select>\\r\\n                    </mat-form-field>\\r\\n                    <mat-error *ngIf=\\\"reason.invalid && reason.touched\\\">\\r\\n                      Reason is <strong>required</strong>\\r\\n                       </mat-error>\\r\\n          </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Remarks\\r\\n          </mat-label>\\r\\n          <input matInput placeholder=\\\"Remarks\\\"  name=\\\"Remarks\\\" [(ngModel)]=\\\"model.Remarks\\\" id=\\\"Remarks\\\">\\r\\n      </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n    aria-label=\\\"Select an option\\\" #IsAutoEmail [(ngModel)]=\\\"model.IsAutoEmail\\\">\\r\\n    <mat-label class=\\\"mr-5\\\">Is Auto Email</mat-label>\\r\\n    <mat-radio-button [value]=\\\"true\\\" class=\\\" mr-5\\\">Yes</mat-radio-button>\\r\\n    <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label\\\"\\r\\n    aria-label=\\\"Select an option\\\" #IsAutoSMS [(ngModel)]=\\\"model.IsAutoSMS\\\">\\r\\n    <mat-label class=\\\"mr-5\\\">Is Auto SMS</mat-label>\\r\\n    <mat-radio-button [value]=\\\"true\\\" class=\\\" mr-5\\\">Yes</mat-radio-button>\\r\\n    <mat-radio-button [value]=\\\"false\\\">No</mat-radio-button>\\r\\n</mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"SaveClick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 s12 p-0\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col l12 s12\\\">\\r\\n        <div class=\\\"row m-20 mb-0\\\">\\r\\n\\r\\n                  <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                        <mat-label>Entry From Date</mat-label>\\r\\n                        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Entry From Date\\\" [(ngModel)]=\\\"indexModel.FromDateOfEntry\\\" [max]=\\\"indexModel.ToDateOfEntry\\\">\\r\\n                      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                      <mat-datepicker #picker1></mat-datepicker>\\r\\n                      </mat-form-field>\\r\\n                    </div>\\r\\n                    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                          <mat-label>Entry To Date</mat-label>\\r\\n                          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"Entry To Date\\\" [(ngModel)]=\\\"indexModel.ToDateOfEntry\\\" [min]=\\\"indexModel.FromDateOfEntry\\\">\\r\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                          <mat-datepicker #picker2></mat-datepicker>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Date of Issue</mat-label>\\r\\n                            <input matInput [matDatepicker]=\\\"picker3\\\" (focus)=\\\"picker3.open()\\\" readonly placeholder=\\\"Date of Issue\\\" [(ngModel)]=\\\"indexModel.DateOfIssue\\\">\\r\\n                            <mat-datepicker-toggle matSuffix [for]=\\\"picker3\\\"></mat-datepicker-toggle>\\r\\n                            <mat-datepicker #picker3></mat-datepicker>\\r\\n                          </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label> Document No. </mat-label>\\r\\n                              <input matInput placeholder=\\\"Software Entry Number\\\" [(ngModel)]=\\\"indexModel.DocumentNo\\\" maxlength=\\\"50\\\"/>\\r\\n                                      </mat-form-field>\\r\\n                                    </div>\\r\\n                        <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label>Nodal Department</mat-label>\\r\\n                                          <mat-select  [(ngModel)]=\\\"indexModel.DepartmentCode\\\" (selectionChange)=\\\"GetSubType($event.value,indexModel.DocumentType)\\\">\\r\\n                                              <mat-option value=\\\"\\\">--Select--</mat-option>\\r\\n                                              <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartment\\\">\\r\\n                                                  {{ k.Text }}</mat-option>\\r\\n                                          </mat-select>\\r\\n                                      </mat-form-field>\\r\\n                                    </div>\\r\\n                        <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label> Document Type </mat-label>\\r\\n                                          <mat-select  [(ngModel)]=\\\"indexModel.DocumentType\\\" (selectionChange)=\\\"GetSubType(indexModel.DepartmentCode,$event.value)\\\">\\r\\n                                              <mat-option value=\\\"\\\">--Select--</mat-option>\\r\\n                                              <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlOrderType\\\">\\r\\n                                                  {{ k.Text }}</mat-option>\\r\\n                                          </mat-select>\\r\\n                                      </mat-form-field>\\r\\n                                    </div>\\r\\n\\r\\n                                    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                                        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                          <mat-label> Document Sub  Type </mat-label>\\r\\n                                                      <mat-select  [(ngModel)]=\\\"indexModel.DocumentSubType\\\">\\r\\n                                                          <mat-option value=\\\"\\\">--Select--</mat-option>\\r\\n                                                          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlSubType\\\">\\r\\n                                                              {{ k.Text }}</mat-option>\\r\\n                                                      </mat-select>\\r\\n                                                  </mat-form-field>\\r\\n                                                </div>\\r\\n\\r\\n\\r\\n\\r\\n                  <div class=\\\"col l3 xl3 m6 s12\\\" >\\r\\n                      <button (click)=\\\"searchClick();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n                      <button (click)=\\\"Reset();\\\" class=\\\"btn btn_orange mr-5\\\" style=\\\"line-height: 0.5;\\\"><mat-icon>refresh</mat-icon></button>\\r\\n                      <button (click)=\\\"print();\\\" class=\\\"btn btn_note btn_orange\\\"  style=\\\"margin-right: 10px;\\\">Print</button>\\r\\n                  </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n<div  id=\\\"orderdetailprint\\\">\\r\\n\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort *ngIf=\\\"listModel?.length>0\\\"\\r\\n          class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important\\\">\\r\\n          <ng-container matColumnDef=\\\"index\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>s.no</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n              {{ i + 1 }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"SectorName\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Sector/Nodal Department</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{element.SectorName }}\\r\\n              <span *ngIf=\\\"element.DepartmentTitle\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br>/{{element.DepartmentTitle}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"TypeName\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Document Type /Sub Type</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element.TypeName }}\\r\\n              <span *ngIf=\\\"element.SubTypeName\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br>/{{element.SubTypeName}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"DocNumber\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Document No. /Date of Issue/ With Affect from</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element.OrderNo }}\\r\\n              <span *ngIf=\\\"element.Date\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br>/{{element.Date| date: 'dd-MM-yyyy'}}</span>\\r\\n              <span *ngIf=\\\"element.EffectForm\\\" style=\\\"color: black; font-weight: bold;\\\"><br>/{{element.EffectForm| date: 'dd-MM-yyyy'}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Title\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Title & Description</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element.Title }}\\r\\n              <span *ngIf=\\\"element.Description\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br> /{{element.Description}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"RefNo\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Previous Doc Reference No</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element.ReferenceNumber }}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"LinkToScheme\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Beneficiary Category /Linked to Scheme(Name)</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{ element.BeneficiaryCategoryName }}\\r\\n              <span *ngIf=\\\"element.IndividualBeneficiaryScheme\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br> /{{element.IndividualBeneficiaryScheme}}</span>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"LinkWith\\\" style=\\\"width: 15%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Linked with(Module nam)>/Year/Dept name/Para No./file No./Description</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <ul class=\\\"image-list\\\">\\r\\n                <li *ngFor=\\\"let item of element.RelatedToOrderList; let i = index;\\\">\\r\\n{{item.ModuleName}}\\r\\n\\r\\n<span *ngIf=\\\"element.YearText\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br> /{{element.YearText}}</span>\\r\\n<span *ngIf=\\\"element.DepartmentName\\\" style=\\\"color: black; font-weight: bold;\\\"><br> /{{element.DepartmentName}}</span>\\r\\n<span *ngIf=\\\"element.ParaNo\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br> /{{element.ParaNo}}</span>\\r\\n<span *ngIf=\\\"element.FileNumber\\\" style=\\\"color: black; font-weight: bold;\\\"><br> /{{element.FileNumber}}</span>\\r\\n<span *ngIf=\\\"element.ResultDescription\\\" style=\\\"color: #2922a2; font-weight: bold;\\\"><br> /{{element.ResultDescription}}</span>\\r\\n                </li>\\r\\n              </ul>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Remark\\\" style=\\\"width: 10%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Remarks/Active/Inactive</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n              {{ element.Remark}}\\r\\n                <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"element.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!element.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Attachment\\\" style=\\\"width: 10%;\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Attachment</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <ul class=\\\"image-list\\\">\\r\\n                <li *ngFor=\\\"let url of element.AttachmentList; let i = index;\\\">\\r\\n\\r\\n                  <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" (click)=\\\"downloadPdf(url?.Url,element.Id)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n               Download\\r\\n                  </a>\\r\\n\\r\\n                  <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" /></div>\\r\\n\\r\\n                </li>\\r\\n              </ul>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n    </table>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n    <div *ngIf=\\\"listModel?.length==0\\\" class=\\\"msg-not-found\\\"> Record Not Found</div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row m-20 mb-0\\\">\\r\\n  <div class=\\\"col l6 xl4 m4 s6\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Entry From Date</mat-label>\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\" [(ngModel)]=\\\"model.EntryFromDate\\\" [max]=\\\"model.EntryToDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Entry To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\" [(ngModel)]=\\\"model.EntryToDate\\\" [min]=\\\"model.EntryFromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n\\r\\n  <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n    <button (click)=\\\"searchClick();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n    <button (click)=\\\"clearClick();\\\" class=\\\"btn btn_note\\\"  style=\\\"margin-right: 10px;\\\">Clear Search</button>\\r\\n    <button (click)=\\\"print();\\\" class=\\\"btn btn_note btn_orange\\\"  style=\\\"margin-right: 10px;\\\">Print</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12\\\" id=\\\"orderprint\\\">\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" *ngIf=\\\"listModel?.length>0\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important\\\">\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n            {{ (model.Page - 1) * model.PageSize + (i + 1) }}\\r\\n          </td>\\r\\n          <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n        </ng-container>\\r\\n          <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\" >\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef > {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n              <td mat-footer-cell *matFooterCellDef> </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n             <!-- Cost Column -->\\r\\n        <ng-container matColumnDef=\\\"ActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Active Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.ActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef style=\\\"font-weight: bold;\\\">{{totalActiveDepartmentOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DeActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> De-Active Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.DeActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef style=\\\"font-weight: bold;\\\">{{totalDeActiveDepartmentOrderCount}} </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n          <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n            <a class=\\\"btn_delete\\\" routerLink=\\\"/order/summaryreport/{{group.DepartmentCode}}\\\"  title=\\\"Gov. Document Summary Report\\\"><mat-icon >list</mat-icon></a>\\r\\n            <a class=\\\"btn_delete\\\" routerLink=\\\"/order/summaryreportwithlasttrans/{{group.DepartmentCode}}\\\"  title=\\\"Gov. Document Summary Report With Last Transaction\\\"><mat-icon >table_view</mat-icon></a>\\r\\n            </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n    </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      <div *ngIf=\\\"listModel?.length==0\\\"> Record Not Found</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row m-20\\\">\\r\\n  <div class=\\\"col l6 xl4 m4 s6\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Created From Date</mat-label>\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\" [(ngModel)]=\\\"filterModel.CreatedFromDate\\\" [max]=\\\"filterModel.CreatedToDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Created To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\" [(ngModel)]=\\\"filterModel.CreatedToDate\\\" [min]=\\\"filterModel.CreatedFromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Admin Department </mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"filterModel.AdminDepartmentCode\\\" (selectionChange)=\\\"GetDepartmentByDepartmentCategory(0,$event.value)\\\" >\\r\\n              <mat-option value=\\\"0\\\">--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlAdminDepartment\\\">{{k.Text}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          </div>\\r\\n  <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Department </mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"filterModel.DepartmentCode\\\">\\r\\n        <mat-option >--Select--</mat-option>\\r\\n        <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{k.Text}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n    <button (click)=\\\"searchClick();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n    <button (click)=\\\"clearClick();\\\" class=\\\"btn btn_note btn_orange mr-5\\\" >Clear Search</button>\\r\\n    <button (click)=\\\"print();\\\" class=\\\"btn btn_note btn_orange\\\"  style=\\\"margin-right: 10px;\\\">Print</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12\\\" id=\\\"orderprint\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" *ngIf=\\\"listModel?.length>0\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important\\\">\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n            {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n          </td>\\r\\n          <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n        </ng-container>\\r\\n          <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\" >\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef > {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n              <td mat-footer-cell *matFooterCellDef> </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n             <!-- Cost Column -->\\r\\n             <ng-container matColumnDef=\\\"LastTransactionDate\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef>Last Transaction Date </th>\\r\\n                <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.LastTransactionDate !=null ? (transaction.LastTransactionDate) :'--'}}</td>\\r\\n                <td mat-footer-cell *matFooterCellDef> </td>\\r\\n              </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Active Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.ActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalActiveOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DeActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> De-Active Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.DeActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalDeActiveOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"OrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.OrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n              <a class=\\\"btn_delete\\\" routerLink=\\\"/order/orderDetailReport/{{group.DepartmentCode}}\\\" title=\\\"Detail\\\"><mat-icon >list</mat-icon></a>\\r\\n              </td>\\r\\n              <td mat-footer-cell *matFooterCellDef> </td>\\r\\n      </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay ; sticky: true\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      </table>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"listModel?.length==0\\\"> Record Not Found</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row m-20 mb-0\\\">\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field appearance=\\\"outline\\\">\\r\\n          <mat-label>Admin Department </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"model.AdminDepartmentCode\\\" (selectionChange)=\\\"GetDepartmentByDepartmentCategory(model.DepartmentCategoryCode,$event.value)\\\" >\\r\\n            <mat-option value=\\\"0\\\">--Select--</mat-option>\\r\\n            <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlAdminDepartment\\\">{{k.Text}}\\r\\n            </mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n        </div>\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label> Department Category</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"model.DepartmentCategoryCode\\\" (selectionChange)=\\\"GetDepartmentByDepartmentCategory($event.value,model.AdminDepartmentCode)\\\">\\r\\n          <mat-option value=\\\"0\\\">All</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of dDLList?.ddlDepartmentCategory\\\">{{ k.Text }}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label> Department </mat-label>\\r\\n          <mat-select [(ngModel)]=\\\"model.DepartmentCode\\\">\\r\\n            <mat-option value=\\\"0\\\">All</mat-option>\\r\\n            <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{ k.Text }}</mat-option>\\r\\n          </mat-select>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n          <button (click)=\\\"GetList();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n        <button (click)=\\\"clearClick();\\\" class=\\\"btn btn_note btn_orange\\\"><mat-icon style=\\\" line-height: 36px;\\\">refresh</mat-icon></button>\\r\\n      </div>\\r\\n  </div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 s12 \\\">\\r\\n\\r\\n\\r\\n<div class=\\\"table-responsive table-header-fixed mt-20\\\">\\r\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort  class=\\\"mat-elevation-z8 table_border \\\">\\r\\n\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Sr No</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index;\\\"> {{(i+1)}}</td>\\r\\n            <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n            <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"ActRules\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Act & Rules </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.ActRules}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalActRules}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Circular\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Circular </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Circular}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalCircular}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"CitizenCharter\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Citizen & Charter </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.CitizenCharter}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalCitizenCharter}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Notification\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Notification </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Notification}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalNotification}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Order\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Order </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Order}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalOrders}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"PolicyGuidelines\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Policy & Guidelines </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.PolicyGuidelines}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalPolicyGuidelines}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"AnnualProgressReport\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Annual Progress Report </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.AnnualProgressReport}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalAnnualProgressReport}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Budget\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Budget </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Budget}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalBudget}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Covid\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Covid-19 Orders </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Covid}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalCovid}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Publication\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Publication </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Publication}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ totalPublication}} </td>\\r\\n          </ng-container>\\r\\n          <ng-container matColumnDef=\\\"Total\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Total </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.Total}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{ total}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n      <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    </table>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row m-20\\\">\\r\\n  <div class=\\\"col l6 xl4 m4 s6\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Created From Date</mat-label>\\r\\n        <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\" [(ngModel)]=\\\"filterModel.CreatedFromDate\\\" [max]=\\\"filterModel.CreatedToDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Created To Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\" [(ngModel)]=\\\"filterModel.CreatedToDate\\\" [min]=\\\"filterModel.CreatedFromDate\\\">\\r\\n          <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n          <mat-datepicker #picker2></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n          <mat-form-field appearance=\\\"outline\\\">\\r\\n            <mat-label>Admin Department </mat-label>\\r\\n            <mat-select [(ngModel)]=\\\"filterModel.AdminDepartmentCode\\\" (selectionChange)=\\\"GetDepartmentByDepartmentCategory(0,$event.value)\\\" >\\r\\n              <mat-option value=\\\"0\\\">--Select--</mat-option>\\r\\n              <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlAdminDepartment\\\">{{k.Text}}\\r\\n              </mat-option>\\r\\n            </mat-select>\\r\\n          </mat-form-field>\\r\\n          </div>\\r\\n  <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Department </mat-label>\\r\\n      <mat-select [(ngModel)]=\\\"filterModel.DepartmentCode\\\">\\r\\n        <mat-option >--Select--</mat-option>\\r\\n        <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{k.Text}}</mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n    <button (click)=\\\"searchClick();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n    <button (click)=\\\"clearClick();\\\" class=\\\"btn btn_note btn_orange mr-5\\\" >Clear Search</button>\\r\\n    <button (click)=\\\"print();\\\" class=\\\"btn btn_note btn_orange\\\"  style=\\\"margin-right: 10px;\\\">Print</button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12\\\" id=\\\"orderprint\\\">\\r\\n\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" *ngIf=\\\"listModel?.length>0\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important\\\">\\r\\n        <ng-container matColumnDef=\\\"index\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n          <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n            {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n          </td>\\r\\n          <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n        </ng-container>\\r\\n          <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\" >\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef > {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n              <td mat-footer-cell *matFooterCellDef> </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n             <!-- Cost Column -->\\r\\n\\r\\n\\r\\n        <ng-container matColumnDef=\\\"ActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef>Active Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.ActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalActiveOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"DeActiveOrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> De-Active Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.DeActiveOrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalDeActiveOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"OrderCount\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Order Count </th>\\r\\n          <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.OrderCount}} </td>\\r\\n          <td mat-footer-cell *matFooterCellDef>{{totalOrderCount}} </td>\\r\\n        </ng-container>\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n              <a class=\\\"btn_delete\\\" routerLink=\\\"/order/orderDetailReport/{{group.DepartmentCode}}\\\" title=\\\"Detail\\\"><mat-icon >list</mat-icon></a>\\r\\n              </td>\\r\\n              <td mat-footer-cell *matFooterCellDef> </td>\\r\\n      </ng-container>\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n        <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n      </table>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"listModel?.length==0\\\"> Record Not Found</div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"row m-20\\\">\\r\\n    <div class=\\\"col l6 xl4 m4 s6\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n          <mat-label>Created From Date</mat-label>\\r\\n          <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\" [(ngModel)]=\\\"filterModel.CreatedFromDate\\\" [max]=\\\"filterModel.CreatedToDate\\\">\\r\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n        <mat-datepicker #picker1></mat-datepicker>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n      <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label>Created To Date</mat-label>\\r\\n            <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\" [(ngModel)]=\\\"filterModel.CreatedToDate\\\" [min]=\\\"filterModel.CreatedFromDate\\\">\\r\\n            <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n            <mat-datepicker #picker2></mat-datepicker>\\r\\n          </mat-form-field>\\r\\n        </div>\\r\\n        <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\">\\r\\n              <mat-label>Admin Department </mat-label>\\r\\n              <mat-select [(ngModel)]=\\\"filterModel.AdminDepartmentCode\\\" (selectionChange)=\\\"GetDepartmentByDepartmentCategory(0,$event.value)\\\" >\\r\\n                <mat-option value=\\\"0\\\">--Select--</mat-option>\\r\\n                <mat-option value=\\\"{{k.Value}}\\\" *ngFor=\\\"let k of dDLList?.ddlAdminDepartment\\\">{{k.Text}}\\r\\n                </mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            </div>\\r\\n    <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Department </mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"filterModel.DepartmentCode\\\">\\r\\n          <mat-option >--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{ k.Value }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">{{k.Text}}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl4 m4 s4\\\">\\r\\n      <button (click)=\\\"searchClick();\\\" class=\\\"btn btn_note btn_green\\\" style=\\\"margin-right: 10px;\\\">Search</button>\\r\\n      <button (click)=\\\"clearClick();\\\" class=\\\"btn btn_note btn_orange mr-5\\\" >Clear Search</button>\\r\\n      <button (click)=\\\"print();\\\" class=\\\"btn btn_note btn_orange\\\"  style=\\\"margin-right: 10px;\\\">Print</button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col l12 s12\\\" id=\\\"orderprint\\\">\\r\\n\\r\\n\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" *ngIf=\\\"listModel?.length>0\\\" class=\\\"mat-elevation-z8\\\" style=\\\"vertical-align:top !important\\\">\\r\\n          <ng-container matColumnDef=\\\"index\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n            <td mat-cell *matCellDef=\\\"let element; let i = index\\\">\\r\\n              {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}\\r\\n            </td>\\r\\n            <td mat-footer-cell *matFooterCellDef> Total </td>\\r\\n          </ng-container>\\r\\n            <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\" >\\r\\n\\r\\n                <th mat-header-cell *matHeaderCellDef > {{column.Text}} </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n                <td mat-footer-cell *matFooterCellDef> </td>\\r\\n              </ng-container>\\r\\n\\r\\n\\r\\n               <!-- Cost Column -->\\r\\n               <ng-container matColumnDef=\\\"LastTransactionDate\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef>Last Transaction Date </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let transaction\\\"> {{ transaction.LastTransactionDate !=null ? (transaction.LastTransactionDate| date: 'dd/MM/yyy , h:mm:ss a') :'--'}}</td>\\r\\n                  <td mat-footer-cell *matFooterCellDef> </td>\\r\\n                </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"ActiveOrderCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef>Active Order Count </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.ActiveOrderCount}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{totalActiveOrderCount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"DeActiveOrderCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> De-Active Order Count </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.DeActiveOrderCount}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{totalDeActiveOrderCount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"OrderCount\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> Order Count </th>\\r\\n            <td mat-cell *matCellDef=\\\"let transaction\\\"> {{transaction.OrderCount}} </td>\\r\\n            <td mat-footer-cell *matFooterCellDef>{{totalOrderCount}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"Action\\\">\\r\\n              <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n                <a class=\\\"btn_delete\\\" routerLink=\\\"/order/orderDetailReport/{{group.DepartmentCode}}\\\" title=\\\"Detail\\\"><mat-icon >list</mat-icon></a>\\r\\n                </td>\\r\\n                <td mat-footer-cell *matFooterCellDef> </td>\\r\\n        </ng-container>\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay\\\"></tr>\\r\\n          <tr mat-footer-row *matFooterRowDef=\\\"displayedColumns\\\"></tr>\\r\\n        </table>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"listModel?.length==0\\\"> Record Not Found</div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\"","module.exports = \"\\r\\n<!-- <div class=\\\"row\\\" *ngIf=\\\"helpDocUrl\\\">\\r\\n    <div class=\\\"col l12 s12 p-0\\\">\\r\\n        <a (click)=\\\"downloadPdf(helpDocUrl)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n            Click to download Help Document\\r\\n           </a>\\r\\n      </div>\\r\\n    </div> -->\\r\\n\\r\\n    <div class=\\\"row m-0\\\">\\r\\n        <div style=\\\"text-align: right;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadPdf(helpDocument.Url,true)\\\"\\r\\n            href=\\\"JavaScript:Void(0);\\\">\\r\\n            <mat-icon>picture_as_pdf</mat-icon>\\r\\n            Click to download Help Document\\r\\n          </a> </div>\\r\\n\\r\\n          <div style=\\\"text-align: left;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadPdf(helpDocument.BlankDocUrl)\\\"\\r\\n            href=\\\"JavaScript:Void(0);\\\">\\r\\n            <mat-icon>picture_as_pdf</mat-icon>\\r\\n            Click to download Blank Document\\r\\n          </a> </div>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n      <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col l12 s12 text-center mb-10\\\">\\r\\n\\r\\n              <button (click)=\\\"downloadCsv()\\\" mat-button class=\\\"btn-submit mat-button\\\">Export to Excel <mat-icon>report</mat-icon></button>\\r\\n\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"col l12 s12\\\">\\r\\n\\r\\n            <div class=\\\"row m-20 mb-0 scheme-sear-bg-1 no-margin\\\">\\r\\n              <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label> Department</mat-label>\\r\\n                            <mat-select  [(ngModel)]=\\\"indexModel.DepartmentCode\\\">\\r\\n                                <mat-option value=\\\"\\\">--Select--</mat-option>\\r\\n                                <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\" title={{k.DepartmentTitle}} >\\r\\n                                    {{ k.DepartmentTitle }}</mat-option>\\r\\n                            </mat-select>\\r\\n                        </mat-form-field>\\r\\n                      </div>\\r\\n                      <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                          <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                            <mat-label>Entry From Date</mat-label>\\r\\n                            <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"From Date\\\" [(ngModel)]=\\\"indexModel.FromDate\\\" [max]=\\\"indexModel.ToDate\\\">\\r\\n                          <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n                          <mat-datepicker #picker1></mat-datepicker>\\r\\n                          </mat-form-field>\\r\\n                        </div>\\r\\n                        <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n                            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                              <mat-label>Entry To Date</mat-label>\\r\\n                              <input matInput [matDatepicker]=\\\"picker2\\\" (focus)=\\\"picker2.open()\\\" readonly placeholder=\\\"To Date\\\" [(ngModel)]=\\\"indexModel.ToDate\\\" [min]=\\\"indexModel.FromDate\\\">\\r\\n                              <mat-datepicker-toggle matSuffix [for]=\\\"picker2\\\"></mat-datepicker-toggle>\\r\\n                              <mat-datepicker #picker2></mat-datepicker>\\r\\n                            </mat-form-field>\\r\\n                          </div>\\r\\n                          <div class=\\\"col l2 xl2 m6 s12\\\">\\r\\n                              <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n                                <input matInput placeholder=\\\"Software Entry Number\\\" [(ngModel)]=\\\"indexModel.Id\\\" type=\\\"number\\\"/>\\r\\n                              </mat-form-field>\\r\\n                            </div>\\r\\n\\r\\n\\r\\n                      <div class=\\\"col l1 xl1 m6 s12\\\" >\\r\\n                          <button (click)=\\\"Reset();\\\" class=\\\"btn btn_orange w-100\\\" style=\\\"line-height: 0.5;\\\"><mat-icon>refresh</mat-icon></button>\\r\\n                      </div>\\r\\n            </div>\\r\\n\\r\\n          </div>\\r\\n        </div>\\r\\n<app-global-list-search  [SearchFields]=\\\"searchColumns\\\" (onSearch)=\\\"SearchByKeyword($event)\\\" ></app-global-list-search>\\r\\n<!-- <div class=\\\"row\\\">\\r\\n  <div class=\\\"col x6 m6 s6\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>Date<span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Date\\\" name=\\\"Date\\\"\\r\\n        id=\\\"SearchDate\\\" [(ngModel)]=\\\"indexModel.SearchDate\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div> -->\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col l12 s12 \\\">\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n\\r\\n      <table mat-table [dataSource]=\\\"dataSource\\\" matSort (matSortChange)=\\\"SortData($event)\\\" class=\\\"mat-elevation-z8 table_border\\\" style=\\\"overflow-wrap: break-word;\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"index\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>Sr No</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">  {{(indexModel.Page-1)*indexModel.PageSize +(i+1)}}</td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> {{column.Text}} </th>\\r\\n              <td mat-cell *matCellDef=\\\"let element\\\" title={{element[column.Value]}}> {{element[column.Value]}} </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Title\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>Title / Document No. / Issue Date</th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                  {{group.Title}}\\r\\n                  <!-- <span *ngIf=\\\"group.OrderNo\\\" style=\\\"font-weight: bold;\\\"> / {{ group.OrderNo }}</span> -->\\r\\n                  <br>\\r\\n                  <span *ngIf=\\\"group.OrderNo\\\" style=\\\"color: #2922a2; font-weight: bold;\\\">Document No. = {{group.OrderNo}}</span><br> <span *ngIf=\\\"group.Date\\\" style=\\\"color: black; font-weight: bold;\\\">{{ group.Date !=null ? (group.Date| date: 'dd-MM-yyyy') :'--' }}</span>\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Id\\\">\\r\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Software Entry No. </th>\\r\\n                <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                  {{ group.Id }}\\r\\n                </td>\\r\\n              </ng-container>\\r\\n\\r\\n           <ng-container matColumnDef=\\\"TypeName\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Document Type / Document Sub-Type </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.TypeName }} / <span *ngIf=\\\"group.SubTypeName\\\">{{group.SubTypeName}}</span>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n\\r\\n            <ng-container matColumnDef=\\\"ModifiedBy\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Last Update Date / Last Update BY</th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.ModifiedDate !=null ? (group.ModifiedDate| date: 'dd/MM/yyyy') :'--' }} <span *ngIf=\\\"group.ModifiedName\\\" style=\\\"color: #2922a2; font-weight: bold;\\\">/ {{ group.ModifiedName }}</span>\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"BeneficiaryCategoryIds\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef mat-sort-header> Beneficiary Category </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\" title={{group.BeneficiaryCategoryName}}>\\r\\n                {{ group.BeneficiaryCategoryName | slice:0:30}}{{ group?.BeneficiaryCategoryName?.length > 30 ? '...' : ''}}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <!-- <ng-container matColumnDef=\\\"DepartmentCode\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Department Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.DepartmentCode }}\\r\\n              </td>\\r\\n            </ng-container>\\r\\n\\r\\n            <ng-container matColumnDef=\\\"Id\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef> Order Code </th>\\r\\n              <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n                {{ group.Id }}\\r\\n              </td>\\r\\n            </ng-container> -->\\r\\n\\r\\n        <ng-container matColumnDef=\\\"Status\\\">\\r\\n          <th mat-header-cell *matHeaderCellDef> Publish Status </th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link toogle-btn\\\">\\r\\n            <ng-container>\\r\\n              <div *ngIf=\\\"group.IsLock\\\" title=\\\"This is Locked record\\\">\\r\\n                <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n              </div>\\r\\n              <a href=\\\"JavaScript:Void(0);\\\" *ngIf=\\\"!group.IsLock && this.OrderPermission.UpdatePageAccess\\\" (click)=\\\"ChangeActiveStatusClick(group.Id)\\\" title=\\\"This is UnLocked record\\\">\\r\\n                  <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                  <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsActive\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n                </a>\\r\\n             </ng-container>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Lock\\\">\\r\\n\\r\\n          <th mat-header-cell *matHeaderCellDef>Lock Record</th>\\r\\n          <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"toogle-btn\\\">\\r\\n\\r\\n            <div *ngIf=\\\"!this.OrderPermission.Custome1PageAccess\\\">\\r\\n              <ng-container>\\r\\n                <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsLock\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsLock\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n\\r\\n             </ng-container>\\r\\n\\r\\n            </div>\\r\\n            <div *ngIf=\\\"this.OrderPermission.Custome1PageAccess\\\" >\\r\\n              <ng-container> <a href=\\\"JavaScript:Void(0);\\\" (click)=\\\"lockClick(group.Id)\\\">\\r\\n\\r\\n                <mat-icon class=\\\"toggle_on\\\" *ngIf=\\\"group.IsLock\\\" style=\\\"cursor:pointer;\\\">toggle_on</mat-icon>\\r\\n                <mat-icon class=\\\"toggle_off\\\" *ngIf=\\\"!group.IsLock\\\" style=\\\"cursor:pointer;\\\">toggle_off</mat-icon>\\r\\n              </a> </ng-container>\\r\\n            </div>\\r\\n          </td>\\r\\n        </ng-container>\\r\\n        <ng-container matColumnDef=\\\"Action\\\">\\r\\n            <th  width=\\\"130\\\" mat-header-cell *matHeaderCellDef> Action </th>\\r\\n            <td mat-cell *matCellDef=\\\"let group\\\" class=\\\"action-link-btn\\\">\\r\\n              <a class=\\\"btn_delete\\\"  *ngIf=\\\"this.OrderPermission.DeletePageAccess\\\" (click)=\\\"OnDelete(group.Id)\\\" title=\\\"delete\\\"><mat-icon >delete</mat-icon></a>\\r\\n\\r\\n              <a class=\\\"btn_edit\\\" *ngIf=\\\"this.OrderPermission.UpdatePageAccess && !group.IsLock\\\" routerLink=\\\"update/{{group.Id}}\\\" title=\\\"edit\\\"><mat-icon>edit</mat-icon></a>\\r\\n\\r\\n              <a class=\\\"btn_list\\\" *ngIf=\\\"this.OrderPermission.ListPageAccess\\\" routerLink=\\\"detail/{{group.Id}}\\\" title=\\\"detail\\\"><mat-icon>visibility</mat-icon></a>\\r\\n\\r\\n              <!--  <a class=\\\"btn_list\\\" *ngIf=\\\"this.OrderPermission.UpdatePageAccess && !group.IsLock\\\" routerLink=\\\"uploadattachment/{{group.Id}}\\\" title=\\\"Upload Attachment\\\"><mat-icon>cloud_upload</mat-icon></a> -->\\r\\n\\r\\n              </td>\\r\\n      </ng-container>\\r\\n\\r\\n        <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n        <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n      </table>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <mat-paginator #paginator [length]=\\\"totalRecords\\\" [pageSize]=\\\"indexModel.PageSize\\\" [pageSizeOptions]=\\\"[5,10, 20, 50,totalRecords]\\\"\\r\\n    (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons>\\r\\n  </mat-paginator>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","module.exports = \"\\r\\n<div class=\\\"modal-header\\\">\\r\\n  <p>Linked with (Budget/CM Announcement/CM Directions/Jan Ghoshna Patra)</p>\\r\\n\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">\\r\\n      <mat-icon>close</mat-icon></button>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l12 m12 s12 text-right footer-info-bx\\\">\\r\\n\\r\\n    <div class=\\\"d-inline\\\"> <strong>Module Name: </strong><span\\r\\n      *ngIf=\\\"responseReqModel?.ModuleName\\\">{{responseReqModel?.ModuleName}}</span><span\\r\\n      *ngIf=\\\"!responseReqModel?.ModuleName\\\">--</span> </div>\\r\\n  <div class=\\\"d-inline\\\"> <strong>Year: </strong><span\\r\\n      *ngIf=\\\"responseReqModel?.YearText\\\">{{responseReqModel?.YearText}}</span><span\\r\\n      *ngIf=\\\"!responseReqModel?.YearText\\\">--</span> </div>\\r\\n  <div class=\\\"d-inline\\\"> <strong>Department: </strong><span\\r\\n      *ngIf=\\\"responseReqModel?.DepartmentName\\\">{{responseReqModel?.DepartmentName}}</span><span\\r\\n      *ngIf=\\\"!responseReqModel?.DepartmentName\\\">--</span> </div>\\r\\n\\r\\n    </div>\\r\\n          <div class=\\\"col l12 s12 \\\" >\\r\\n           <table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\" *ngIf=\\\"responseListModel.length>0 && !isRecord\\\">\\r\\n            <ng-container matColumnDef=\\\"index\\\">\\r\\n              <th mat-header-cell *matHeaderCellDef>#</th>\\r\\n              <td mat-cell *matCellDef=\\\"let element; let i = index;\\\">\\r\\n                {{ (indexModel.Page - 1) * indexModel.PageSize + (i + 1) }}</td>\\r\\n            </ng-container>\\r\\n              <ng-container [matColumnDef]=\\\"column.Value\\\" *ngFor=\\\"let column of ViewdisplayedColumns\\\">\\r\\n\\r\\n                <th mat-header-cell *matHeaderCellDef> {{column.Text}} </th>\\r\\n                <td mat-cell *matCellDef=\\\"let element\\\"> {{element[column.Value]}} </td>\\r\\n              </ng-container>\\r\\n\\r\\n              <ng-container matColumnDef=\\\"Action\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Action </th>\\r\\n                      <mat-cell *matCellDef=\\\"let data\\\" (click)=\\\"$event.stopPropagation()\\\">\\r\\n                      <button class=\\\"btn-submit mt-5\\\" mat-button (click)=\\\"RelatedToSelectResult(data)\\\">\\r\\n                     Select\\r\\n                      </button>\\r\\n\\r\\n                      </mat-cell>\\r\\n                      </ng-container>\\r\\n\\r\\n              <tr mat-header-row *matHeaderRowDef=\\\"columnsToDisplay\\\"></tr>\\r\\n              <tr mat-row *matRowDef=\\\"let row; columns: columnsToDisplay;\\\"></tr>\\r\\n            </table>\\r\\n            <div  *ngIf=\\\"isRecord\\\" class=\\\"col l12 s12 not-found-msg\\\">\\r\\n                Record not found\\r\\n              </div>\\r\\n            <mat-paginator [pageSizeOptions]=\\\"[4,10, 15, 20]\\\" (page)=\\\"onPaginateChange($event)\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n\\r\\n          </div>\\r\\n\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div style=\\\"text-align: right;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.Url\\\"> <a (click)=\\\"downloadPdf(helpDocument.Url,true)\\\"\\r\\n  href=\\\"JavaScript:Void(0);\\\">\\r\\n  <mat-icon>picture_as_pdf</mat-icon>\\r\\n  Click to download Help Document\\r\\n  </a> </div>\\r\\n\\r\\n  <div style=\\\"text-align: left;\\\" class=\\\"col l6 s12 download_pdf\\\" *ngIf=\\\"helpDocument?.BlankDocUrl\\\"> <a (click)=\\\"downloadPdf(helpDocument.BlankDocUrl)\\\"\\r\\n  href=\\\"JavaScript:Void(0);\\\">\\r\\n  <mat-icon>picture_as_pdf</mat-icon>\\r\\n  Click to download Blank Document\\r\\n  </a> </div>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n    <section class=\\\"mat-typography\\\">\\r\\n        <h2 class=\\\"color-blue\\\">Issuer Details</h2>\\r\\n      </section>\\r\\n</div>\\r\\n  <div class=\\\"row mb-0\\\">\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Nodal Department <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n        <mat-select name=\\\"DepartmentCode\\\" [(ngModel)]=\\\"model.DepartmentCode\\\" [formControl]=\\\"department\\\" (selectionChange)=\\\"GetSubType(model.DepartmentCode,model.Type,true)\\\">\\r\\n            <mat-option value=\\\"{{ k.DepartmentCode }}\\\" *ngFor=\\\"let k of ddlDepartment\\\">\\r\\n                {{ k.DepartmentTitle }}</mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"department.invalid && department.touched\\\">\\r\\n        Nodal  Department is <strong>required</strong>\\r\\n        </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\">\\r\\n        <mat-label>Document Type <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"Type\\\" [(ngModel)]=\\\"model.Type\\\" [formControl]=\\\"type\\\" (selectionChange)=\\\"checkValid($event.value);GetSubType(model.DepartmentCode,$event.value)\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Code}}\\\" *ngFor=\\\"let item of dDLList?.OrderWithRequiredType\\\">{{item.Name}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"type.invalid && type.touched\\\">\\r\\n         Type is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field  appearance = \\\"outline\\\">\\r\\n        <mat-label> Document Sub Type <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"SubTypeCode\\\" [(ngModel)]=\\\"model.SubTypeCode\\\" [formControl]=\\\"SubType\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of ddlSubType\\\">{{item.Text}}\\r\\n          </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"SubType.invalid && SubType.touched\\\">\\r\\n          Document Sub Type is <strong>required</strong>\\r\\n        </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Sector <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n        <mat-select name=\\\"Sector\\\" [(ngModel)]=\\\"model.Sector\\\" multiple [formControl]=\\\"Sector\\\">\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderSector\\\">{{item.Text}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"Sector.invalid && Sector.touched\\\">\\r\\n          Sector is <strong>required</strong>\\r\\n        </mat-error>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\"  appearance = \\\"outline\\\">\\r\\n        <mat-label>Office</mat-label>\\r\\n        <input matInput name=\\\"Remarks\\\" [(ngModel)]=\\\"loginData.OfficeName\\\" readonly>\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n    <div class=\\\"col l3 xl3 m6 s12\\\">\\r\\n        <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n            <mat-label> District <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n            <mat-select  #DistrictCode [formControl]=\\\"district\\\" [(ngModel)]=\\\"model.DistrictCode\\\">\\r\\n                <mat-option>--Select--</mat-option>\\r\\n                <mat-option value=\\\"{{ k.DistrictCode }}\\\" *ngFor=\\\"let k of ddlDistrict\\\">{{ k.DistrictTitle }} </mat-option>\\r\\n\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n        <mat-error *ngIf=\\\"district.invalid && district.touched\\\">\\r\\n          District is <strong>required</strong>\\r\\n          </mat-error>\\r\\n    </div> -->\\r\\n\\r\\n\\r\\n    <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n      <section class=\\\"mat-typography\\\">\\r\\n          <h2 class=\\\"color-blue\\\">Orders/Circulars/Notification Details</h2>\\r\\n        </section>\\r\\n  </div>\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label> Title/Subject <span style=\\\"color: red\\\">*</span></mat-label>\\r\\n      <textarea matInput placeholder=\\\"Title/Subject\\\"  name=\\\"Title\\\" [(ngModel)]=\\\"model.Title\\\" [formControl]=\\\"title\\\"\\r\\n        ></textarea>\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"title.invalid && title.touched\\\">\\r\\n      Title is <strong>required</strong>\\r\\n    </mat-error>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l12 m12 s12 mb-20 mt-10\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Brief Description </mat-label>\\r\\n        <textarea matInput placeholder=\\\"Brief Description\\\" name=\\\"Description\\\" [(ngModel)]=\\\"model.Description\\\"\\r\\n          [formControl]=\\\"description\\\"  style=\\\"height: 200px;\\\"></textarea>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"description.invalid && description.touched\\\">\\r\\n        Brief Description is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDocumentNoMandatory!=this.orderDocumentNoValidationEnum.No\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Document No. <span style=\\\"color: red\\\" *ngIf=\\\"orderTypeData?.IsDocumentNoMandatory===this.orderDocumentNoValidationEnum.Yes\\\">*</span></mat-label>\\r\\n      <input matInput placeholder=\\\"12DD\\\" name=\\\"OrderNo\\\" [(ngModel)]=\\\"model.OrderNo\\\">\\r\\n      </mat-form-field>\\r\\n      </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDateMandatory\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Date of Issue <span style=\\\"color: red\\\">*</span>\\r\\n\\r\\n      </mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker1\\\" (focus)=\\\"picker1.open()\\\" readonly placeholder=\\\"Issue Date\\\" name=\\\"Date\\\"\\r\\n        id=\\\"Date\\\" [(ngModel)]=\\\"model.Date\\\" [max]=\\\"tomorrow\\\" [formControl]=\\\"date\\\" (ngModelChange)=\\\"modelChanged()\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker1\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker1></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n    <mat-error *ngIf=\\\"date.invalid && date.touched\\\">\\r\\n      Date of Issue is <strong>required</strong>\\r\\n    </mat-error>\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"orderTypeData?.IsDateMandatory\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>With Affect From (Date)\\r\\n      </mat-label>\\r\\n      <input matInput [matDatepicker]=\\\"picker\\\" (focus)=\\\"picker.open()\\\" readonly placeholder=\\\"With Affect From (Date)\\\"\\r\\n        name=\\\"EffectForm\\\" id=\\\"EffectForm\\\" [min]=\\\"model.Date\\\" [(ngModel)]=\\\"model.EffectForm\\\">\\r\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n      <mat-datepicker #picker></mat-datepicker>\\r\\n    </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n  <!-- <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Departments Affected</mat-label>\\r\\n      <mat-select name=\\\"DepartmentEffected\\\" [(ngModel)]=\\\"model.DepartmentEffected\\\" multiple>\\r\\n\\r\\n          <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectAll()\\\">\\r\\n              <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"selectedAll>0 || model?.DepartmentEffected?.length==dDLList?.ddlDepartment?.length\\\"> SelectAll </mat-checkbox>\\r\\n          </mat-option>\\r\\n        <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlDepartment\\\">{{item.Text}} </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div> -->\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>Previous Document Reference No</mat-label>\\r\\n      <input matInput placeholder=\\\"Previous Document Reference No\\\" name=\\\"ReferenceNumber\\\"\\r\\n        [(ngModel)]=\\\"model.ReferenceNumber\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>File no.</mat-label>\\r\\n      <input matInput placeholder=\\\"File Number\\\" name=\\\"File Number\\\" [(ngModel)]=\\\"model.FileNumber\\\">\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label mb-20\\\"  aria-label=\\\"Select an option\\\"  [(ngModel)]=\\\"model.LinkToScheme\\\" name=\\\"LinkToScheme\\\"  >\\r\\n      <mat-label class=\\\"mr-5\\\" style=\\\"display: inline;\\\">Linked To Scheme(If Any) </mat-label>\\r\\n      <mat-radio-button class=\\\"mr-5\\\" value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.RadioLinkedToScheme;let i = index\\\" >{{item.Text}}</mat-radio-button>\\r\\n    </mat-radio-group>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" >\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>Beneficiary Category</mat-label>\\r\\n      <mat-select name=\\\"BeneficiaryCategory\\\"  [(value)]='model.BeneficiaryCategory' [(ngModel)]=\\\"model.BeneficiaryCategory\\\" multiple>\\r\\n          <!-- <mat-option disabled=\\\"disabled\\\" (click)=\\\"selectBenificiaryAll()\\\">\\r\\n              <mat-checkbox [disabled]=\\\"true\\\" [checked]=\\\"selectedBenAll>0 || model?.BeneficiaryCategory?.length==dDLList?.ddlBeneficiaryCategory?.length\\\"> SelectAll </mat-checkbox>\\r\\n          </mat-option> -->\\r\\n        <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlBeneficiaryCategory\\\">{{item.Text}}\\r\\n        </mat-option>\\r\\n      </mat-select>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Remarks</mat-label>\\r\\n        <input matInput placeholder=\\\"Remarks if any\\\" name=\\\"Remarks\\\" [(ngModel)]=\\\"model.Remarks\\\">\\r\\n      </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col l12 xl12 m12 s12 mat-list-n-d\\\" *ngIf=\\\"model.LinkToScheme==orderEnum.LinkToScheme\\\">\\r\\n      <mat-label class=\\\"cc-ref\\\">Scheme<mat-checkbox (change)=\\\"showAllScheme($event);\\\"> Show All Scheme </mat-checkbox>\\r\\n      </mat-label>\\r\\n      <mat-selection-list  [(ngModel)]=\\\"model.BenificiarySchemeIds\\\" (selectionChange)=\\\"onSelection()\\\" >\\r\\n                <mat-list-option [value]=\\\"item.Value\\\" *ngFor=\\\"let item of dDLList?.ddlSchemeName ;let i = index\\\">\\r\\n                  <span> {{ i+1 }} <span>. </span> {{ item.Text}}</span>\\r\\n                                  </mat-list-option>\\r\\n      </mat-selection-list>\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l8 xl8 m8 s12\\\" *ngIf=\\\"model.LinkToScheme==orderEnum.LinkToScheme\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance = \\\"outline\\\">\\r\\n      <mat-label>Individual Beneficiary Scheme</mat-label>\\r\\n      <textarea matInput placeholder=\\\"Individual Beneficiary Scheme\\\" name=\\\"IndividualBeneficiaryScheme\\\"\\r\\n        [(ngModel)]=\\\"model.IndividualBeneficiaryScheme\\\">\\r\\n      </textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" *ngIf=\\\"false\\\">\\r\\n    <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n      <mat-label>URL (Reference Link)</mat-label>\\r\\n      <input matInput placeholder=\\\"References Link\\\" name=\\\"ReferenceLink\\\" [(ngModel)]=\\\"model.ReferenceLink\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n  </div>\\r\\n  <div class=\\\"col l4 xl4 m6 s12\\\" style=\\\"display: none;\\\">\\r\\n    <mat-radio-group class=\\\"example-full-width radio-bx-custom radio-bx-custom-with-label mb-20\\\" disabled=\\\"true\\\"\\r\\n    aria-label=\\\"Select an option\\\" [(ngModel)]=\\\"model.IssueBy\\\" name=\\\"IssueBy\\\">\\r\\n    <mat-label class=\\\"mr-5\\\">Order Issue By </mat-label>\\r\\n    <mat-radio-button class=\\\"mr-5\\\"  [checked]=\\\"item.Value === model.IssueBy\\\" value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderIssueBy;let i = index\\\">{{item.Text}}</mat-radio-button>\\r\\n  </mat-radio-group>\\r\\n\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m4 s12\\\">\\r\\n        <div class=\\\"upload-btn-wrapper\\\">\\r\\n          <label>Attachment(Pdf Only) </label>\\r\\n          <span style=\\\"color: red\\\">{{fileSizeValidationMsg}}</span>\\r\\n          <input type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\" accept=\\\"application/pdf\\\" multiple>\\r\\n        </div>\\r\\n\\r\\n        <ul class=\\\"image-list\\\">\\r\\n        <li *ngFor=\\\"let url of documentUrlList; let i = index;\\\">\\r\\n\\r\\n          <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" (click)=\\\"downloadPdf(url?.Url,url.DisplayName)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n            {{ url.DisplayName}}\\r\\n          </a>\\r\\n          <a title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(i)\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n          </a>\\r\\n          <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" /></div>\\r\\n\\r\\n        </li>\\r\\n      </ul>\\r\\n\\r\\n        <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">{{fileValidationMsg}}</mat-error>\\r\\n      </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n        <div class=\\\"col l12 xl12 m12 s12\\\">\\r\\n            <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n              <mat-label> Search criteria keyword</mat-label>\\r\\n              <textarea matInput placeholder=\\\"Search keyword\\\" name=\\\"SearchCriteria\\\" [(ngModel)]=\\\"model.SearchCriteria\\\" [formControl]=\\\"searchCriteria\\\"  ></textarea>\\r\\n            </mat-form-field>\\r\\n            <mat-error *ngIf=\\\"searchCriteria.errors?.minlength || (searchCriteria.invalid && searchCriteria.touched)\\\">\\r\\n              Search criteria keyword must be at least 50 characters long.\\r\\n         </mat-error>\\r\\n\\r\\n          </div>\\r\\n      <div class=\\\"col l12 m12 s12 mb-20\\\">\\r\\n          <section class=\\\"mat-typography\\\">\\r\\n              <h2 class=\\\"color-blue mb-0\\\">Linked with (Budget/CM Announcement/CM Directions/Jan Ghoshna Patra)</h2>\\r\\n            </section>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"row highlight_view btn_add_box\\\">\\r\\n\\r\\n    <div class=\\\"col l4 xl4 m6 s12\\\">\\r\\n      <mat-form-field  appearance=\\\"outline\\\">\\r\\n        <mat-label>Module</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"orderRelatedTo.ModuleId\\\">\\r\\n          <mat-option >--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderModuleName\\\">{{item.Text}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col l4 x8 m4 s12\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Year </mat-label>\\r\\n\\r\\n        <mat-select [(ngModel)]=\\\"orderRelatedTo.YearValue\\\">\\r\\n          <mat-option >--Select--</mat-option>\\r\\n          <!-- <mat-option value=\\\"{{item.rowno}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToYear\\\">{{item.particulars}} </mat-option> -->\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlCMISBudgetYear\\\">\\r\\n            {{item.Text}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col l4 x8 m4 s12  pos_relative\\\">\\r\\n      <mat-form-field class=\\\"example-full-width\\\" appearance=\\\"outline\\\">\\r\\n        <mat-label>Department</mat-label>\\r\\n        <mat-select [(ngModel)]=\\\"orderRelatedTo.DepartmentId\\\">\\r\\n          <mat-option >--Select--</mat-option>\\r\\n          <!-- <mat-option value=\\\"{{item.prj_dept}}\\\" *ngFor=\\\"let item of dDLList?.ddlOrderRelatedToDepartment\\\">{{item.particulars}} </mat-option> -->\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlDepartmentForCMISReport\\\">\\r\\n            {{item.Text}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <div class=\\\"d-inline\\\" *ngIf=\\\"model?.RelatedToOrderParameterList?.length <5\\\"><a class=\\\"btn_add\\\" href=\\\"javascript:void(0)\\\"\\r\\n        (click)=\\\"AddMoreItems()\\\">\\r\\n        <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">add</mat-icon>\\r\\n      </a></div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l12 m12 s12\\\">\\r\\n      <table class=\\\"table new_table table_border mb-20\\\" *ngIf=\\\"model?.RelatedToOrderParameterList?.length>0\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th scope=\\\"col\\\">#</th>\\r\\n            <th scope=\\\"col\\\" colspan=\\\"3\\\">Details</th>\\r\\n            <th scope=\\\"col\\\" width=\\\"100\\\">Action</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let item of model?.RelatedToOrderParameterList; let i = index\\\" [attr.data-index]=\\\"i\\\">\\r\\n              <th scope=\\\"row\\\">{{i+1}}</th>\\r\\n              <td colspan=\\\"3\\\">\\r\\n                <div class=\\\"footer-info-bx\\\">\\r\\n\\r\\n                    <div class=\\\"d-inline\\\"> <strong>Module: </strong><span  *ngIf=\\\"item?.ModuleId\\\">{{moduleNameItems[item?.ModuleId]}}</span><span  *ngIf=\\\"!item?.ModuleId\\\">--</span> </div>\\r\\n                    <div class=\\\"d-inline\\\"> <strong>Year: </strong><span  *ngIf=\\\"item?.YearValue\\\">{{yearItems[item?.YearValue]}}</span><span  *ngIf=\\\"!item?.YearValue\\\">--</span> </div>\\r\\n                    <div class=\\\"d-inline\\\"> <strong>Department: </strong><span  *ngIf=\\\"item?.DepartmentId\\\">{{departmentItems[item?.DepartmentId]}}</span><span  *ngIf=\\\"!item?.DepartmentId\\\">--</span> </div>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"footer-info-bx\\\" *ngIf=\\\"item.RelatedToResult\\\">\\r\\n\\r\\n                      <div class=\\\"d-inline\\\" *ngIf=\\\"item.RelatedToResult.prj_description\\\"><strong>Description:</strong>\\r\\n                        {{item.RelatedToResult.prj_description}}</div>\\r\\n\\r\\n                    </div>\\r\\n                </td>\\r\\n                <td class=\\\"action_icon\\\"><a  class=\\\"del-icon\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"RemoveClick(i)\\\">\\r\\n                    <mat-icon aria-hidden=\\\"false\\\" aria-label=\\\"Example home icon\\\">delete</mat-icon>\\r\\n                  </a>\\r\\n                  <a class=\\\"get-icon\\\" href=\\\"javascript:void(0)\\\"\\r\\n                  (click)=\\\"GetRelatedToResult(item.ModuleName,item.DepartmentId,item.DepartmentName,item.YearText,i)\\\">Budget Details</a>\\r\\n                </td>\\r\\n\\r\\n          </tr>\\r\\n\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n\\r\\n  <div class=\\\"col l12 x8 m4 s12 \\\">\\r\\n    <button mat-button class=\\\"btn-submit\\\" (click)=\\\"Saveclick()\\\">Submit</button>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"\\r\\n\\r\\n  <div class=\\\"row mb-0\\\">\\r\\n    <div *ngIf=\\\"newmodel\\\">\\r\\n      <td>\\r\\n        <section class=\\\"mat-typography\\\">\\r\\n          <h2 class=\\\"color-blue\\\">Date :</h2>\\r\\n        </section>\\r\\n      </td>\\r\\n      <td>\\r\\n        <section class=\\\"mat-typography\\\">\\r\\n          <h3 class=\\\"color-grey\\\">{{ newmodel.Date| date: 'dd/MM/yyyy'}}</h3>\\r\\n        </section>\\r\\n      </td>\\r\\n      <td>\\r\\n        <section class=\\\"mat-typography\\\">\\r\\n          <h2 class=\\\"color-blue\\\">Order No :</h2>\\r\\n        </section>\\r\\n      </td>\\r\\n      <td>\\r\\n        <section class=\\\"mat-typography\\\">\\r\\n          <h3 class=\\\"color-grey\\\">{{ newmodel.OrderNo}}</h3>\\r\\n        </section>\\r\\n      </td>\\r\\n    </div>\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n\\r\\n      <mat-form-field>\\r\\n        <mat-label>Order <span style=\\\"color: red\\\">*</span> </mat-label>\\r\\n        <mat-select name=\\\"OrderId\\\" [(ngModel)]=\\\"model.OrderId\\\" [formControl]=\\\"orderId\\\">\\r\\n          <mat-option>--Select--</mat-option>\\r\\n          <mat-option value=\\\"{{item.Value}}\\\" *ngFor=\\\"let item of dDLList?.ddlEntry\\\">{{item.Text}} </mat-option>\\r\\n        </mat-select>\\r\\n      </mat-form-field>\\r\\n      <mat-error *ngIf=\\\"orderId.invalid && orderId.touched\\\">\\r\\n        Order is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"col l6 xl6 m6 s12\\\">\\r\\n      <div class=\\\"upload-btn-wrapper\\\">\\r\\n        <label>Attach Order <span style=\\\"color: red\\\">*</span></label>\\r\\n        <input type=\\\"file\\\" id=\\\"file\\\" [formControl]=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\"\\r\\n          accept=\\\"image/*,application/pdf\\\" multiple>\\r\\n  \\r\\n      </div>\\r\\n      <mat-error *ngIf=\\\"file.invalid && file.touched\\\">\\r\\n        Attach is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      <ul class=\\\"image-list\\\">\\r\\n        <li *ngFor=\\\"let url of documentUrlList; let i=index;\\\">\\r\\n  \\r\\n          <!-- <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" href=\\\"{{url?.Url}}\\\" target=\\\"_blank\\\">\\r\\n            {{ url.DisplayName}}\\r\\n          </a> -->\\r\\n          <a *ngIf=\\\"url.Extension?.toLowerCase()=='pdf'\\\" (click)=\\\"downloadPdf(url?.Url,url.DisplayName)\\\" href=\\\"JavaScript:Void(0);\\\">\\r\\n              {{ url.DisplayName}}\\r\\n            </a>\\r\\n            <a title=\\\"Remove\\\" (click)=\\\"RemoveImageFile(i)\\\">\\r\\n              <mat-icon>delete</mat-icon>\\r\\n            </a>\\r\\n          <div *ngIf=\\\"url.Extension?.toLowerCase()!='pdf'\\\"> <img [src]=\\\"url?.Url\\\" /></div>\\r\\n  \\r\\n        </li>\\r\\n      </ul>\\r\\n  \\r\\n      <mat-error *ngIf=\\\"fileValidationMsg?.length>0\\\" style=\\\"margin: 0px;position: relative;\\\">{{fileValidationMsg}}\\r\\n      </mat-error>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col l12 x8 m4 s12\\\" style=\\\" margin-bottom: 20px !important;\\\">\\r\\n      <button mat-button class=\\\"btn-submit\\\" (click)=\\\"saveclick()\\\">Submit</button>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n \\r\\n\\r\\n\\r\\n  \\r\\n\\r\\n\"","export enum GenerateOrderEnum {\r\n  DefaultEnglish = 0,\r\n  TypeCircularCode= 2\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { DepartmentSetupModel } from \"./Master/department-setup.model\";\r\nimport { PagedData } from './general-model';\r\n\r\nexport class OrderGenerateMasterListModel {\r\n  Id: number;\r\n  Title: string;\r\n  TypeName: string;\r\n  Description: string;\r\n  OrderNo: string;\r\n  IsLock: boolean;\r\n  IsActive: boolean;\r\n  IsSaveAsDraft: boolean;\r\n  CreatedDate: Date;\r\n  IsApprove: boolean;\r\n  ESignedUrl1: string;\r\n  ESignedUrl2: string;\r\n  ESignedUrl3: string;\r\n  ESignedUrl4: string;\r\n  ESignedUrl5: string;\r\n  ESignedFinalUrl: string;\r\n  DepartmentTitle: string;\r\n  Date: Date;\r\n  DepartmentCode: number;\r\n  IsCancel: boolean;\r\n  ModifiedDate: Date;\r\n  ModifiedBy: string;\r\n  SectorIds: number;\r\n  SectorName: string;\r\n  ModifiedName: string;\r\n  SubTypeCode: number;\r\n  SubTypeName: string;\r\n  BeneficiaryCategoryIds: number;\r\n\tBeneficiaryCategoryName: string;\r\n}\r\n\r\nexport class OrderGenerateAuthorityListModel {\r\n  Id: number;\r\n  Title: string;\r\n  TypeName: string;\r\n  OrderNo: string;\r\n  IsLock: boolean;\r\n  IsActive: boolean;\r\n  IsSaveAsDraft: boolean;\r\n  CreatedDate: Date;\r\n  IsApprove: boolean;\r\n  ESignedFinalUrl: string;\r\n  ESignedUrl1: string;\r\n  ESignedUrl2: string;\r\n  ESignedUrl3: string;\r\n  ESignedUrl4: string;\r\n  ESignedUrl5: string;\r\n  DepartmentTitle: string;\r\n  Date: Date;\r\n  IsCancel: boolean;\r\n}\r\n\r\nexport class OrderGenerateMasterModel {\r\n  Id: number;\r\n  Type: string | number;\r\n  Date: Date;\r\n  OrderNo: string;\r\n  Title: string;\r\n  Description: string;\r\n  EffectForm: Date;\r\n  ReferenceLink: string;\r\n  IssueBy: number | string;\r\n  IndividualBeneficiaryScheme: string;\r\n  OrderRemarks: string;\r\n  ReferenceNumber: string;\r\n  DepartmentCode: number | string;\r\n  SearchCriteria: string;\r\n  FileNumber: string;\r\n  LinkToScheme: string | number;\r\n  Subject: string;\r\n  Reference: string;\r\n  Context: string;\r\n  Content: string;\r\n  AuthoritySignatureCode: number | string;\r\n  CCSignatureCode: string | number;\r\n  OrdGenrateRemarks: string;\r\n  AddressTo: string;\r\n  IsHindi: boolean;\r\n  IsSaveAsDraft: boolean;\r\n  RelatedToOrderParameterList: OrderRelatedToParameterModelLookup[] = []; //\r\n  DepartmentEffectedCodes: number[] | string[];\r\n  SectorCodes: number[] | string[];\r\n  AttachmentList: AttachmentsLookupModel[] = []; //\r\n  CCReferenceList: number[]; //\r\n  CCReferenceListText: string;\r\n  CCCategoryCode: string | number;\r\n  IsByOrderOfGovernor: boolean;\r\n  IsByOrderOfGovernortext: string;\r\n  SubTypeCode: number | string;\r\n  IsCancel: boolean;\r\n  IsWithinSecretariat: boolean;\r\n  DistrictCode: number| string;\r\n  OfficeCode: number;\r\n}\r\n\r\nexport class OrderGenerateMasterViewModel {\r\n  Id: number;\r\n  Type: string | number;\r\n  Date: Date;\r\n  OrderNo: string;\r\n  Title: string;\r\n  Description: string;\r\n  EffectForm: Date;\r\n  ReferenceLink: string;\r\n  IssueBy: number;\r\n  IndividualBeneficiaryScheme: string;\r\n  OrderRemarks: string;\r\n  ReferenceNumber: string;\r\n  DepartmentCode: number;\r\n  SearchCriteria: string;\r\n  FileNumber: string;\r\n  LinkToScheme: string | number;\r\n  Subject: string;\r\n  Reference: string;\r\n  Context: string;\r\n  Content: string;\r\n  AuthoritySignatureCode: number | string;\r\n  CCSignatureCode: string | number;\r\n  OrdGenrateRemarks: string;\r\n  AddressTo: string;\r\n  IsHindi: boolean;\r\n  IsSaveAsDraft: boolean;\r\n  IsLock: boolean;\r\n  LinkToSchemeName: string;\r\n  AuthoritySignatureCodeName: string;\r\n  CCSignatureCodeName: string;\r\n  TypeName: string;\r\n  IssueByName: string;\r\n  DepartmentTitle: string;\r\n  IsCancel: boolean;\r\n  IsWithinSecretariat: boolean;\r\n  DepartmentEffectedIds: string;\r\n  DepartmentEffectedName: string;\r\n  SectorIds: string;\r\n  SectorName: string;\r\n  RelatedToOrderParameterList: OrderRelatedToParameterModelLookup[] = []; //\r\n  AttachmentList: AttachmentsLookupModel[] = []; //\r\n  CCReferenceList: number[]; //\r\n  CCReferenceListIds: number[];\r\n  DepartmentSetupList: DepartmentSetupModel;\r\n  CCCategoryCode: string | number;\r\n  IsByOrderOfGovernor: boolean;\r\n  IsByOrderOfGovernortext: string;\r\n  SubTypeCode: number | string;\r\n  CCReferenceListText: string;\r\n  DistrictCode: number;\r\n  OfficeCode: number;\r\n}\r\n\r\nexport class AttachmentsLookupModel {\r\n  Id: number;\r\n  AttachmentUrl: string;\r\n  Description: string;\r\n  IsAnnexure: boolean;\r\n  IsPdf: boolean;\r\n  constructor(){\r\n    this.IsAnnexure = false;\r\n  }\r\n}\r\n\r\nexport class CorrespondenceCopyReferenceLookupModel {\r\n  Id: number;\r\n  ReferenceCode: number;\r\n  ReferenceText: string;\r\n}\r\n\r\nexport class OrderRelatedToParameterModelLookup {\r\n  Id: number;\r\n  ModuleId: string;\r\n  ModuleName: string;\r\n  DepartmentId: string;\r\n  DepartmentName: string;\r\n  YearValue: string;\r\n  YearText: string;\r\n  RelatedToResult: OrderRelatedToResultModelLookup;\r\n  constructor() {\r\n    this.Id = 0;\r\n    this.ModuleId = \"\";\r\n    this.ModuleName = \"\";\r\n    this.DepartmentId = \"\";\r\n    this.DepartmentName = \"\";\r\n    this.YearValue = \"\";\r\n    this.YearText = \"\";\r\n    this.RelatedToResult = new OrderRelatedToResultModelLookup();\r\n  }\r\n}\r\n\r\nexport class OrderRelatedToResultModelLookup {\r\n  pm_projecthdrid: string;\r\n  modulename: string;\r\n  prj_year: string;\r\n  prj_dept: string;\r\n  prj_ndept: string;\r\n  parano: string;\r\n  filenumber: string;\r\n  prj_description: string;\r\n  rowno: number;\r\n  CMISNewTransCoreId:number;\r\n  constructor() {\r\n    this.pm_projecthdrid = \"\";\r\n    this.modulename = \"\";\r\n    this.prj_year = \"\";\r\n    this.prj_dept = \"\";\r\n    this.prj_ndept = \"\";\r\n    this.parano = \"\";\r\n    this.filenumber = \"\";\r\n    this.prj_description = \"\";\r\n    this.CMISNewTransCoreId=0;\r\n  }\r\n}\r\n\r\nexport class OrderRelatedToViewModelLookup {\r\n  Id: number;\r\n  rowno: number;\r\n  OrderEntryID: number;\r\n  ModuleId: string;\r\n  ModuleName: string;\r\n  DepartmentId: string;\r\n  DepartmentName: string;\r\n  YearValue: string;\r\n  YearText: string;\r\n  RelatedToParameterID: number;\r\n  pm_projecthdrid: string;\r\n  modulename: string;\r\n  prj_year: string;\r\n  prj_dept: string;\r\n  prj_ndept: string;\r\n  parano: string;\r\n  filenumber: string;\r\n  prj_description: string;\r\n}\r\n\r\nexport class GeneratedPdfModel {\r\n  Url: string;\r\n}\r\n\r\nexport class ReferencyNotificationResponseModel {\r\n  IsEmail: boolean;\r\n  OrderId: number;\r\n}\r\n\r\nexport class ESignPdfModel {\r\n  Id: number;\r\n  AdharNo: string;\r\n}\r\n\r\nexport class OrderFinalAProvalListModel{\r\n  Id: number;\r\n  Title: string;\r\n  TypeName: string;\r\n  OrderNo: string;\r\n  IsLock: boolean;\r\n  IsActive: boolean;\r\n  IsSaveAsDraft: boolean;\r\n  CreatedDate: Date;\r\n  IsApprove: boolean;\r\n  ESignedFinalUrl: string;\r\n  ESignedUrl5: string;\r\n  DepartmentTitle: string;\r\n  Date: Date;\r\n  IsCancel: boolean;\r\n}\r\n\r\n\r\n\r\nexport class TemplateVerifyModel {\r\n  NotificationType: number;\r\n  TypeCode: number;\r\n  ModuleName: number;\r\n  FilterId: number;\r\n}\r\n\r\n//#region <Order Report>\r\n\r\nexport class OrderSummaryReportModel {\r\n  DepartmentCode: number;\r\n  TypeCode: number;\r\n  SubTypeCode: number;\r\n  OrderCount: number;\r\n  DepartmentTitle: string;\r\n  Type: string;\r\n  SubType: string;\r\n  ActiveOrderCount: number;\r\n  DeActiveOrderCount: number;\r\n\r\n}\r\n\r\nexport class OrderSummaryReportWithLastTransactionModel {\r\n  DepartmentCode: number;\r\n  TypeCode: number;\r\n  SubTypeCode: number;\r\n  OrderCount: number;\r\n  DepartmentTitle: string;\r\n  Type: string;\r\n  SubType: string;\r\n  ActiveOrderCount: number;\r\n  DeActiveOrderCount: number;\r\n  LastTransactionDate: Date;\r\n}\r\n\r\nexport class OrderSummaryTypeReportWithLastTransactionModel {\r\n  DepartmentCode: number;\r\n  TypeCode: number;\r\n  OrderCount: number;\r\n  DepartmentTitle: string;\r\n  Type: string;\r\n  ActiveOrderCount: number;\r\n  DeActiveOrderCount: number;\r\n  LastTransactionDate: string;\r\n}\r\n\r\nexport class OrderSummaryReportFilterModel {\r\n  DepartmentCode: number|string;\r\n  CreatedFromDate: string;\r\n  CreatedToDate: string;\r\n  AdminDepartmentCode: number|string;\r\n  constructor(){\r\n    this.AdminDepartmentCode=String(0);\r\n  }\r\n}\r\n\r\n//#endregion <Order Report>\r\n\r\n\r\n\r\n\r\n","export class CancellationLookupModel {\r\n  Id: number;\r\n  OrderId: number;\r\n  Remarks: string;\r\n  Reason: number;\r\n  IsAutoEmail: boolean;\r\n  IsAutoSMS: boolean;\r\n  constructor(){\r\n    this.IsAutoEmail = false;\r\n    this.IsAutoSMS = false;\r\n  }\r\n}\r\n\r\nexport class DepartmentSetupCancellationModel {\r\n  IsAutoEmail: boolean;\r\n  IsAutoSMS: boolean;\r\n  constructor(){\r\n    this.IsAutoEmail = false;\r\n    this.IsAutoSMS = false;\r\n  }\r\n}\r\n","import { ESignPdfModel } from './../Model/generate-order.model';\r\nimport { Injectable } from '@angular/core';\r\nimport { BaseService } from 'src/app/Shared/Service/base.service';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { IndexModel } from '../Model/general-model';\r\nimport { OrderGenerateMasterModel, ReferencyNotificationResponseModel } from '../Model/generate-order.model';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class GenerateOrderService {\r\n\r\n  constructor(\r\n    private readonly _baseService: BaseService,\r\n  ) {\r\n  }\r\n  GetList(model: IndexModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateOrderListUrl, model);\r\n    return result;\r\n  }\r\n\r\n  GetAuthorityList(model: IndexModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateOrderAuthorityListUrl, model);\r\n    return result;\r\n  }\r\n\r\n  Add(model: OrderGenerateMasterModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateOrderAddUrl, model);\r\n    return result;\r\n  }\r\n\r\n  GetById(id) {\r\n    var result = this._baseService.get(AppSetting.GenerateOrderGetByIdUrl + id, null);\r\n    return result;\r\n  }\r\n\r\n  Edit(model: OrderGenerateMasterModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateOrderEditUrl, model\r\n    );\r\n    return result;\r\n  }\r\n\r\n  Lock(id) {\r\n    var result = this._baseService.get(AppSetting.GenerateOrderLock + id, null);\r\n    return result;\r\n  }\r\n\r\n  SetStatus(id,dispatchNo) {\r\n    var result = this._baseService.get(AppSetting.GenerateOrderSetStatus + id + '&dispatchNo=' + dispatchNo, null);\r\n    return result;\r\n  }\r\n\r\n  GeneratePdf(id: number) {\r\n    var result = this._baseService.get(AppSetting.GenerateOrderPdfUrl+id);\r\n    return result;\r\n  }\r\n\r\n  GenerateWithEsignPdf(model: ESignPdfModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateWithEsignPdfUrl,model);\r\n    return result;\r\n  }\r\n\r\n  GenerateWord(id: number) {\r\n    var result = this._baseService.get(AppSetting.GenerateOrderWordUrl+id);\r\n    return result;\r\n  }\r\n\r\n  GenerateUINumber(id: number) {\r\n    var result = this._baseService.get(AppSetting.GenerateUINumberUrl+id);\r\n    return result;\r\n  }\r\n\r\n  SendNotification(model: ReferencyNotificationResponseModel) {\r\n    var result = this._baseService.post(AppSetting.GenerateSendNotificationUrl, model\r\n    );\r\n    return result;\r\n  }\r\n\r\n  SetFinalAProval(id: number) {\r\n    var result = this._baseService.get(AppSetting.GeneratSetFinalAProvalUrl+id);\r\n    return result;\r\n  }\r\n\r\n  GetFinalApprovalList(model: IndexModel) {\r\n    var result = this._baseService.post(AppSetting.GeneratFinalAprovalListUrl, model\r\n    );\r\n    return result;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BaseService } from './base.service';\r\nimport { AppSetting } from '../Model/appsetting';\r\nimport { CancellationLookupModel } from '../Model/order-cancellation.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderCancellationService {\r\n\r\n  constructor(private readonly _baseService: BaseService, ) { }\r\n\r\n  SaveCancellationOrder(model: CancellationLookupModel) {\r\n    return this._baseService.post(AppSetting.SaveCancellationOrderURL, model);\r\n  }\r\n\r\n  GetByLoggedInDepartment() {\r\n    return this._baseService.get(AppSetting.GetByLoggedInDepartmentURL);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { BaseService } from \"./base.service\";\r\nimport { AppSetting } from \"../Model/appsetting\";\r\nimport {\r\n  OrderEntryModel,\r\n  UploadAttachmentModel,\r\n  CustomDateSearchModel,\r\n  OrderReportSearchModel,\r\n  DepartmentCategoryReportFilterModel,\r\n} from \"../Model/orderlist.model\";\r\nimport { IndexModel, DateWiseSearchModel } from \"../Model/general-model\";\r\nimport { OrderSummaryReportFilterModel, OrderSummaryTypeReportWithLastTransactionModel } from '../Model/generate-order.model';\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class OrderEntryService {\r\n  constructor(private readonly _baseService: BaseService) {}\r\n\r\n  GetOrderEntryList(model: CustomDateSearchModel) {\r\n    var result = this._baseService.post(AppSetting.RelatedToOrderUrl, model);\r\n    return result;\r\n  }\r\n\r\n  AddOrderEntry(model: OrderEntryModel) {\r\n    var result = this._baseService.post(AppSetting.OrderEntryUrl, model);\r\n    return result;\r\n  }\r\n\r\n  DeleteOrder(id) {\r\n    var result = this._baseService.get(AppSetting.OrderDeleteUrl + id);\r\n    return result;\r\n  }\r\n\r\n  GetByID(id) {\r\n    var result = this._baseService.get(AppSetting.OrderByIdUrl + id, null);\r\n    return result;\r\n  }\r\n\r\n  SetStatus(id) {\r\n    var result = this._baseService.get(AppSetting.OrderSetStatusUrl + id);\r\n    return result;\r\n  }\r\n\r\n  UploadAttachment(model: UploadAttachmentModel) {\r\n    var result = this._baseService.post(\r\n      AppSetting.OrderUploadAttachmentUrl,\r\n      model\r\n    );\r\n    return result;\r\n  }\r\n\r\n  LockToggle(id) {\r\n    var result = this._baseService.get(AppSetting.OrderLockUrl + id);\r\n    return result;\r\n  }\r\n\r\n  //start\r\n  //this method for order report list\r\n  GetOrderReportList(model : DepartmentCategoryReportFilterModel) {\r\n    var result = this._baseService.post(AppSetting.OrderReportApiUrl, model);\r\n    return result;\r\n  }\r\n\r\n  OrderDetailReport(model: OrderReportSearchModel) {\r\n    return this._baseService.post(AppSetting.OrderDetailReportApiUrl, model);\r\n  }\r\n  //end\r\n\r\n//#region <order report>\r\n\r\nGetOrderSummaryReport(model: OrderSummaryReportFilterModel) {\r\n  return this._baseService.post(AppSetting.OrderSummaryReportUrl, model);\r\n}\r\n\r\nGetOrderSummaryReportWithLastTransaction(model: OrderSummaryReportFilterModel) {\r\n  return this._baseService.post(AppSetting.OrderSummaryReportWithLastTransactionUrl, model);\r\n}\r\n\r\nGetOrderTypeSummaryReportWithLastTransaction(model: OrderSummaryReportFilterModel) {\r\n  return this._baseService.post(AppSetting.GetOrderTypeSummaryReportWithLastTransaction, model);\r\n}\r\n\r\nGetOrderDepartmentCountReport(model: DateWiseSearchModel) {\r\n  var result = this._baseService.post(AppSetting.GetOrderDepartmentCountReport, model);\r\n  return result;\r\n}\r\n//#endregion <order report>\r\n\r\n//#region\r\n\r\nExportGovernmentDocumentData(model: CustomDateSearchModel) {\r\n  var result = this._baseService.post(AppSetting.ExportGovernmentDocumentDataUrl, model);\r\n  return result;\r\n}\r\n\r\n//#endregion\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvYWRkLW9sZC1vcmRlci9hZGQtb2xkLW9yZGVyLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl } from '@angular/forms';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport {\r\n  OrderEntryModel,\r\n  OrderRelatedToModel,\r\n  OrderRelatedToModelResult,\r\n  OrderAttachmentModel,\r\n  OrderTypeMasterModel\r\n} from 'src/app/Shared/Model/orderlist.model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { GlobalMessagesModel } from 'src/app/Shared/Model/common.messages';\r\nimport { DDLModel, DdlItemModel, DocumentUrlModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { Router } from '@angular/router';\r\nimport { error } from 'util';\r\nimport {\r\n  RequestServiceModel,\r\n  ResponseServiceModel,\r\n  ResponseListModel,\r\n  RequestDialogModel,\r\n  ResponseDialogModel\r\n} from 'src/app/Shared/Model/service.model';\r\nimport { MatDialog, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { RelatedtoDialogComponent } from '../relatedto-dialog/relatedto-dialog.component';\r\n\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\nimport { CommonDocModel, ConnectWithCMISFilterModel } from 'src/app/Shared/Model/general-model';\r\nimport { OrderEnum, OrderDocumentNoValidationEnum } from 'src/app/Shared/Enum/order.enum';\r\nimport { UserDepartmentViewModel, UserViewModel, UserDistrictViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { StatusEnum } from 'src/app/Shared/Enum/scheme.enum';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-add-old-order',\r\n  templateUrl: './add-old-order.component.html',\r\n  styleUrls: ['./add-old-order.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class AddOldOrderComponent implements OnInit {\r\n  dDLList: DDLModel;\r\n  model: OrderEntryModel;\r\n  relatedToOrderList: DdlItemModel[] = [];\r\n  ServiceModel: RequestServiceModel;\r\n  helpDocumentEnum = HelpDocumentEnum;\r\n  orderEnum = OrderEnum;\r\n  ddlSubType: DdlItemModel[] = [];\r\n  //helpDocument: string;\r\n  responseReqModel: ConnectWithCMISFilterModel;\r\n  tomorrow = new Date();\r\n\r\n  department = new FormControl('', [Validators.required]);\r\n  file = new FormControl('', [Validators.required]);\r\n  orderNo = new FormControl('', [Validators.required]);\r\n  date = new FormControl('', [Validators.required]);\r\n  type = new FormControl('', [Validators.required]);\r\n  title = new FormControl('', [Validators.required]);\r\n  Sector = new FormControl(\"\", [Validators.required]);\r\n  SubType = new FormControl(\"\", [Validators.required]);\r\n  description = new FormControl('', null);\r\n  searchCriteria = new FormControl('', [Validators.required, Validators.minLength(50)]);\r\n  district = new FormControl(null);\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  tempDocumentUrlList: DocumentUrlModel[] = [];\r\n  fileValidationMsg: string;\r\n  orderRelatedTo: OrderRelatedToModel;\r\n  moduleNameItems: { [index: string]: any } = {};\r\n  yearItems: { [index: string]: any } = {};\r\n  departmentItems: { [index: string]: any } = {};\r\n  schemeItems: { [index: string]: any } = {};\r\n  fileSizeValidationMsg: string;\r\n  helpDocument: CommonDocModel;\r\n  loginData: UserViewModel;\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n  ddlDistrict: UserDistrictViewModel[];\r\n  orderTypeData: OrderTypeMasterModel;\r\n  orderDocumentNoValidationEnum = OrderDocumentNoValidationEnum;\r\n  selectedAll = -1;\r\n  selectedBenAll = -1;\r\n  isShowAll: boolean;\r\n  constructor(\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _parentApi: AppComponent,\r\n    private _router: Router,\r\n    private _dialog: MatDialog,\r\n    private readonly _userService: UserService,\r\n    private readonly _authService: AuthenticationService,\r\n\r\n  ) {\r\n    this._parentApi.setpagelayout('Add Government Document  :', 'keyboard_backspace', \"Back To List\", \"order\");\r\n    this.model = new OrderEntryModel();\r\n    this.model.LinkToScheme = String(AppSetting.LinkedToScheme);\r\n    this.model.IsOldOrder = true;\r\n    this.ServiceModel = new RequestServiceModel();\r\n    this.tomorrow.setDate(this.tomorrow.getDate() + 1 - 1);\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n    this.model.IssueBy = AppSetting.OrderIssueByDefault;\r\n    this.fileSizeValidationMsg = \" (Max \" +   localStorage.getItem(\"FileValidation\") + \" MB.)\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.GetDDLList();\r\n    this.GetHelpDocument();\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.model.OfficeCode = Number(this.loginData.OfficeCode);\r\n    this.getDepartment();\r\n    this.getDistrict();\r\n  }\r\n\r\n  getDistrict() {\r\n    this._userService.GetUserDistrict(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDistrict = <UserDistrictViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  selectAll() {\r\n    \r\n    if (this.selectedAll < 0) {\r\n      this.model.DepartmentEffected = this.dDLList.ddlDepartment.map(\r\n        function(a) {\r\n          return a.Value;\r\n        }\r\n      );\r\n      this.selectedAll = 1;\r\n    } else {\r\n      this.selectedAll = -1;\r\n      this.model.DepartmentEffected = [];\r\n    }\r\n  }\r\n\r\n  modelChanged() {\r\n    \r\n    if (!this.model.EffectForm) {\r\n      this.model.EffectForm = this.model.Date;\r\n    }\r\n}\r\n\r\n  selectBenificiaryAll() {\r\n    \r\n    if (this.selectedBenAll < 0) {\r\n      this.model.BeneficiaryCategory = this.dDLList.ddlBeneficiaryCategory.map(\r\n        function(a) {\r\n          return a.Value;\r\n        }\r\n      );\r\n      this.selectedBenAll = 1;\r\n    } else {\r\n      this.selectedBenAll = -1;\r\n      this.model.BeneficiaryCategory = [];\r\n    }\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetSubType(departmentCode: number|string= 0, typecode, isDeptClick= false) {\r\n    \r\n    if (typecode) {\r\n      this._commonService.GetOrderSubTypeByTypeAndDepartment(Number(departmentCode), typecode).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this.ddlSubType = <DdlItemModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlSubType = null;\r\n    }\r\n    if (isDeptClick) {\r\n      this.getSchemeList(this.isShowAll ? 0 : departmentCode);\r\n    }\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderEntry).subscribe(\r\n      data => {\r\n        // tslint:disable-next-line: no-\r\n        ;\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n\r\n\r\n          this.dDLList.ddlOrderModuleName.forEach(obj => {\r\n            this.moduleNameItems[obj.Value] = obj.Text;\r\n          });\r\n\r\n          if (this.dDLList.ddlCMISBudgetYear) {\r\n            this.dDLList.ddlCMISBudgetYear.forEach(obj => {\r\n              this.yearItems[obj.Value] = obj.Text;\r\n            });\r\n          }\r\n\r\n          this.dDLList.ddlDepartmentForCMISReport.forEach(obj => {\r\n            this.departmentItems[obj.Value] = obj.Text;\r\n          });\r\n\r\n          this.dDLList.ddlSchemeMaster.forEach(obj => {\r\n            this.schemeItems[obj.Value] = obj.Text;\r\n          });\r\n        }\r\n      },\r\n      // tslint:disable-next-line: no-shadowed-variable\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  showAllScheme(event) {\r\n    if (event.checked) {\r\n      this.isShowAll=true;\r\n      this.getSchemeList(0);\r\n    } else {\r\n      this.isShowAll=false;\r\n      this.getSchemeList(this.model.DepartmentCode);\r\n    }\r\n  }\r\n\r\n\r\n  getSchemeList(code) {\r\n      this._commonService.GetSchemeList(Number(code), StatusEnum.Active).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            \r\n            this.dDLList.ddlSchemeName = data.Data;\r\n            if ( this.dDLList.ddlSchemeName) {\r\n              this.dDLList.ddlSchemeName.forEach(obj => {\r\n                this.schemeItems[obj.Value] = obj.Text;\r\n              });\r\n            }\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  onSelection() {\r\n      this.model.IndividualBeneficiaryScheme = \"\";\r\n      for (let index = 0; index < this.model.BenificiarySchemeIds.length; index++) {\r\n\r\n          if (!this.model.IndividualBeneficiaryScheme) {\r\n            this.model.IndividualBeneficiaryScheme =\r\n              index +\r\n              1 +\r\n              \". \" +\r\n              this.schemeItems[this.model.BenificiarySchemeIds[index]];\r\n          } else {\r\n            this.model.IndividualBeneficiaryScheme =\r\n              this.model.IndividualBeneficiaryScheme +\r\n              \"\\n\" +\r\n              (index + 1) +\r\n              \". \" +\r\n              this.schemeItems[this.model.BenificiarySchemeIds[index]];\r\n          }\r\n      }\r\n  }\r\n\r\n  Saveclick() {\r\n    // tslint:disable-next-line: no-\r\n\r\n    this.file.markAsTouched();\r\n    this.orderNo.markAsTouched();\r\n    this.date.markAsTouched();\r\n    this.type.markAsTouched();\r\n    this.title.markAsTouched();\r\n     this.description.markAsTouched();\r\n    this.department.markAsTouched();\r\n    this.SubType.markAsTouched();\r\n    this.Sector.markAsTouched();\r\n    this.district.markAsTouched();\r\n    this.searchCriteria.markAsTouched();\r\n    // // stop here if form is invalid\r\n    // tslint:disable-next-line: max-line-length\r\n    if (this.orderNo.valid && this.district.valid && this.department.valid && this.file.valid && this.date.valid && this.type.valid && this.title.valid && this.description.valid && !this.fileValidationMsg &&  this.searchCriteria.valid && this.Sector.valid && this.SubType.valid) {\r\n\r\n\r\n      if (this.model.Date) {\r\n        let uTCDate = new Date(\r\n          Date.UTC(new Date( this.model.Date).getFullYear(), new Date( this.model.Date).getMonth(), new Date( this.model.Date).getDate())\r\n          ).toISOString();\r\n          this.model.Date = uTCDate;\r\n      }\r\n      if (this.model.EffectForm) {\r\n        let uTCDate = new Date(\r\n          Date.UTC(new Date( this.model.EffectForm).getFullYear(), new Date( this.model.EffectForm).getMonth(), new Date( this.model.EffectForm).getDate())\r\n          ).toISOString();\r\n          this.model.EffectForm = uTCDate;\r\n      }\r\n      //  this.modelChanged();\r\n      this._orderEntryService.AddOrderEntry(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate(['order']);\r\n          } else {\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        error => {\r\n          this._commonService.ScrollingTop();\r\n          console.log(error);\r\n          this._alertService.error(error.error.ExceptionMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  AddMoreItems() {\r\n    if (this.orderRelatedTo.ModuleId) {\r\n      this.orderRelatedTo.ModuleName = this.moduleNameItems[this.orderRelatedTo.ModuleId];\r\n    }\r\n    if (this.orderRelatedTo.YearValue) {\r\n      this.orderRelatedTo.YearText = this.yearItems[this.orderRelatedTo.YearValue];\r\n    }\r\n    if (this.orderRelatedTo.DepartmentId) {\r\n      this.orderRelatedTo.DepartmentName = this.departmentItems[this.orderRelatedTo.DepartmentId];\r\n    }\r\n    this.model.RelatedToOrderParameterList.push(this.orderRelatedTo);\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n  }\r\n\r\n  RemoveClick(index) {\r\n    this.model.RelatedToOrderParameterList.splice(index, 1);\r\n  }\r\n\r\n  GetRelatedToResult(ModuleName,DepartmentId, DepartmentName, YearText, index) {\r\n    this.responseReqModel = new ConnectWithCMISFilterModel();\r\n    if (YearText) {\r\n      this.responseReqModel.YearText = YearText;\r\n    }\r\n    if (DepartmentName) {\r\n      this.responseReqModel.DepartmentName = DepartmentName;\r\n    }\r\n    if (DepartmentId) {\r\n      this.responseReqModel.Department = DepartmentId;\r\n    }\r\n    if (ModuleName) {\r\n      this.responseReqModel.ModuleName = ModuleName;\r\n    }\r\n\r\n    this.responseReqModel.Index = index;\r\n\r\n    const _dialogRef = this._dialog.open(RelatedtoDialogComponent, {\r\n      width: '1000px',\r\n      data: this.responseReqModel\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: ResponseDialogModel) => {\r\n      if (result) {\r\n        this.model.RelatedToOrderParameterList[result.index].RelatedToResult = <\r\n          OrderRelatedToModelResult\r\n          >result.resultModel;\r\n      }\r\n    });\r\n  }\r\n\r\n  GetHelpDocument() {\r\n    this._commonService.GetHelpDocument(this.helpDocumentEnum.Order).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          \r\n          this.helpDocument = <CommonDocModel>data.Data;\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url, isHelpDoc : Boolean= false) {\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n      if (isHelpDoc) {\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Help Document\";\r\n        downloadLink.click();\r\n      } else {\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Blank Document\";\r\n        downloadLink.click();\r\n      }\r\n\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.documentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n\r\n      if (files.item(index).type.match('application/pdf')) {\r\n        if (files.item(index).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\"))) ) {\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e: any) => {\r\n            this.documentUrlList.push(new DocumentUrlModel());\r\n\r\n            this.documentUrlList[index].Url = <string>reader.result;\r\n            this.documentUrlList[index].Extension = (files[index].name.split('.'))[1];\r\n            if (this.documentUrlList[index].Extension === 'pdf') {\r\n              this.documentUrlList[index].DisplayName = files[index].name;\r\n            }\r\n\r\n            this.model.AttachmentList.push(new OrderAttachmentModel());\r\n            this.model.AttachmentList[index].AttachmentsName = files[index].name;\r\n            this.model.AttachmentList[index].Path = <string>reader.result;\r\n          };\r\n          reader.readAsDataURL(files[index]);\r\n        } else {\r\n          this.documentUrlList = [];\r\n          this.model.AttachmentList = [];\r\n          this.fileValidationMsg = this.fileSizeValidationMsg;\r\n          return;\r\n        }\r\n\r\n      } else {\r\n        this.fileValidationMsg = 'only *pdf';\r\n        this.documentUrlList = [];\r\n        this.model.AttachmentList = [];\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this.fileValidationMsg = '';\r\n    this.model.File = files;\r\n\r\n  }\r\n\r\n  RemoveImageFile(i) {\r\n\r\n    this.documentUrlList.splice(i, 1);\r\n   // this.Imeges.slice(i, 1);\r\n  }\r\n\r\n  checkValid(data) {\r\n    \r\nthis.orderTypeData = this.dDLList.OrderWithRequiredType.find(x => x.Code === Number(data));\r\nif (this.orderTypeData.IsDateMandatory) {\r\nthis.date.setValidators([Validators.required]);\r\nthis.date.updateValueAndValidity();\r\n} else {\r\n  this.date.setValidators(null);\r\nthis.date.updateValueAndValidity();\r\n}\r\nif (this.orderTypeData.IsDocumentNoMandatory === this.orderDocumentNoValidationEnum.Yes) {\r\n  this.orderNo.setValidators([Validators.required]);\r\n  this.orderNo.updateValueAndValidity();\r\n} else {\r\n  this.orderNo.setValidators(null);\r\nthis.orderNo.updateValueAndValidity();\r\n}\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".mesgs {min-height: 60vh;}.d-flex{display: flex;}.no-margin{margin: 0px !important;}.incoming_msg_img {display: inline-block;width: 70px;vertical-align: middle;border-radius: 100%;overflow: hidden;}.received_msg {display: inline-block;padding: 0 0 0 10px;vertical-align: middle;width: 92%;}.received_withd_msg {width: 57%;position: relative;}.received_withd_msg p {background: #ebebeb;border-radius: 5px;color: #646464;font-size: 14px;margin: 0;padding: 12px 20px;width: 100%;}.msg-unseen {position: relative;right: -4px;font-size: 20px;color: #8e8e8e;top: 5px;}.msg_seen {color: green !important;font-size: 25px !important;}.username {font-size: 15px;margin-bottom: 2px;text-transform: capitalize;}.time_date {color: #747474;display: block;font-size: 12px;margin: 8px 0 0;}.outgoing_msg {overflow: hidden;margin: 26px 0 26px;}.sent_msg {float: right;width: 46%;}.sent_msg p {background: #26389b;border-radius: 5px;font-size: 14px;margin: 0;color: #fff;padding: 12px 20px;width: 100%;}img {max-width: 100%;vertical-align: middle;}.footer_type_msg {background: #f5f5f5;padding: 15px;border-radius: 10px;}.btn-send {background: #222d32;color: #fff;margin-left: 10px;}.btn-add {background: #195679;color: #fff;margin-left: 10px;}.file-btn {position: relative;overflow: hidden;cursor: pointer;margin: 6px 10px;}.file-btn input[type=file] {position: absolute;opacity: 0;left: 0;top: 0;max-width: 33px;line-height: 29px;text-align: center;cursor: pointer;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9hZGQtb3JkZXIvYWRkLW9yZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsUUFBUSxnQkFBZ0IsQ0FBQyxDQUFDLFFBQVEsYUFBYSxDQUFDLENBQUMsV0FBVyxzQkFBc0IsQ0FBQyxDQUFDLG1CQUFtQixxQkFBcUIsQ0FBQyxXQUFXLENBQUMsc0JBQXNCLENBQUMsbUJBQW1CLENBQUMsZ0JBQWdCLENBQUMsQ0FBQyxlQUFlLHFCQUFxQixDQUFDLG1CQUFtQixDQUFDLHNCQUFzQixDQUFDLFVBQVUsQ0FBQyxDQUFDLHFCQUFxQixVQUFVLENBQUMsa0JBQWtCLENBQUMsQ0FBQyx1QkFBdUIsbUJBQW1CLENBQUMsa0JBQWtCLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsa0JBQWtCLENBQUMsV0FBVyxDQUFDLENBQUMsYUFBYSxrQkFBa0IsQ0FBQyxXQUFXLENBQUMsZUFBZSxDQUFDLGNBQWMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxXQUFXLHVCQUF1QixDQUFDLDBCQUEwQixDQUFDLENBQUMsV0FBVyxlQUFlLENBQUMsa0JBQWtCLENBQUMsMEJBQTBCLENBQUMsQ0FBQyxZQUFZLGNBQWMsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLGVBQWUsQ0FBQyxDQUFDLGVBQWUsZ0JBQWdCLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxXQUFXLFlBQVksQ0FBQyxVQUFVLENBQUMsQ0FBQyxhQUFhLG1CQUFtQixDQUFDLGtCQUFrQixDQUFDLGVBQWUsQ0FBQyxTQUFTLENBQUMsV0FBVyxDQUFDLGtCQUFrQixDQUFDLFdBQVcsQ0FBQyxDQUFDLEtBQUssZUFBZSxDQUFDLHNCQUFzQixDQUFDLENBQUMsa0JBQWtCLG1CQUFtQixDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDLFdBQVcsbUJBQW1CLENBQUMsV0FBVyxDQUFDLGlCQUFpQixDQUFDLENBQUMsVUFBVSxtQkFBbUIsQ0FBQyxXQUFXLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxXQUFXLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLGVBQWUsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLDRCQUE0QixrQkFBa0IsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLENBQUMsZUFBZSxDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9vcmRlci9hZGQtb3JkZXIvYWRkLW9yZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWVzZ3Mge21pbi1oZWlnaHQ6IDYwdmg7fS5kLWZsZXh7ZGlzcGxheTogZmxleDt9Lm5vLW1hcmdpbnttYXJnaW46IDBweCAhaW1wb3J0YW50O30uaW5jb21pbmdfbXNnX2ltZyB7ZGlzcGxheTogaW5saW5lLWJsb2NrO3dpZHRoOiA3MHB4O3ZlcnRpY2FsLWFsaWduOiBtaWRkbGU7Ym9yZGVyLXJhZGl1czogMTAwJTtvdmVyZmxvdzogaGlkZGVuO30ucmVjZWl2ZWRfbXNnIHtkaXNwbGF5OiBpbmxpbmUtYmxvY2s7cGFkZGluZzogMCAwIDAgMTBweDt2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO3dpZHRoOiA5MiU7fS5yZWNlaXZlZF93aXRoZF9tc2cge3dpZHRoOiA1NyU7cG9zaXRpb246IHJlbGF0aXZlO30ucmVjZWl2ZWRfd2l0aGRfbXNnIHAge2JhY2tncm91bmQ6ICNlYmViZWI7Ym9yZGVyLXJhZGl1czogNXB4O2NvbG9yOiAjNjQ2NDY0O2ZvbnQtc2l6ZTogMTRweDttYXJnaW46IDA7cGFkZGluZzogMTJweCAyMHB4O3dpZHRoOiAxMDAlO30ubXNnLXVuc2VlbiB7cG9zaXRpb246IHJlbGF0aXZlO3JpZ2h0OiAtNHB4O2ZvbnQtc2l6ZTogMjBweDtjb2xvcjogIzhlOGU4ZTt0b3A6IDVweDt9Lm1zZ19zZWVuIHtjb2xvcjogZ3JlZW4gIWltcG9ydGFudDtmb250LXNpemU6IDI1cHggIWltcG9ydGFudDt9LnVzZXJuYW1lIHtmb250LXNpemU6IDE1cHg7bWFyZ2luLWJvdHRvbTogMnB4O3RleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO30udGltZV9kYXRlIHtjb2xvcjogIzc0NzQ3NDtkaXNwbGF5OiBibG9jaztmb250LXNpemU6IDEycHg7bWFyZ2luOiA4cHggMCAwO30ub3V0Z29pbmdfbXNnIHtvdmVyZmxvdzogaGlkZGVuO21hcmdpbjogMjZweCAwIDI2cHg7fS5zZW50X21zZyB7ZmxvYXQ6IHJpZ2h0O3dpZHRoOiA0NiU7fS5zZW50X21zZyBwIHtiYWNrZ3JvdW5kOiAjMjYzODliO2JvcmRlci1yYWRpdXM6IDVweDtmb250LXNpemU6IDE0cHg7bWFyZ2luOiAwO2NvbG9yOiAjZmZmO3BhZGRpbmc6IDEycHggMjBweDt3aWR0aDogMTAwJTt9aW1nIHttYXgtd2lkdGg6IDEwMCU7dmVydGljYWwtYWxpZ246IG1pZGRsZTt9LmZvb3Rlcl90eXBlX21zZyB7YmFja2dyb3VuZDogI2Y1ZjVmNTtwYWRkaW5nOiAxNXB4O2JvcmRlci1yYWRpdXM6IDEwcHg7fS5idG4tc2VuZCB7YmFja2dyb3VuZDogIzIyMmQzMjtjb2xvcjogI2ZmZjttYXJnaW4tbGVmdDogMTBweDt9LmJ0bi1hZGQge2JhY2tncm91bmQ6ICMxOTU2Nzk7Y29sb3I6ICNmZmY7bWFyZ2luLWxlZnQ6IDEwcHg7fS5maWxlLWJ0biB7cG9zaXRpb246IHJlbGF0aXZlO292ZXJmbG93OiBoaWRkZW47Y3Vyc29yOiBwb2ludGVyO21hcmdpbjogNnB4IDEwcHg7fS5maWxlLWJ0biBpbnB1dFt0eXBlPWZpbGVdIHtwb3NpdGlvbjogYWJzb2x1dGU7b3BhY2l0eTogMDtsZWZ0OiAwO3RvcDogMDttYXgtd2lkdGg6IDMzcHg7bGluZS1oZWlnaHQ6IDI5cHg7dGV4dC1hbGlnbjogY2VudGVyO2N1cnNvcjogcG9pbnRlcjt9Il19 */\"","\r\nimport { Validators, FormControl } from '@angular/forms';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport {  OrderEntryModel,  OrderRelatedToModel,  OrderRelatedToModelResult,  OrderAttachmentModel} from 'src/app/Shared/Model/orderlist.model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { GlobalMessagesModel } from 'src/app/Shared/Model/common.messages';\r\nimport { DDLModel, DdlItemModel, DocumentUrlModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { Router } from '@angular/router';\r\nimport {  RequestServiceModel,  ResponseServiceModel,  ResponseListModel,  RequestDialogModel,  ResponseDialogModel} from 'src/app/Shared/Model/service.model';\r\nimport { MatDialog, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { RelatedtoDialogComponent } from '../relatedto-dialog/relatedto-dialog.component';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\n\r\n@Component({\r\n  selector: 'app-add-order',\r\n  templateUrl: './add-order.component.html',\r\n  styleUrls: ['./add-order.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class AddOrderComponent implements OnInit {\r\n  dDLList: DDLModel;\r\n  model: OrderEntryModel;\r\n  relatedToOrderList: DdlItemModel[] = [];\r\n  ServiceModel: RequestServiceModel;\r\n  helpDocumentEnum=HelpDocumentEnum;\r\n  helpDocument: string;\r\n  responseReqModel: RequestDialogModel;\r\n  tomorrow = new Date();\r\n  department = new FormControl('', [Validators.required]);\r\n  date = new FormControl('', [Validators.required]);\r\n  type = new FormControl('', [Validators.required]);\r\n  title = new FormControl('', [Validators.required]);\r\n  description = new FormControl('', [Validators.required]);\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  tempDocumentUrlList: DocumentUrlModel[] = [];\r\n  fileValidationMsg: string;\r\n  orderRelatedTo: OrderRelatedToModel;\r\n  moduleNameItems: { [index: string]: any } = {};\r\n  yearItems: { [index: string]: any } = {};\r\n  departmentItems: { [index: string]: any } = {};\r\n  constructor(\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _parentApi: AppComponent,\r\n    private _router: Router,\r\n    private _dialog: MatDialog\r\n  ) {\r\n    this._parentApi.setpagelayout('Add Offline Documents :', 'keyboard_backspace', 'Back To List', 'order');\r\n    this.model = new OrderEntryModel();\r\n    this.ServiceModel = new RequestServiceModel();\r\n    this.tomorrow.setDate(this.tomorrow.getDate() + 1 - 1);\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n    this.model.IssueBy = AppSetting.OrderIssueByDefault;\r\n    this.model.LinkToScheme=AppSetting.LinkedToScheme;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetDDLList();\r\n    this.GetHelpDocument();\r\n  }\r\n\r\n  GetDDLList() {\r\n    \r\n    this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderEntry).subscribe(\r\n      data => {\r\n              if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n          this.dDLList.ddlOrderModuleName.forEach(obj => {\r\n            this.moduleNameItems[obj.Value] = obj.Text;\r\n          });\r\n          if (this.dDLList.ddlOrderRelatedToYear) {\r\n            this.dDLList.ddlOrderRelatedToYear.forEach(obj => {\r\n              this.yearItems[obj.rowno] = obj.particulars;\r\n            });\r\n          }\r\n         \r\n          this.dDLList.ddlOrderRelatedToDepartment.forEach(obj => {\r\n            this.departmentItems[obj.prj_dept] = obj.particulars;\r\n          });\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetHelpDocument() {\r\n\r\n    this._commonService.GetHelpDocument(this.helpDocumentEnum.Order).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.helpDocument=data.Data;\r\n        }else{\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url) {\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = \"Help Document\";\r\n    downloadLink.click();\r\n  }\r\n\r\n  Saveclick() {\r\n\r\n    this.date.markAsTouched();\r\n    this.type.markAsTouched();\r\n    this.title.markAsTouched();\r\n    this.description.markAsTouched();\r\n    this.department.markAsTouched();\r\n    // // stop here if form is invalid\r\n    if (this.date.valid && this.department.valid && this.type.valid && this.title.valid && this.description.valid && !this.fileValidationMsg) {\r\n\r\n      const prevDate = this.model.Date;\r\n      const prevEffDate = this.model.EffectForm;\r\n      if (this.model.Date) {\r\n        this.model.Date = this.model.Date.toLocaleString();\r\n      }\r\n      if (this.model.EffectForm) {\r\n        this.model.EffectForm = this.model.EffectForm.toLocaleString();\r\n      }\r\n      this._orderEntryService.AddOrderEntry(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate(['order']);\r\n          } else {\r\n            this.model.Date = prevDate;\r\n            this.model.EffectForm = prevEffDate;\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        // tslint:disable-next-line: no-shadowed-variable\r\n        error => {\r\n          this.model.Date = prevDate;\r\n          this.model.EffectForm = prevEffDate;\r\n          this._commonService.ScrollingTop();\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  AddMoreItems() {\r\n    if (this.orderRelatedTo.ModuleId) {\r\n      this.orderRelatedTo.ModuleName = this.moduleNameItems[this.orderRelatedTo.ModuleId];\r\n    }\r\n    if (this.orderRelatedTo.YearValue) {\r\n      this.orderRelatedTo.YearText = this.yearItems[this.orderRelatedTo.YearValue];\r\n    }\r\n    if (this.orderRelatedTo.DepartmentId) {\r\n      this.orderRelatedTo.DepartmentName = this.departmentItems[this.orderRelatedTo.DepartmentId];\r\n    }\r\n    this.model.RelatedToOrderParameterList.push(this.orderRelatedTo);\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n  }\r\n\r\n  RemoveClick(index) {\r\n    this.model.RelatedToOrderParameterList.splice(index, 1);\r\n  }\r\n\r\n  GetRelatedToResult(ModuleName, DepartmentName, YearText, index) {\r\n    // tslint:disable-next-line: no-\r\n    ;\r\n    this.responseReqModel = new RequestDialogModel();\r\n    this.responseReqModel.ResponseServiceModel = new ResponseServiceModel();\r\n    if (YearText) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_year = YearText;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_year =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n    if (DepartmentName) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_ndept = DepartmentName;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_ndept =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n    if (ModuleName) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pmodulename = ModuleName;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pmodulename =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n\r\n    this.responseReqModel.index = index;\r\n\r\n    const _dialogRef = this._dialog.open(RelatedtoDialogComponent, {\r\n      width: '1000px',\r\n      data: this.responseReqModel\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: ResponseDialogModel) => {\r\n      if (result) {\r\n        this.model.RelatedToOrderParameterList[result.index].RelatedToResult = <\r\n          OrderRelatedToModelResult\r\n          >result.resultModel;\r\n      }\r\n    });\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    \r\n    this.documentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n\r\n      if (files.item(index).type.match('application/pdf')) {\r\n        if (files.item(index).size < 5000000) {\r\n          const reader = new FileReader();\r\n\r\n          reader.onload = (e: any) => {\r\n            this.documentUrlList.push(new DocumentUrlModel());\r\n\r\n            this.documentUrlList[index].Url = <string>reader.result;\r\n            this.documentUrlList[index].Extension = (files[index].name.split('.'))[1];\r\n            if (this.documentUrlList[index].Extension === 'pdf') {\r\n              this.documentUrlList[index].DisplayName = files[index].name;\r\n            }\r\n\r\n            this.model.AttachmentList.push(new OrderAttachmentModel());\r\n            this.model.AttachmentList[index].AttachmentsName = files[index].name;\r\n            this.model.AttachmentList[index].Path = <string>reader.result;\r\n          };\r\n          reader.readAsDataURL(files[index]);\r\n        } else {\r\n          this.documentUrlList = [];\r\n          this.model.AttachmentList = [];\r\n          this.fileValidationMsg = 'File size must be less than 5MB...!';\r\n          return;\r\n        }\r\n\r\n      } else {\r\n        this.fileValidationMsg = 'only *pdf';\r\n        this.documentUrlList = [];\r\n        this.model.AttachmentList = [];\r\n        return;\r\n      }\r\n\r\n    }\r\n\r\n    this.fileValidationMsg = '';\r\n  }\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZGVsZXRlLW9yZGVyL2RlbGV0ZS1vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatDialog } from '@angular/material';\r\nimport { OrderEntryModel, OrderRelatedToModel, OrderWithRelatedToViewModel } from 'src/app/Shared/Model/orderlist.model';\r\n\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { DocumentUrlModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { ConfirmationDialogComponent } from 'src/app/confirmation-dialog/confirmation-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-delete-order',\r\n  templateUrl: './delete-order.component.html',\r\n  styleUrls: ['./delete-order.component.css'],\r\n  providers: [OrderEntryService, CommonService]\r\n})\r\nexport class DeleteOrderComponent implements OnInit {\r\n  id: number;\r\n  model: OrderEntryModel;\r\n  RelatedToOrderParameterList: OrderRelatedToModel[] = [];\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  constructor(private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _route: ActivatedRoute,\r\n    private readonly _router: Router,\r\n    private readonly _dialog: MatDialog,\r\n    private _parentApi: AppComponent,\r\n    private readonly _commonService: CommonService,\r\n  ) {\r\n    this._parentApi.setpagelayout(\"Delete Order :\", \"keyboard_backspace\", \"Back To List\", \"order\");\r\n    this.id = this._route.snapshot.params.id;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetById();\r\n  }\r\n\r\n\r\n  GetById() {\r\n    this._orderEntryService.GetByID(this.id).subscribe(\r\n      data => {\r\n        ;\r\n        if (data.IsSuccess) {\r\n          var temp = data.Data;\r\n          temp = <OrderWithRelatedToViewModel>data.Data;\r\n          this.model = <OrderEntryModel>temp.OrderMasterData;\r\n          this.model.RelatedToOrderParameterList = this.RelatedToOrderParameterList;\r\n\r\n          if (this.model.MediaUrlList) {\r\n            this.documentUrlList = this.model.MediaUrlList;\r\n          }\r\n          if (temp.RelatedToData.length > 0) {\r\n            temp.RelatedToData.forEach(element => {\r\n\r\n              var temp = new OrderRelatedToModel();\r\n              temp.DepartmentId = element.DepartmentId;\r\n              temp.ModuleName = element.ModuleName;\r\n              temp.DepartmentName = element.DepartmentName;\r\n              temp.ModuleId = element.ModuleId;\r\n              temp.YearText = element.YearText;\r\n              temp.YearValue = element.YearValue;\r\n              temp.Id = element.Id;\r\n              temp.RelatedToResult.filenumber = element.filenumber;\r\n              temp.RelatedToResult.modulename = element.modulename;\r\n              temp.RelatedToResult.parano = element.parano;\r\n              temp.RelatedToResult.pm_projecthdrid = element.pm_projecthdrid;\r\n              temp.RelatedToResult.prj_dept = element.prj_dept;\r\n              temp.RelatedToResult.prj_description = element.prj_description;\r\n              temp.RelatedToResult.prj_ndept = element.prj_ndept;\r\n              temp.RelatedToResult.prj_year = element.pprj_year;\r\n              temp.RelatedToResult.rowno = element.rowno;\r\n\r\n              this.model.RelatedToOrderParameterList.push(temp);\r\n            });\r\n          }\r\n\r\n\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  downloadPdf(Url, name) {\r\n    \r\n        const linkSource = Url;\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = name;\r\n\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.target = \"blank\";\r\n        downloadLink.click();\r\n\r\n      }\r\n\r\n\r\n\r\n  OnDelete() {\r\n\r\n    const dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n      width: '350px',\r\n      data: \"Do you want to delete this record?\"\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        this._orderEntryService.DeleteOrder(this.id).subscribe(\r\n          data => {\r\n\r\n            if (\r\n              (data.IsSuccess)\r\n            ) {\r\n              this._alertService.success(data.Message);\r\n              this._router.navigate([\"order\"]);\r\n            }\r\n          },\r\n          error => {\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \".custom-data-table tr td h2 {\\r\\n\\r\\n  font-weight: 600;\\r\\n}\\r\\n.order-d-box {\\r\\n  width: 100%;\\r\\n  margin-bottom: 25px;\\r\\n  padding: 20px 10px 10px 10px;\\r\\n  border: solid 1px #ccc;\\r\\n  position: relative;\\r\\n  margin-top: 15px;\\r\\n}\\r\\n.order-d-box .order-d-box__title {\\r\\n  position: absolute;\\r\\n  font-size: 20px;\\r\\n  top: -19px;\\r\\n  background: #fff;\\r\\n  padding: 0px 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9kZXRhaWwtb3JkZXIvZGV0YWlsLW9yZGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUUsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsbUJBQW1CO0VBQ25CLDRCQUE0QjtFQUM1QixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZGV0YWlsLW9yZGVyL2RldGFpbC1vcmRlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmN1c3RvbS1kYXRhLXRhYmxlIHRyIHRkIGgyIHtcclxuXHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG4ub3JkZXItZC1ib3gge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi1ib3R0b206IDI1cHg7XHJcbiAgcGFkZGluZzogMjBweCAxMHB4IDEwcHggMTBweDtcclxuICBib3JkZXI6IHNvbGlkIDFweCAjY2NjO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG59XHJcbi5vcmRlci1kLWJveCAub3JkZXItZC1ib3hfX3RpdGxlIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgZm9udC1zaXplOiAyMHB4O1xyXG4gIHRvcDogLTE5cHg7XHJcbiAgYmFja2dyb3VuZDogI2ZmZjtcclxuICBwYWRkaW5nOiAwcHggMTBweDtcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderEntryModel, OrderRelatedToModel, OrderWithRelatedToViewModel } from 'src/app/Shared/Model/orderlist.model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { ColumnHeaderModel, DocumentUrlModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-detail-order',\r\n  templateUrl: './detail-order.component.html',\r\n  styleUrls: ['./detail-order.component.css'],\r\n  providers: [OrderEntryService]\r\n})\r\nexport class DetailOrderComponent implements OnInit {\r\n  model: OrderEntryModel;\r\n  id: number;\r\n  RelatedToOrderParameterList: OrderRelatedToModel[] = [];\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  constructor(private _parentApi: AppComponent,\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _route: ActivatedRoute,\r\n    private readonly _alertService: AlertService, ) {\r\n    this._parentApi.setpagelayout(\"Government Detail :\", \"keyboard_backspace\", \"Back To List\", \"order\");\r\n    this.id = this._route.snapshot.params.id;\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetById();\r\n  }\r\n\r\n\r\n  downloadPdf(Url, name) {\r\n    \r\n        const linkSource = Url;\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = name;\r\n\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.target = \"blank\";\r\n        downloadLink.click();\r\n\r\n      }\r\n\r\n\r\n  GetById() {\r\n    \r\n    this._orderEntryService.GetByID(this.id).subscribe(\r\n      data => {\r\n        ;\r\n        if (data.IsSuccess) {\r\n          var temp = data.Data;\r\n          temp = <OrderWithRelatedToViewModel>data.Data;\r\n          this.model = <OrderEntryModel>temp.OrderMasterData;\r\n          this.model.RelatedToOrderParameterList = this.RelatedToOrderParameterList;\r\n          if (this.model.MediaUrlList) {\r\n            this.documentUrlList = this.model.MediaUrlList;\r\n          }\r\n\r\n          if (temp.RelatedToData.length > 0) {\r\n            temp.RelatedToData.forEach(element => {\r\n\r\n              var temp = new OrderRelatedToModel();\r\n              temp.DepartmentId = element.DepartmentId;\r\n              temp.ModuleName = element.ModuleName;\r\n              temp.DepartmentName = element.DepartmentName;\r\n              temp.ModuleId = element.ModuleId;\r\n              temp.YearText = element.YearText;\r\n              temp.YearValue = element.YearValue;\r\n              temp.Id = element.Id;\r\n              temp.RelatedToResult.filenumber = element.filenumber;\r\n              temp.RelatedToResult.modulename = element.modulename;\r\n              temp.RelatedToResult.parano = element.parano;\r\n              temp.RelatedToResult.pm_projecthdrid = element.pm_projecthdrid;\r\n              temp.RelatedToResult.prj_dept = element.prj_dept;\r\n              temp.RelatedToResult.prj_description = element.prj_description;\r\n              temp.RelatedToResult.prj_ndept = element.prj_ndept;\r\n              temp.RelatedToResult.prj_year = element.pprj_year;\r\n              temp.RelatedToResult.rowno = element.rowno;\r\n\r\n              this.model.RelatedToOrderParameterList.push(temp);\r\n            });\r\n          }\r\n\r\n\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvZGlzcGF0Y2gtZGlhbG9nL2Rpc3BhdGNoLWRpYWxvZy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Validators, FormControl } from '@angular/forms';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-dispatch-dialog',\r\n  templateUrl: './dispatch-dialog.component.html',\r\n  styleUrls: ['./dispatch-dialog.component.css']\r\n})\r\nexport class DispatchDialogComponent implements OnInit {\r\n\r\n  dispatchNo: string;\r\n  dispatchNoVal = new FormControl('', [Validators.required]);\r\n  constructor( public _dialogRef: MatDialogRef<DispatchDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveClick(){\r\n    this.dispatchNoVal.markAsTouched();\r\n    if (this.dispatchNoVal.valid) {\r\n    this._dialogRef.close(this.dispatchNo);\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close(null);\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvZS1zaWduLWRpYWxvZy9lLXNpZ24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\nimport { Validators, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-e-sign-dialog',\r\n  templateUrl: './e-sign-dialog.component.html',\r\n  styleUrls: ['./e-sign-dialog.component.css']\r\n})\r\nexport class ESignDialogComponent implements OnInit {\r\nadharNo: string;\r\nadharNoVal = new FormControl('', [Validators.required]);\r\n  constructor( public _dialogRef: MatDialogRef<ESignDialogComponent>) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  saveClick(){\r\n    this.adharNoVal.markAsTouched();\r\n    if (this.adharNoVal.valid) {\r\n    this._dialogRef.close(this.adharNo);\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close(null);\r\n  }\r\n}\r\n","module.exports = \".side{float: right;}section.example-full-width {margin-bottom: 20px;}mat-radio-group.example-full-width {margin-bottom: 20px;}.btnback{background-color:gray;}.add_scheme .mat-error {position: absolute;left: 11px;bottom: 0px;}.add_scheme .col{position: relative;margin-bottom: 15px !important;}.mat-radio-group.example-full-width {margin-bottom: 1px !important;}.radio-bx-custom-with-label mat-label {margin-bottom: 3px;}.radio-bx-custom-with-label + mat-error {left: 11px;top: 55px;}.mat-horizontal-stepper-header-container{margin-bottom: 40px;}.cc-ref {margin-bottom: 15px;display: block;font-size: 16px;}.mat-list-option:hover {background: transparent !important;}.btn_add{top: 9px;}.upload-btn-wrapper{margin-top: 8px;}.checkdata {border: dotted 2px ;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9nZW5lcmF0ZS1vcmRlci9nZW5lcmF0ZS1vcmRlci1hZGQtdXBkYXRlL2dlbmVyYXRlLW9yZGVyLWFkZC11cGRhdGUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxNQUFNLFlBQVksQ0FBQyxDQUFDLDRCQUE0QixtQkFBbUIsQ0FBQyxDQUFDLG9DQUFvQyxtQkFBbUIsQ0FBQyxDQUFDLFNBQVMscUJBQXFCLENBQUMsQ0FBQyx3QkFBd0Isa0JBQWtCLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLGlCQUFpQixrQkFBa0IsQ0FBQyw4QkFBOEIsQ0FBQyxDQUFDLHFDQUFxQyw2QkFBNkIsQ0FBQyxDQUFDLHVDQUF1QyxrQkFBa0IsQ0FBQyxDQUFDLHlDQUF5QyxVQUFVLENBQUMsU0FBUyxDQUFDLENBQUMseUNBQXlDLG1CQUFtQixDQUFDLENBQUMsU0FBUyxtQkFBbUIsQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLENBQUMsd0JBQXdCLGtDQUFrQyxDQUFDLENBQUMsU0FBUyxRQUFRLENBQUMsQ0FBQyxvQkFBb0IsZUFBZSxDQUFDLENBQUMsWUFBWSxtQkFBbUIsQ0FBQyIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvZ2VuZXJhdGUtb3JkZXItYWRkLXVwZGF0ZS9nZW5lcmF0ZS1vcmRlci1hZGQtdXBkYXRlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZXtmbG9hdDogcmlnaHQ7fXNlY3Rpb24uZXhhbXBsZS1mdWxsLXdpZHRoIHttYXJnaW4tYm90dG9tOiAyMHB4O31tYXQtcmFkaW8tZ3JvdXAuZXhhbXBsZS1mdWxsLXdpZHRoIHttYXJnaW4tYm90dG9tOiAyMHB4O30uYnRuYmFja3tiYWNrZ3JvdW5kLWNvbG9yOmdyYXk7fS5hZGRfc2NoZW1lIC5tYXQtZXJyb3Ige3Bvc2l0aW9uOiBhYnNvbHV0ZTtsZWZ0OiAxMXB4O2JvdHRvbTogMHB4O30uYWRkX3NjaGVtZSAuY29se3Bvc2l0aW9uOiByZWxhdGl2ZTttYXJnaW4tYm90dG9tOiAxNXB4ICFpbXBvcnRhbnQ7fS5tYXQtcmFkaW8tZ3JvdXAuZXhhbXBsZS1mdWxsLXdpZHRoIHttYXJnaW4tYm90dG9tOiAxcHggIWltcG9ydGFudDt9LnJhZGlvLWJ4LWN1c3RvbS13aXRoLWxhYmVsIG1hdC1sYWJlbCB7bWFyZ2luLWJvdHRvbTogM3B4O30ucmFkaW8tYngtY3VzdG9tLXdpdGgtbGFiZWwgKyBtYXQtZXJyb3Ige2xlZnQ6IDExcHg7dG9wOiA1NXB4O30ubWF0LWhvcml6b250YWwtc3RlcHBlci1oZWFkZXItY29udGFpbmVye21hcmdpbi1ib3R0b206IDQwcHg7fS5jYy1yZWYge21hcmdpbi1ib3R0b206IDE1cHg7ZGlzcGxheTogYmxvY2s7Zm9udC1zaXplOiAxNnB4O30ubWF0LWxpc3Qtb3B0aW9uOmhvdmVyIHtiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudCAhaW1wb3J0YW50O30uYnRuX2FkZHt0b3A6IDlweDt9LnVwbG9hZC1idG4td3JhcHBlcnttYXJnaW4tdG9wOiA4cHg7fS5jaGVja2RhdGEge2JvcmRlcjogZG90dGVkIDJweCA7fSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\r\nimport { DDLModel, DdlItemModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport {\r\n  OrderGenerateMasterModel,\r\n  OrderRelatedToParameterModelLookup,\r\n  AttachmentsLookupModel,\r\n  OrderGenerateMasterViewModel\r\n} from \"src/app/Shared/Model/generate-order.model\";\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { GenerateOrderService } from \"src/app/Shared/Service/generate-order.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { AuthenticationService } from \"src/app/Shared/Service/authentication.service\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport {\r\n  RequestServiceModel,\r\n  ResponseDialogModel,\r\n  RequestDialogModel,\r\n  ResponseServiceModel\r\n} from \"src/app/Shared/Model/service.model\";\r\nimport {\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS,\r\n  MatStepper,\r\n  MatDialog\r\n} from \"@angular/material\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS\r\n} from \"src/app/Shared/Model/format-datepicker\";\r\nimport { GenerateOrderEnum } from \"src/app/Shared/Enum/generate-order.enum\";\r\nimport {\r\n  UserViewModel,\r\n  UserDepartmentViewModel,\r\n  UserDistrictViewModel\r\n} from \"src/app/Shared/Model/user-model\";\r\nimport { UserService } from \"src/app/Shared/Service/user.service\";\r\nimport { RelatedtoDialogComponent } from \"../../relatedto-dialog/relatedto-dialog.component\";\r\nimport { OrderRelatedToModelResult } from \"src/app/Shared/Model/orderlist.model\";\r\nimport { DepartmentReferenceModel } from \"src/app/Shared/Model/Master/department-reference.model\";\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\nimport { CommonDocModel } from 'src/app/Shared/Model/general-model';\r\n\r\n@Component({\r\n  selector: \"app-generate-order-add-update\",\r\n  templateUrl: \"./generate-order-add-update.component.html\",\r\n  styleUrls: [\"./generate-order-add-update.component.css\"],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class GenerateOrderAddUpdateComponent implements OnInit {\r\n  dDLList: DDLModel;\r\n  model: OrderGenerateMasterModel;\r\n  fileValidationMsg: string;\r\n  iCustomValidation = false;\r\n  minDate: Date = new Date();\r\n  tomorrow = new Date();\r\n  isLinear = true;\r\n  isCCreferenceTextAutofill: boolean = false;\r\n  ServiceModel: RequestServiceModel;\r\n  orderRelatedTo: OrderRelatedToParameterModelLookup;\r\n  attachmentsLookup: AttachmentsLookupModel;\r\n  responseReqModel: RequestDialogModel;\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  thirdFormGroup: FormGroup;\r\n  fourFormGroup: FormGroup;\r\n  fifthformGroup: FormGroup;\r\n  sixthformGroup: FormGroup;\r\n  sevenformGroup: FormGroup;\r\n  index = -1;\r\n  temp: string;\r\n  generateOrderEnum = GenerateOrderEnum;\r\n  loginData: UserViewModel;\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n  moduleNameItems: { [index: string]: any } = {};\r\n  yearItems: { [index: string]: any } = {};\r\n  departmentItems: { [index: string]: any } = {};\r\n  CCReferenceListItems: { [index: string]: any } = {};\r\n  CCReferenceListHindiItems: { [index: string]: any } = {};\r\n  fileSizeValidationMsg: string;\r\n  fileIsNull: boolean = false;\r\n  selectedAll = -1;\r\n  ddlCCcategory: DdlItemModel[] = [];\r\n  ddlSubType: DdlItemModel[] = [];\r\n  ddlCCReferencs: DepartmentReferenceModel[] = [];\r\n  helpDocumentEnum = HelpDocumentEnum;\r\n  helpDocument: CommonDocModel;\r\n  ddlDistrict: UserDistrictViewModel[];\r\n  \r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _generateOrderService: GenerateOrderService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _router: Router,\r\n    private readonly formBuilder: FormBuilder,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _userService: UserService,\r\n    private _dialog: MatDialog,\r\n    private _route: ActivatedRoute\r\n  ) {\r\n    this.model = new OrderGenerateMasterModel();\r\n    this._parentApi.setpagelayout(\r\n      \"Generate New Document (Online) :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"order/generateorder\"\r\n    );\r\n    this.ServiceModel = new RequestServiceModel();\r\n    this.tomorrow.setDate(this.tomorrow.getDate() + 1 - 1);\r\n    this.orderRelatedTo = new OrderRelatedToParameterModelLookup();\r\n    this.attachmentsLookup = new AttachmentsLookupModel();\r\n    this.model.IssueBy = AppSetting.OrderIssueByDefault;\r\n    this.model.LinkToScheme = AppSetting.LinkedToScheme;\r\n    this.model.Content = \"\";\r\n    this.model.Date = new Date();\r\n    this.model.EffectForm = new Date();\r\n    this.model.IsHindi = Boolean(this.generateOrderEnum.DefaultEnglish);\r\n    this.model.Id = this._route.snapshot.params.id;\r\n    this.model.IsByOrderOfGovernor = false;\r\n    this.model.IsWithinSecretariat = false;\r\n    if (this.model.Id) {\r\n      this.GetById();\r\n    }\r\n    this.fileSizeValidationMsg =\r\n      \"Attachment must be less than \" +\r\n      localStorage.getItem(\"FileValidation\") +\r\n      \" MB.\";\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.model.OfficeCode= Number(this.loginData.OfficeCode);\r\n    this.GetDDLList();\r\n    this.formGroupInit();\r\n    this.getDepartment();\r\n    this.GetHelpDocument();\r\n    this.getDistrict();\r\n  }\r\n\r\n  getDistrict() {\r\n    this._userService.GetUserDistrict(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDistrict = <UserDistrictViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  onSelection() {\r\n    if (this.isCCreferenceTextAutofill) {\r\n      this.model.CCReferenceListText = \"\";\r\n      for (let index = 0; index < this.model.CCReferenceList.length; index++) {\r\n        if (this.model.IsHindi) {\r\n          if (!this.model.CCReferenceListText) {\r\n            this.model.CCReferenceListText =\r\n              index +\r\n              1 +\r\n              \". \" +\r\n              this.CCReferenceListHindiItems[this.model.CCReferenceList[index]];\r\n          } else {\r\n            this.model.CCReferenceListText =\r\n              this.model.CCReferenceListText +\r\n              \"\\n\" +\r\n              (index + 1) +\r\n              \". \" +\r\n              this.CCReferenceListHindiItems[this.model.CCReferenceList[index]];\r\n          }\r\n        } else {\r\n          if (!this.model.CCReferenceListText) {\r\n            this.model.CCReferenceListText =\r\n              index +\r\n              1 +\r\n              \". \" +\r\n              this.CCReferenceListItems[this.model.CCReferenceList[index]];\r\n          } else {\r\n            this.model.CCReferenceListText =\r\n              this.model.CCReferenceListText +\r\n              \"\\n\" +\r\n              (index + 1) +\r\n              \". \" +\r\n              this.CCReferenceListItems[this.model.CCReferenceList[index]];\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  AddMoreRelatedTo() {\r\n    if (this.orderRelatedTo.ModuleId) {\r\n      this.orderRelatedTo.ModuleName = this.moduleNameItems[\r\n        this.orderRelatedTo.ModuleId\r\n      ];\r\n    }\r\n    if (this.orderRelatedTo.YearValue) {\r\n      this.orderRelatedTo.YearText = this.yearItems[\r\n        this.orderRelatedTo.YearValue\r\n      ];\r\n    }\r\n    if (this.orderRelatedTo.DepartmentId) {\r\n      this.orderRelatedTo.DepartmentName = this.departmentItems[\r\n        this.orderRelatedTo.DepartmentId\r\n      ];\r\n    }\r\n    this.model.RelatedToOrderParameterList.push(this.orderRelatedTo);\r\n    this.orderRelatedTo = new OrderRelatedToParameterModelLookup();\r\n  }\r\n\r\n  selectAll() {\r\n    \r\n    if (this.selectedAll < 0) {\r\n      this.model.DepartmentEffectedCodes = this.dDLList.ddlDepartment.map(\r\n        function(a) {\r\n          return a.Value;\r\n        }\r\n      );\r\n      this.selectedAll = 1;\r\n    } else {\r\n      this.selectedAll = -1;\r\n      this.model.DepartmentEffectedCodes = [];\r\n    }\r\n  }\r\n\r\n  RemoveClick(index) {\r\n    this.model.RelatedToOrderParameterList.splice(index, 1);\r\n  }\r\n\r\n  AddMoreAttachment() {\r\n\r\n    this.AddAttachmentValidation();\r\n    this.sixthformGroup.markAllAsTouched();\r\n    if (\r\n      this.sixthformGroup.valid &&\r\n      this.fileValidationMsg.length == 0 &&\r\n      this.fileIsNull\r\n    ) {\r\n      this.model.AttachmentList.push(this.attachmentsLookup);\r\n      this.RemoveAttachmentValidation();\r\n      this.attachmentsLookup = new AttachmentsLookupModel();\r\n      this.fileIsNull = false;\r\n    }\r\n  }\r\n\r\n  RemoveAttachmentClick(index) {\r\n    this.model.AttachmentList.splice(index, 1);\r\n  }\r\n\r\n  DateOfIssueClick() {\r\n    this.model.EffectForm = this.model.Date;\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.GenerateOrderDDLKey).subscribe(\r\n      data => {\r\n      \r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n\r\n          this.dDLList.ddlOrderModuleName.forEach(obj => {\r\n            this.moduleNameItems[obj.Value] = obj.Text;\r\n          });\r\n\r\n          if (this.dDLList.ddlOrderRelatedToYear) {\r\n            this.dDLList.ddlOrderRelatedToYear.forEach(obj => {\r\n              this.yearItems[obj.rowno] = obj.particulars;\r\n            });\r\n          }\r\n\r\n          this.dDLList.ddlOrderRelatedToDepartment.forEach(obj => {\r\n            this.departmentItems[obj.prj_dept] = obj.particulars;\r\n          });\r\n\r\n          this.dDLList.ddlCCReference.forEach(obj => {\r\n            this.CCReferenceListItems[obj.Code] = obj.Reference;\r\n          });\r\n          this.dDLList.ddlCCReference.forEach(obj => {\r\n            this.CCReferenceListHindiItems[obj.Code] = obj.ReferenceHindi;\r\n          });\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetCCcategoryByDepartment(code) {\r\n    if (code) {\r\n      this._commonService.GetCCcategoryByDepartment(code).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this.ddlCCcategory = <DdlItemModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlCCcategory = null;\r\n    }\r\n  }\r\n\r\n  GetSubType(data) {\r\n    \r\n    if (data == this.generateOrderEnum.TypeCircularCode) {\r\n      this.RemoveValidationOnSubjectn();\r\n    } else {\r\n      this.AddValidationOnSubject();\r\n    }\r\n    if (data) {\r\n      this._commonService.GetOrderSubTypeByType(data).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this.ddlSubType = <DdlItemModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlSubType = null;\r\n    }\r\n  }\r\n\r\n  GetAllreferenceByDepartment(){\r\n \r\n    if (this.model.DepartmentCode) {\r\n      this._commonService.GetReferenceByDepartment(Number(this.model.DepartmentCode)).subscribe(\r\n        data => {\r\n      \r\n          if (data.IsSuccess) {\r\n            this.ddlCCReferencs = <DepartmentReferenceModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlCCReferencs = null;\r\n    }\r\n  }\r\n\r\n  cCCategoryClick(data){\r\n \r\nif (Number(data)>0) {\r\nthis.GetReferenceListByCCCategory(data);\r\n}else{\r\n  this.GetAllreferenceByDepartment();\r\n}\r\n\r\n  }\r\n\r\n  GetReferenceListByCCCategory(data) {\r\n \r\n    if (data) {\r\n      this._commonService.GetCCReferenceByCCCategory(data).subscribe(\r\n        data => {\r\n       \r\n          if (data.IsSuccess) {\r\n            this.ddlCCReferencs = <DepartmentReferenceModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlCCReferencs = null;\r\n    }\r\n  }\r\n\r\n  handleFileLogo(event: any) {\r\n    if (event.target.files.item(0).type.match(\"image/*\") || event.target.files.item(0).type.match(\"application/pdf\")) {\r\n      if (\r\n        event.target.files.item(0).size <\r\n        this._commonService.ConvertMbintoByte(\r\n          Number(localStorage.getItem(\"FileValidation\"))\r\n        )\r\n      ) {\r\n        if (event.target.files.item(0).type.match('application/pdf')){\r\n          this.attachmentsLookup.IsPdf = true;\r\n        }\r\n        const reader = new FileReader();\r\n        reader.onload = (event: any) => {\r\n          this.attachmentsLookup.AttachmentUrl = event.target.result;\r\n        };\r\n        reader.readAsDataURL(event.target.files.item(0));\r\n        this.fileValidationMsg = \"\";\r\n        this.fileIsNull = true;\r\n      } else {\r\n        this.fileValidationMsg = this.fileSizeValidationMsg;\r\n      }\r\n    } else {\r\n      this.fileValidationMsg = \"only *images and pdf file accepted \";\r\n    }\r\n  }\r\n\r\n  downloadFaqDocPdf(Url) {\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = 'Docs';\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n\r\n  touchFirst(stepper: MatStepper) {\r\n    if (!this.firstFormGroup.valid) {\r\n      this.firstFormGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchSecond(stepper: MatStepper) {\r\n    if (!this.secondFormGroup.valid) {\r\n      this.secondFormGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchThird(stepper: MatStepper) {\r\n    if (!this.thirdFormGroup.valid) {\r\n      this.thirdFormGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchFourth(stepper: MatStepper) {\r\n    if (!this.fourFormGroup.valid) {\r\n      this.fourFormGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchFifth(stepper: MatStepper) {\r\n    if (!this.fifthformGroup.valid) {\r\n      this.fifthformGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchSixth(stepper: MatStepper) {\r\n    this.RemoveAttachmentValidation();\r\n    if (!this.sixthformGroup.valid) {\r\n      this.sixthformGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  touchSeventh(stepper: MatStepper) {\r\n    if (!this.sevenformGroup.valid) {\r\n      this.sevenformGroup.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  AddAttachmentValidation() {\r\n    this.sixthformGroup\r\n      .get(\"AttachmentUrl\")\r\n      .setValidators([Validators.required]);\r\n    this.sixthformGroup.get(\"AttachmentUrl\").updateValueAndValidity();\r\n  }\r\n  RemoveAttachmentValidation() {\r\n    this.sixthformGroup.get(\"AttachmentUrl\").setValidators(null);\r\n    this.sixthformGroup.get(\"AttachmentUrl\").updateValueAndValidity();\r\n  }\r\n\r\n  formGroupInit() {\r\n    this.firstFormGroup = this.formBuilder.group({\r\n      Type: [null, Validators.required],\r\n      Date: [null],\r\n      OrderNo: [null],\r\n      Title: [null, Validators.required],\r\n      Description: [null, Validators.required],\r\n      EffectForm: [null],\r\n      ReferenceLink: [null],\r\n      IssueBy: [null],\r\n      IndividualBeneficiaryScheme: [null],\r\n      SubTypeCode: [null],\r\n      ReferenceNumber: [null],\r\n      DepartmentCode: [null, Validators.required],\r\n      FileNumber: [null],\r\n      LinkToScheme: [null],\r\n      SectorCodes: [null],\r\n      DepartmentEffectedCodes: [null],\r\n      ModuleId: [null],\r\n      YearValue: [null],\r\n      DepartmentId: [null],\r\n      DistrictCode: [null, Validators.required],\r\n      OfficeCode: [null]\r\n    });\r\n\r\n    this.secondFormGroup = this.formBuilder.group({\r\n      Subject: [null], //[null, Validators.required],\r\n      Reference: [null],\r\n      Context: [null]\r\n    });\r\n\r\n    this.thirdFormGroup = this.formBuilder.group({\r\n      Content: [null, Validators.required],\r\n      IsByOrderOfGovernor: [null],\r\n      IsByOrderOfGovernortext: [null],\r\n      AuthoritySignatureCode: [null, Validators.required]\r\n    });\r\n\r\n    this.fourFormGroup = this.formBuilder.group({\r\n      CCCategoryCode: [null],\r\n      CCReferenceList: [null],\r\n      CCSignatureCode: [null],\r\n      CCReferenceListText: [null],\r\n      CCreferenceTextAutofill: [null]\r\n    });\r\n\r\n    this.fifthformGroup = this.formBuilder.group({\r\n      OrdGenrateRemarks: [null],\r\n      SearchCriteria: [null]\r\n    });\r\n\r\n    this.sixthformGroup = this.formBuilder.group({\r\n      AttachmentUrl: [null],\r\n      Description: [null],\r\n      IsAnnexure: [null]\r\n    });\r\n\r\n    this.sevenformGroup = this.formBuilder.group({\r\n      AddressTo: [null],\r\n      IsWithinSecretariat: [null]\r\n    });\r\n  }\r\n\r\n  saveClick() {\r\n    this.model.IsSaveAsDraft = false;\r\n    this.firstFormGroup.markAllAsTouched();\r\n    this.sevenformGroup.markAllAsTouched();\r\n    this.thirdFormGroup.markAllAsTouched();\r\n    this.fourFormGroup.markAllAsTouched();\r\n    this.fifthformGroup.markAllAsTouched();\r\n    this.sixthformGroup.markAllAsTouched();\r\n    this.sevenformGroup.markAllAsTouched();\r\n    if (\r\n      this.firstFormGroup.valid &&\r\n      this.secondFormGroup.valid &&\r\n      this.thirdFormGroup.valid &&\r\n      this.fourFormGroup.valid &&\r\n      this.fifthformGroup.valid &&\r\n      this.sixthformGroup.valid &&\r\n      this.sevenformGroup\r\n    ) {\r\n      this.Save();\r\n    }\r\n  }\r\n\r\n  saveAsDrafts() {\r\n\r\n    this.model.IsSaveAsDraft = true;\r\n    this.firstFormGroup.controls.Type.markAsTouched();\r\n    this.firstFormGroup.controls.DepartmentCode.markAsTouched();\r\n    if (\r\n      this.firstFormGroup.controls.Type.valid &&\r\n      this.firstFormGroup.controls.DepartmentCode.valid\r\n    ) {\r\n      this.Save();\r\n    }\r\n  }\r\n\r\n  Save() {\r\n\r\n    const prevDate = this.model.Date;\r\n    const prevEffDate = this.model.EffectForm;\r\n    if (this.model.Id) {\r\n      this._generateOrderService.Edit(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            if (!this.model.IsSaveAsDraft) {\r\n              this._router.navigate([\"order/generateorder\"]);\r\n            }\r\n          } else {\r\n            this.model.Date = prevDate;\r\n            this.model.EffectForm = prevEffDate;\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        error => {\r\n          this.model.Date = prevDate;\r\n          this.model.EffectForm = prevEffDate;\r\n          this._commonService.ScrollingTop();\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._generateOrderService.Add(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n            this._router.navigate([\"order/generateorder\"]);\r\n          } else {\r\n            this.model.Date = prevDate;\r\n            this.model.EffectForm = prevEffDate;\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        error => {\r\n          this.model.Date = prevDate;\r\n          this.model.EffectForm = prevEffDate;\r\n          this._commonService.ScrollingTop();\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  GetRelatedToResult(ModuleName, DepartmentName, YearText, index) {\r\n    this.responseReqModel = new RequestDialogModel();\r\n    this.responseReqModel.ResponseServiceModel = new ResponseServiceModel();\r\n    if (YearText) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_year = YearText;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_year =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n    if (DepartmentName) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_ndept = DepartmentName;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pprj_ndept =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n    if (ModuleName) {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pmodulename = ModuleName;\r\n    } else {\r\n      this.responseReqModel.ResponseServiceModel._parameters[0].getiview.params.pmodulename =\r\n        AppSetting.OrderRelatedToResultKey;\r\n    }\r\n\r\n    this.responseReqModel.index = index;\r\n\r\n    const _dialogRef = this._dialog.open(RelatedtoDialogComponent, {\r\n      width: \"1000px\",\r\n      data: this.responseReqModel\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: ResponseDialogModel) => {\r\n      if (result) {\r\n        this.model.RelatedToOrderParameterList[result.index].RelatedToResult = <\r\n          OrderRelatedToModelResult\r\n        >result.resultModel;\r\n      }\r\n    });\r\n  }\r\n\r\n  GetById() {\r\n    this._generateOrderService.GetById(this.model.Id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          let temp = <OrderGenerateMasterViewModel>data.Data;\r\n          this.model = <OrderGenerateMasterModel>data.Data;\r\n\r\n          if (this.model.LinkToScheme) {\r\n            this.model.LinkToScheme = String(this.model.LinkToScheme);\r\n          }\r\n          if (this.model.SubTypeCode) {\r\n            this.model.SubTypeCode = String(this.model.SubTypeCode);\r\n          }\r\n          if (this.model.CCCategoryCode) {\r\n            this.model.CCCategoryCode = String(this.model.CCCategoryCode);\r\n          }\r\n          this.cCCategoryClick(this.model.CCCategoryCode);\r\n          if (temp.DepartmentEffectedIds) {\r\n            this.model.DepartmentEffectedCodes = temp.DepartmentEffectedIds.split(\r\n              \",\"\r\n            );\r\n          }\r\n          if (temp.SectorIds) {\r\n            this.model.SectorCodes = temp.SectorIds.split(\",\");\r\n          }\r\n          if (this.model.DepartmentCode) {\r\n            this.GetCCcategoryByDepartment(this.model.DepartmentCode);\r\n            this.model.DepartmentCode = String(this.model.DepartmentCode);\r\n          }\r\n          if (this.model.Type) {\r\n            this.GetSubType(this.model.Type);\r\n            this.model.Type = String(this.model.Type);\r\n          }\r\n          if (this.model.IssueBy) {\r\n            this.model.IssueBy = String(this.model.IssueBy);\r\n          }\r\n          if (this.model.Date) {\r\n            this.model.Date = new Date(this.model.Date);\r\n          }\r\n          if (this.model.AuthoritySignatureCode) {\r\n            this.model.AuthoritySignatureCode = String(\r\n              this.model.AuthoritySignatureCode\r\n            );\r\n          }\r\n          if (temp.CCReferenceListIds) {\r\n            this.model.CCReferenceList = temp.CCReferenceListIds;\r\n          }\r\n          if (this.model.CCSignatureCode) {\r\n            this.model.CCSignatureCode = String(this.model.CCSignatureCode);\r\n          }\r\n          if (this.model.DistrictCode) {\r\n            this.model.DistrictCode = String(this.model.DistrictCode);\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  AddValidationOnSubject() {\r\n    this.secondFormGroup.get(\"Subject\").setValidators([Validators.required]);\r\n    this.secondFormGroup.get(\"Subject\").updateValueAndValidity();\r\n  }\r\n\r\n  RemoveValidationOnSubjectn() {\r\n    this.secondFormGroup.get(\"Subject\").setValidators(null);\r\n    this.secondFormGroup.get(\"Subject\").updateValueAndValidity();\r\n  }\r\n\r\n\r\nGetHelpDocument() {\r\n  this._commonService.GetHelpDocument(this.helpDocumentEnum.GenerateOrder).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.helpDocument = <CommonDocModel>data.Data;\r\n      }else{\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ndownloadDoc(Url, isHelpDoc : Boolean= false) {\r\n\r\n  const linkSource = Url;\r\n  const downloadLink = document.createElement(\"a\");\r\n    if (isHelpDoc) {\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Help Document\";\r\n      downloadLink.click();\r\n    }else{\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Blank Document\";\r\n      downloadLink.click();\r\n    }\r\n\r\n}\r\n}\r\n","module.exports = \".make-gold {\\r\\n    background-color: #fde1dc\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9nZW5lcmF0ZS1vcmRlci9nZW5lcmF0ZS1vcmRlci1hdXRob3JpdHktbGlzdC9nZW5lcmF0ZS1vcmRlci1hdXRob3JpdHktbGlzdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvZ2VuZXJhdGUtb3JkZXItYXV0aG9yaXR5LWxpc3QvZ2VuZXJhdGUtb3JkZXItYXV0aG9yaXR5LWxpc3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWtlLWdvbGQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZTFkY1xyXG59XHJcbiJdfQ== */\"","import { error } from 'util';\r\nimport { Component, OnInit, ViewChild, Inject } from \"@angular/core\";\r\nimport {\r\n  GeneratedPdfModel,\r\n  OrderGenerateAuthorityListModel,\r\n  ReferencyNotificationResponseModel,\r\n  ESignPdfModel,\r\n  TemplateVerifyModel\r\n} from \"src/app/Shared/Model/generate-order.model\";\r\nimport {\r\n  MatTableDataSource,\r\n  MatPaginator,\r\n  MatSort,\r\n  MatDialog,\r\n  MAT_DIALOG_DATA\r\n} from \"@angular/material\";\r\nimport { ColumnHeaderModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport {\r\n  IndexModel,\r\n  PermissionModel\r\n} from \"src/app/Shared/Model/general-model\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { GenerateOrderService } from \"src/app/Shared/Service/generate-order.service\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { OTPDialogComponent } from \"src/app/otp-dialog/otp-dialog.component\";\r\nimport { OrderCancellationDialogComponent } from \"../../order-cancellation-dialog/order-cancellation-dialog.component\";\r\nimport { ESignDialogComponent } from \"../e-sign-dialog/e-sign-dialog.component\";\r\nimport { DispatchDialogComponent } from '../dispatch-dialog/dispatch-dialog.component';\r\nimport { SendNotificationContentEnum, MessageTypeEnum, NotificationModuleNameEnum } from 'src/app/Shared/Enum/order.enum';\r\nimport { NotificationPreviewPopupComponent } from 'src/app/content/notification-preview-popup/notification-preview-popup.component';\r\n\r\n@Component({\r\n  selector: \"app-generate-order-authority-list\",\r\n  templateUrl: \"./generate-order-authority-list.component.html\",\r\n  styleUrls: [\"./generate-order-authority-list.component.css\"]\r\n})\r\nexport class GenerateOrderAuthorityListComponent implements OnInit {\r\n  //#region << Variable >>\r\n  listModel: OrderGenerateAuthorityListModel[];\r\n  dataSource: MatTableDataSource<OrderGenerateAuthorityListModel>;\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"DepartmentTitle\",\r\n    \"Title\",\r\n    \"TypeName\",\r\n    \"OrderNo\",\r\n    \"Date\",\r\n    \"CreatedDate\",\r\n    \"AllowToEdit\",\r\n    \"Action\"\r\n  ]; //\"Status\",\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n    { Value: \"TypeName\", Text: \"Type\" },\r\n    { Value: \"Title\", Text: \"Title\" },\r\n    { Value: \"OrderNo\", Text: \"Document No.\" }\r\n    // { Value: \"Date\", Text: \"Date of Issue\" }\r\n  ];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  indexModel: IndexModel;\r\n  totalRecords: number;\r\n  // generateOrderPermission: PermissionModel = this._commonService.GetPagePermission(\"/order/generateorderauthoritylist\", \"/order/generateorder/add\", \"/order/generateorder/preview\", \"/order/generateorder/edit\", \"/order/generateorder/Lock\");\r\n  generateOrderPermission: PermissionModel = this._commonService.GetPagePermission(\r\n    \"/order/generateorderauthoritylist\",\r\n    \"/order/generateorderauthoritylist/add\",\r\n    \"\",\r\n    \"/order/generateorderauthoritylist/edit\",\r\n    \"/order/generateorder/Lock\",\r\n    \"/order/generateorder/cancel\"\r\n  );\r\n  searchColumns: ColumnHeaderModel[] = [\r\n    { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n    { Value: \"Title\", Text: \"Title\" },\r\n    { Value: \"TypeName\", Text: \"Type\" },\r\n    { Value: \"OrderNo\", Text: \"Document No\" },\r\n    { Value: \"Date\", Text: \" Date of Issue\" },\r\n    { Value: \"CreatedDate\", Text: \" Date of Entry\" }\r\n  ];\r\n  esignModel: ESignPdfModel;\r\n  esignData: string;\r\n  //#endregion\r\n  SendNotificationContentEnum = SendNotificationContentEnum;\r\n  messageTypeEnum = MessageTypeEnum;\r\n  notificationModuleNameEnum = NotificationModuleNameEnum;\r\n  //#region << constructor >>\r\n  TemplateVerifyModel: TemplateVerifyModel;\r\n  constructor(\r\n    private readonly _generateOrderService: GenerateOrderService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private _parentApi: AppComponent,\r\n    private readonly _dialog: MatDialog\r\n  ) {\r\n    \r\n    this._parentApi.setpagelayout(\r\n      \"List Of Document Generated Online For Authority:\",\r\n      \"\",\r\n      \"\",\r\n      \"\"\r\n    );\r\n\r\n    this.indexModel = new IndexModel();\r\n    this.esignModel = new ESignPdfModel();\r\n  }\r\n  //#endregion\r\n\r\n  //#region << Method >>\r\n  ngOnInit() {\r\n    this.GetList();\r\n  }\r\n\r\n  SortData(event) {\r\n    this.indexModel.OrderBy = event.active;\r\n    this.indexModel.OrderByAsc =\r\n      event.direction === AppSetting.orderByDscAsc\r\n        ? AppSetting.orderByAsc\r\n        : AppSetting.orderByDsc;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  GetList() {\r\n    this._generateOrderService.GetAuthorityList(this.indexModel).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.listModel = <OrderGenerateAuthorityListModel[]>data.Data.Data;\r\n          this.dataSource = new MatTableDataSource<\r\n            OrderGenerateAuthorityListModel\r\n          >(this.listModel);\r\n          if (this.indexModel.IsPostBack === false) {\r\n            this.dataSource.paginator = this.paginator;\r\n            this.totalRecords = data.Data.TotalRecords;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url) {\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = \"Download\";\r\n    downloadLink.click();\r\n  }\r\n\r\n  statusClick(id) {\r\n    this._commonService.GenerateOTP().subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const _dialogRef = this._dialog.open(OTPDialogComponent, {\r\n            width: \"500px\",\r\n            disableClose: true\r\n          });\r\n          _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n            if (result) {\r\n\r\n              const _dialogRef = this._dialog.open(DispatchDialogComponent, {\r\n                width: \"500px\",\r\n                disableClose: true\r\n              });\r\n              _dialogRef.afterClosed().subscribe((dispatchResult: boolean) => {\r\n                if (dispatchResult) {\r\n\r\n              this._generateOrderService.SetStatus(id, dispatchResult).subscribe(\r\n                data => {\r\n                  if (data.IsSuccess) {\r\n                    this.GetList();\r\n                    this._alertService.success(data.Message);\r\n                  } else {\r\n                    this._alertService.error(data.Message);\r\n                  }\r\n                },\r\n                error => {\r\n                  this._alertService.error(error.message);\r\n                }\r\n              );\r\n              }\r\n            });\r\n\r\n            }\r\n\r\n\r\n          });\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  lockClick(id) {\r\n    this._generateOrderService.Lock(id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.GetList();\r\n          this._alertService.success(data.Message);\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  SearchByKeyword(searchValue) {\r\n    this.indexModel.Search = searchValue;\r\n    this.GetList();\r\n  }\r\n\r\n  DocumentESign(id) {\r\n    const _dialogRef = this._dialog.open(ESignDialogComponent, {\r\n      width: \"500px\",\r\n      disableClose: true\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        \r\n        this.esignModel.AdharNo = String(result);\r\n        this.esignModel.Id = id;\r\n        localStorage.setItem(\"IsEsign\", \"true\");\r\n        this._generateOrderService\r\n          .GenerateWithEsignPdf(this.esignModel)\r\n          .subscribe(\r\n            data => {\r\n              if (data.IsSuccess) {\r\n                // const result = <GeneratedPdfModel>data.Data;\r\n\r\n                // // --------generate pdf with esign\r\n                // this.esignData = result.Url;\r\n                // document.getElementById(\"esignDatasss\").innerHTML =\r\n                //   \"<input type='text' id='esignData' name='esignData' value='\" +\r\n                //   this.esignData +\r\n                //   \"'>\";\r\n                // document.getElementById(\"btnESign\").click();\r\n\r\n                this.GetList();\r\n              }\r\n            },\r\n            error => {\r\n              this._alertService.error(error.message);\r\n            }\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  approveClick(id) {\r\n    this._generateOrderService.GenerateUINumber(id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.GetList();\r\n          this._alertService.success(data.Message);\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  // sendNotificationClick(id: number, isEmail: boolean = false) {\r\n\r\n  //   const model = new ReferencyNotificationResponseModel();\r\n  //   model.IsEmail = isEmail;\r\n  //   model.OrderId = id;\r\n  //   this._generateOrderService.SendNotification(model).subscribe(\r\n  //     data => {\r\n  //       if (data.IsSuccess) {\r\n  //         this.GetList();\r\n  //         this._alertService.success(data.Message);\r\n  //       } else {\r\n  //         this._alertService.error(data.Message);\r\n  //       }\r\n  //     },\r\n  //     error => {\r\n  //       this._alertService.error(error.message);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n\r\n    //\r\n  sendNotificationClick( id: number, isEmail: boolean = false) {\r\n\r\n          const model = new ReferencyNotificationResponseModel();\r\n          model.IsEmail = isEmail;\r\n          model.OrderId = id;\r\n          this.TemplateVerifyModel = new TemplateVerifyModel();\r\n          this.TemplateVerifyModel.TypeCode = SendNotificationContentEnum.MailtoCCReferencyaboutOrder;\r\n          this.TemplateVerifyModel.FilterId = id;\r\n          this.TemplateVerifyModel.ModuleName = this.notificationModuleNameEnum.OrderGenerationNotification;\r\n        if (isEmail == true) {\r\n          this.TemplateVerifyModel.NotificationType = MessageTypeEnum.EmailType;\r\n        }\r\n        else{\r\n          this.TemplateVerifyModel.NotificationType = MessageTypeEnum.SmsType;\r\n        }\r\n\r\n\r\n          const _dialogRef = this._dialog.open(NotificationPreviewPopupComponent, {\r\n            width: \"1000px\",\r\n            data:  this.TemplateVerifyModel\r\n          });\r\n          _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n            if (result) {\r\n\r\n            }\r\n          });\r\n        }\r\n\r\n\r\n\r\n  orderCancellationClick(data) {\r\n    const _dialogRef = this._dialog.open(OrderCancellationDialogComponent, {\r\n      width: \"500px\",\r\n      data: data\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n      if (result) {\r\n        this.GetList();\r\n      }\r\n    });\r\n  }\r\n\r\n  previewClick(id) {\r\n    this._generateOrderService.GeneratePdf(id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const result = <GeneratedPdfModel>data.Data;\r\n          // --------generate pdf without esign\r\n          const linkSource = result.Url;\r\n          const downloadLink = document.createElement(\"a\");\r\n          const fileName = name;\r\n          downloadLink.href = linkSource;\r\n          downloadLink.download = fileName;\r\n          downloadLink.target = \"blank\";\r\n          downloadLink.click();\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n  //#endregion\r\n}\r\n","module.exports = \"table td, th {padding: 10px !important;vertical-align: middle !important;}.invoice {background: white;display: block;margin: 0 auto;margin-bottom: 0.5cm;box-shadow: 0 0 0.5cm rgba(0,0,0,0.1);padding: 15px;margin-left: 10px;margin-right: 10px;}.invoice .table>tbody>tr>td, page .table>thead>tr>th {padding: 4px;border: none;}img.logo {max-width: 280px;}.invoice-heading {font-size: 25px;text-transform: uppercase;text-decoration: underline;margin: 40px 0px;font-weight: bold;}.terms {text-align: center;margin: 20px 0px;}.delivery {text-align: left;}.msg_thank {text-align: center;}.msg_thank {text-align: center;font-weight: bold;margin: 80px 0px;}.footer {text-align: center;font-weight: 600;}ul.content-list li {margin-bottom: 10px;line-height: 25px;}ul.content-list {margin: 0px;padding: 0px;}h2.ttile {font-size: 20px;margin-bottom: 22px;}html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, caption {margin: 0px !important;padding: 0px !important;border: 0px !important;outline: 0px !important;font-size: 100%;vertical-align: baseline;background: transparent;}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9nZW5lcmF0ZS1vcmRlci9nZW5lcmF0ZS1vcmRlci1wcmV2aWV3L2dlbmVyYXRlLW9yZGVyLXByZXZpZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxjQUFjLHdCQUF3QixDQUFDLGlDQUFpQyxDQUFDLENBQUMsVUFBVSxpQkFBaUIsQ0FBQyxjQUFjLENBQUMsY0FBYyxDQUFDLG9CQUFvQixDQUFDLHFDQUFxQyxDQUFDLGFBQWEsQ0FBQyxpQkFBaUIsQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDLHNEQUFzRCxZQUFZLENBQUMsWUFBWSxDQUFDLENBQUMsVUFBVSxnQkFBZ0IsQ0FBQyxDQUFDLGtCQUFrQixlQUFlLENBQUMseUJBQXlCLENBQUMsMEJBQTBCLENBQUMsZ0JBQWdCLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxRQUFRLGtCQUFrQixDQUFDLGdCQUFnQixDQUFDLENBQUMsV0FBVyxnQkFBZ0IsQ0FBQyxDQUFDLFlBQVksa0JBQWtCLENBQUMsQ0FBQyxZQUFZLGtCQUFrQixDQUFDLGlCQUFpQixDQUFDLGdCQUFnQixDQUFDLENBQUMsU0FBUyxrQkFBa0IsQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDLG9CQUFvQixtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDLGlCQUFpQixXQUFXLENBQUMsWUFBWSxDQUFDLENBQUMsVUFBVSxlQUFlLENBQUMsbUJBQW1CLENBQUMsQ0FBQyxpVEFBaVQsc0JBQXNCLENBQUMsdUJBQXVCLENBQUMsc0JBQXNCLENBQUMsdUJBQXVCLENBQUMsZUFBZSxDQUFDLHdCQUF3QixDQUFDLHVCQUF1QixDQUFDIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9vcmRlci9nZW5lcmF0ZS1vcmRlci9nZW5lcmF0ZS1vcmRlci1wcmV2aWV3L2dlbmVyYXRlLW9yZGVyLXByZXZpZXcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHRkLCB0aCB7cGFkZGluZzogMTBweCAhaW1wb3J0YW50O3ZlcnRpY2FsLWFsaWduOiBtaWRkbGUgIWltcG9ydGFudDt9Lmludm9pY2Uge2JhY2tncm91bmQ6IHdoaXRlO2Rpc3BsYXk6IGJsb2NrO21hcmdpbjogMCBhdXRvO21hcmdpbi1ib3R0b206IDAuNWNtO2JveC1zaGFkb3c6IDAgMCAwLjVjbSByZ2JhKDAsMCwwLDAuMSk7cGFkZGluZzogMTVweDttYXJnaW4tbGVmdDogMTBweDttYXJnaW4tcmlnaHQ6IDEwcHg7fS5pbnZvaWNlIC50YWJsZT50Ym9keT50cj50ZCwgcGFnZSAudGFibGU+dGhlYWQ+dHI+dGgge3BhZGRpbmc6IDRweDtib3JkZXI6IG5vbmU7fWltZy5sb2dvIHttYXgtd2lkdGg6IDI4MHB4O30uaW52b2ljZS1oZWFkaW5nIHtmb250LXNpemU6IDI1cHg7dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTt0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTttYXJnaW46IDQwcHggMHB4O2ZvbnQtd2VpZ2h0OiBib2xkO30udGVybXMge3RleHQtYWxpZ246IGNlbnRlcjttYXJnaW46IDIwcHggMHB4O30uZGVsaXZlcnkge3RleHQtYWxpZ246IGxlZnQ7fS5tc2dfdGhhbmsge3RleHQtYWxpZ246IGNlbnRlcjt9Lm1zZ190aGFuayB7dGV4dC1hbGlnbjogY2VudGVyO2ZvbnQtd2VpZ2h0OiBib2xkO21hcmdpbjogODBweCAwcHg7fS5mb290ZXIge3RleHQtYWxpZ246IGNlbnRlcjtmb250LXdlaWdodDogNjAwO311bC5jb250ZW50LWxpc3QgbGkge21hcmdpbi1ib3R0b206IDEwcHg7bGluZS1oZWlnaHQ6IDI1cHg7fXVsLmNvbnRlbnQtbGlzdCB7bWFyZ2luOiAwcHg7cGFkZGluZzogMHB4O31oMi50dGlsZSB7Zm9udC1zaXplOiAyMHB4O21hcmdpbi1ib3R0b206IDIycHg7fWh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSwgaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLCBhLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsIGRlbCwgZGZuLCBlbSwgZm9udCwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCwgc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhciwgYiwgdSwgaSwgY2VudGVyLCBkbCwgZHQsIGRkLCBvbCwgdWwsIGxpLCBmaWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCwgY2FwdGlvbiB7bWFyZ2luOiAwcHggIWltcG9ydGFudDtwYWRkaW5nOiAwcHggIWltcG9ydGFudDtib3JkZXI6IDBweCAhaW1wb3J0YW50O291dGxpbmU6IDBweCAhaW1wb3J0YW50O2ZvbnQtc2l6ZTogMTAwJTt2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7fSJdfQ== */\"","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { OrderGenerateMasterViewModel, GeneratedPdfModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { GenerateOrderService } from 'src/app/Shared/Service/generate-order.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { SafeHtml, DomSanitizer } from '@angular/platform-browser';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-generate-order-preview',\r\n  templateUrl: './generate-order-preview.component.html',\r\n  styleUrls: ['./generate-order-preview.component.css']\r\n})\r\nexport class GenerateOrderPreviewComponent implements OnInit {\r\n  model: OrderGenerateMasterViewModel;\r\n  html: SafeHtml;\r\n  esignData: string;\r\n\r\n  // @ViewChild('btnESign',null) btnESign: ElementRef<HTMLElement>\r\n\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _generateOrderService: GenerateOrderService,\r\n    private readonly _alertService: AlertService,\r\n    private _route: ActivatedRoute,\r\n    private sanitizer: DomSanitizer,\r\n    private readonly _httpclient: HttpClient,\r\n\r\n  ) {\r\n    this.model = new OrderGenerateMasterViewModel();\r\n    this._parentApi.setpagelayout(\r\n      \"Generate Order Preview :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"order/generateorder\"\r\n    );\r\n    this.model.Id = this._route.snapshot.params.id;\r\n    if (this.model.Id) {\r\n      this.GetById();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n\r\n  GetById() {\r\n    this._generateOrderService.GetById(this.model.Id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.model = <OrderGenerateMasterViewModel>data.Data;\r\n          this.html = this.sanitizer.bypassSecurityTrustHtml(this.model.Content);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  downloadPdf(isPdf: boolean = false) {\r\n    \r\n    if (isPdf) {\r\n      this._generateOrderService.GeneratePdf(this.model.Id).subscribe(\r\n        data => {\r\n          \r\n          if (data.IsSuccess) {\r\n            const result = <GeneratedPdfModel>data.Data;\r\n\r\n           //// --------generate pdf with esign\r\n            // this.esignData = result.Url;\r\n            // document.getElementById('esignDatasss').innerHTML=\"<input type='text' id='esignData' name='esignData' value='\"+ this.esignData+\"'>\";\r\n            // document.getElementById('btnESign').click();\r\n\r\n\r\n           // --------generate pdf without esign\r\n            const linkSource = result.Url;\r\n            const downloadLink = document.createElement(\"a\");\r\n            const fileName = name;\r\n\r\n            downloadLink.href = linkSource;\r\n            downloadLink.download = fileName;\r\n            downloadLink.target = \"blank\";\r\n            downloadLink.click();\r\n\r\n          }\r\n        },\r\n        error => {\r\n          \r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this._generateOrderService.GenerateWord(this.model.Id).subscribe(\r\n        data => {\r\n          \r\n          if (data.IsSuccess) {\r\n            const result = <GeneratedPdfModel>data.Data;\r\n\r\n            // ----------------generate Word without esign\r\n            const linkSource = result.Url;\r\n            const downloadLink = document.createElement(\"a\");\r\n            const fileName = name;\r\n\r\n            downloadLink.href = linkSource;\r\n            downloadLink.download = fileName;\r\n            downloadLink.target = \"blank\";\r\n            downloadLink.click();\r\n\r\n          }\r\n        },\r\n        error => {\r\n          \r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \".make-gold {\\r\\n  background-color: #fde1dc\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9nZW5lcmF0ZS1vcmRlci9nZW5lcmF0ZS1vcmRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0U7QUFDRiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvZ2VuZXJhdGUtb3JkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWtlLWdvbGQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZGUxZGNcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OrderGenerateMasterListModel, GeneratedPdfModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { IndexModel, PermissionModel, CommonDocModel } from 'src/app/Shared/Model/general-model';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { GenerateOrderService } from 'src/app/Shared/Service/generate-order.service';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { OTPDialogComponent } from 'src/app/otp-dialog/otp-dialog.component';\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\n\r\n@Component({\r\n  selector: 'app-generate-order',\r\n  templateUrl: './generate-order.component.html',\r\n  styleUrls: ['./generate-order.component.css']\r\n})\r\nexport class GenerateOrderComponent implements OnInit {\r\n//#region << Variable >>\r\nlistModel: OrderGenerateMasterListModel[];\r\ndataSource: MatTableDataSource<OrderGenerateMasterListModel>;\r\ndisplayedColumns: string[] = [\"index\",\"DepartmentTitle\", \"Title\", \"TypeName\",\"OrderNo\",\"Date\",\"CreatedDate\",\"DepartmentCode\",\"Id\", \"Action\"];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  { Value: \"TypeName\", Text: \"Type\" },\r\n  { Value: \"Title\", Text: \"Title\" },\r\n  { Value: \"OrderNo\", Text: \"Document No.\" },\r\n];\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\nindexModel: IndexModel;\r\ntotalRecords: number;\r\ngenerateOrderPermission: PermissionModel = this._commonService.GetPagePermission(\"/order/generateorder\", \"/order/generateorder/add\", \"/order/generateorder/preview\", \"/order/generateorder/edit\",\"/order/generateorder/Lock\");\r\nhelpDocumentEnum = HelpDocumentEnum;\r\nhelpDocument:CommonDocModel;\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\"},\r\n  { Value: \"Title\", Text: \"Title\" },\r\n  { Value: \"TypeName\", Text: \"Type\" },\r\n  { Value: \"OrderNo\", Text: \"Document No\" },\r\n  { Value: \"Date\", Text: \" Date of Issue\" },\r\n  { Value: \"CreatedDate\", Text: \" Date of Entry\" },\r\n  { Value: \"DepartmentCode\", Text: \" Department Code\" },\r\n  { Value: \"Id\", Text: \" Order code\" }\r\n];\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private readonly _generateOrderService: GenerateOrderService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private _parentApi: AppComponent,\r\n  private readonly _dialog: MatDialog,) {\r\n\r\nthis.generateOrderPermission.AddPageAccess\r\n? this._parentApi.setpagelayout(\"List Of Document Generated Online :\",\"add\",\"Add New\",\"order/generateorderadd\")\r\n: this._parentApi.setpagelayout(\"List Of Document Generated Online  :\");\r\n\r\n  this.indexModel = new IndexModel();\r\n}\r\n//#endregion\r\n\r\n//#region << Method >>\r\nngOnInit() {\r\n  this.GetList();\r\n  this.GetHelpDocument();\r\n}\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc = event.direction === AppSetting.orderByDscAsc ? AppSetting.orderByAsc : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nGetList() {\r\n  this._generateOrderService.GetList(this.indexModel).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.listModel = <OrderGenerateMasterListModel[]>data.Data.Data;\r\n        this.dataSource = new MatTableDataSource<OrderGenerateMasterListModel>(this.listModel);\r\n        if (this.indexModel.IsPostBack === false) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.totalRecords = data.Data.TotalRecords;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ndownloadPdf(Url) {\r\n  const linkSource = Url;\r\n  const downloadLink = document.createElement(\"a\");\r\n\r\n  downloadLink.href = linkSource;\r\n  downloadLink.download = \"Help Document\";\r\n  downloadLink.click();\r\n}\r\n\r\n// statusClick(id) {\r\n//   this._commonService.GenerateOTP().subscribe(\r\n//     data => {\r\n//       if (data.IsSuccess) {\r\n\r\n//         const _dialogRef = this._dialog.open(OTPDialogComponent, {\r\n//           width: \"500px\",\r\n//           disableClose:true\r\n//         });\r\n//         _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n\r\n//           if (result) {\r\n\r\n//             this._generateOrderService.SetStatus(id).subscribe(\r\n//               data => {\r\n//                 if (data.IsSuccess) {\r\n//                   this.GetList();\r\n//                   this._alertService.success(data.Message);\r\n//                 } else {\r\n//                   this._alertService.error(data.Message);\r\n//                 }\r\n//               },\r\n//               error => {\r\n//                 this._alertService.error(error.message);\r\n//               }\r\n//             );\r\n\r\n//           }\r\n//         });\r\n//       }else{\r\n//         this._alertService.error(data.Message);\r\n//       }\r\n//     },\r\n//     error => {\r\n//       this._alertService.error(error.message);\r\n//     }\r\n//   );\r\n// }\r\n\r\nSearchByKeyword(searchValue) {\r\n  this.indexModel.Search = searchValue;\r\n  this.GetList();\r\n}\r\n\r\npreviewClick(id){\r\n  \r\n  this._generateOrderService.GeneratePdf(id).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        const result = <GeneratedPdfModel>data.Data;\r\n       // --------generate pdf without esign\r\n        const linkSource = result.Url;\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = name;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.target = \"blank\";\r\n        downloadLink.click();\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\napproveClick(id){\r\n  this._generateOrderService.GenerateUINumber(id).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetHelpDocument() {\r\n  this._commonService.GetHelpDocument(this.helpDocumentEnum.GenerateOrder).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.helpDocument=<CommonDocModel>data.Data;\r\n      }else{\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ndownloadDoc(Url,isHelpDoc : Boolean=false) {\r\n  \r\n  const linkSource = Url;\r\n  const downloadLink = document.createElement(\"a\");\r\n    if (isHelpDoc) {\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Help Document\";\r\n      downloadLink.click();\r\n    }else{\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Blank Document\";\r\n      downloadLink.click();\r\n    }\r\n\r\n}\r\n\r\n\r\n//#endregion\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvZ2VuZXJhdGUtb3JkZXIvb3JkZXItZmluYWwtYXBwcm92YWwtbGlzdC9vcmRlci1maW5hbC1hcHByb3ZhbC1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","import { GeneratedPdfModel } from './../../../../Shared/Model/generate-order.model';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OrderFinalAProvalListModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { MatTableDataSource, MatPaginator, MatSort, MatDialog } from '@angular/material';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { IndexModel, PermissionModel, CommonDocModel } from 'src/app/Shared/Model/general-model';\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\nimport { GenerateOrderService } from 'src/app/Shared/Service/generate-order.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { OTPDialogComponent } from 'src/app/otp-dialog/otp-dialog.component';\r\nimport { DispatchDialogComponent } from '../dispatch-dialog/dispatch-dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-order-final-approval-list',\r\n  templateUrl: './order-final-approval-list.component.html',\r\n  styleUrls: ['./order-final-approval-list.component.css']\r\n})\r\nexport class OrderFinalApprovalListComponent implements OnInit {\r\n//#region << Variable >>\r\nlistModel: OrderFinalAProvalListModel[];\r\ndataSource: MatTableDataSource<OrderFinalAProvalListModel>;\r\ndisplayedColumns: string[] = [\"index\",\"DepartmentTitle\", \"Title\", \"TypeName\",\"OrderNo\",\"Date\",\"CreatedDate\",\"DepartmentCode\",\"Id\", \"Action\"];\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  { Value: \"TypeName\", Text: \"Type\" },\r\n  { Value: \"Title\", Text: \"Title\" },\r\n  { Value: \"OrderNo\", Text: \"Document No.\" },\r\n];\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n@ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\nindexModel: IndexModel;\r\ntotalRecords: number;\r\ngenerateOrderPermission: PermissionModel = this._commonService.GetPagePermission(\"/order/generateorder\", \"/order/generateorder/add\", \"/order/generateorder/preview\", \"/order/generateorder/edit\",\"/order/generateorder/Lock\");\r\nhelpDocumentEnum = HelpDocumentEnum;\r\nhelpDocument:CommonDocModel;\r\nsearchColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\"},\r\n  { Value: \"Title\", Text: \"Title\" },\r\n  { Value: \"TypeName\", Text: \"Type\" },\r\n  { Value: \"OrderNo\", Text: \"Document No\" },\r\n  { Value: \"Date\", Text: \" Date of Issue\" },\r\n  { Value: \"CreatedDate\", Text: \" Date of Entry\" },\r\n  { Value: \"DepartmentCode\", Text: \" Department Code\" },\r\n  { Value: \"Id\", Text: \" Order code\" }\r\n];\r\n//#endregion\r\n\r\n//#region << constructor >>\r\n\r\nconstructor(\r\n  private readonly _generateOrderService: GenerateOrderService,\r\n  private readonly _alertService: AlertService,\r\n  public readonly _commonService: CommonService,\r\n  private _parentApi: AppComponent,\r\n  private readonly _dialog: MatDialog,) {\r\n\r\nthis.generateOrderPermission.AddPageAccess\r\n? this._parentApi.setpagelayout(\"List Of Document For Final Approval :\",\"add\",\"Add New\",\"order/generateorderadd\")\r\n: this._parentApi.setpagelayout(\"List Of Document For Final Approval :\");\r\n\r\n  this.indexModel = new IndexModel();\r\n}\r\n//#endregion\r\n\r\n//#region << Method >>\r\nngOnInit() {\r\n  this.GetList();\r\n  this.GetHelpDocument();\r\n}\r\n\r\nSortData(event) {\r\n  this.indexModel.OrderBy = event.active;\r\n  this.indexModel.OrderByAsc = event.direction === AppSetting.orderByDscAsc ? AppSetting.orderByAsc : AppSetting.orderByDsc;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.indexModel.Page = event.pageIndex + 1;\r\n  this.indexModel.PageSize = event.pageSize;\r\n  this.indexModel.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nGetList() {\r\n  this._generateOrderService.GetList(this.indexModel).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.listModel = <OrderFinalAProvalListModel[]>data.Data.Data;\r\n        this.dataSource = new MatTableDataSource<OrderFinalAProvalListModel>(this.listModel);\r\n        if (this.indexModel.IsPostBack === false) {\r\n          this.dataSource.paginator = this.paginator;\r\n          this.totalRecords = data.Data.TotalRecords;\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ndownloadPdf(Url) {\r\n  const linkSource = Url;\r\n  const downloadLink = document.createElement(\"a\");\r\n\r\n  downloadLink.href = linkSource;\r\n  downloadLink.download = \"Help Document\";\r\n  downloadLink.click();\r\n}\r\n\r\nstatusClick(id) {\r\n  this._commonService.GenerateOTP().subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        const _dialogRef = this._dialog.open(OTPDialogComponent, {\r\n          width: \"500px\",\r\n          disableClose: true\r\n        });\r\n        _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n          if (result) {\r\n\r\n            const _dialogRef = this._dialog.open(DispatchDialogComponent, {\r\n              width: \"500px\",\r\n              disableClose: true\r\n            });\r\n            _dialogRef.afterClosed().subscribe((dispatchResult: boolean) => {\r\n              if (dispatchResult) {\r\n\r\n            this._generateOrderService.SetStatus(id,dispatchResult).subscribe(\r\n              data => {\r\n                if (data.IsSuccess) {\r\n                  this.GetList();\r\n                  this._alertService.success(data.Message);\r\n                } else {\r\n                  this._alertService.error(data.Message);\r\n                }\r\n              },\r\n              error => {\r\n                this._alertService.error(error.message);\r\n              }\r\n            );\r\n            }\r\n          });\r\n\r\n          }\r\n\r\n\r\n        });\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nSearchByKeyword(searchValue) {\r\n  this.indexModel.Search = searchValue;\r\n  this.GetList();\r\n}\r\n\r\npreviewClick(id){\r\n  \r\n  this._generateOrderService.GeneratePdf(id).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        const result = <GeneratedPdfModel>data.Data;\r\n       // --------generate pdf without esign\r\n        const linkSource = result.Url;\r\n        const downloadLink = document.createElement(\"a\");\r\n        const fileName = name;\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = fileName;\r\n        downloadLink.target = \"blank\";\r\n        downloadLink.click();\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\napproveClick(id){\r\n  this._generateOrderService.GenerateUINumber(id).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        this.GetList();\r\n        this._alertService.success(data.Message);\r\n      } else {\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetHelpDocument() {\r\n  this._commonService.GetHelpDocument(this.helpDocumentEnum.GenerateOrder).subscribe(\r\n    data => {\r\n      if (data.IsSuccess) {\r\n        \r\n        this.helpDocument=<CommonDocModel>data.Data;\r\n      }else{\r\n        this._alertService.error(data.Message);\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\ndownloadDoc(Url,isHelpDoc : Boolean=false) {\r\n  \r\n  const linkSource = Url;\r\n  const downloadLink = document.createElement(\"a\");\r\n    if (isHelpDoc) {\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Help Document\";\r\n      downloadLink.click();\r\n    }else{\r\n      downloadLink.href = linkSource;\r\n      downloadLink.download = \"Blank Document\";\r\n      downloadLink.click();\r\n    }\r\n\r\n}\r\n\r\n\r\n//#endregion\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXItY2FuY2VsbGF0aW9uLWRpYWxvZy9vcmRlci1jYW5jZWxsYXRpb24tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { GlobalMessagesModel } from \"src/app/Shared/Model/common.messages\";\r\nimport { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { DDLModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport {\r\n  CancellationLookupModel,\r\n  DepartmentSetupCancellationModel\r\n} from \"src/app/Shared/Model/order-cancellation.model\";\r\nimport { MatDialog, MAT_DIALOG_DATA, MatDialogRef } from \"@angular/material\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { OrderCancellationService } from \"src/app/Shared/Service/order-cancellation.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { FormControl, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"app-order-cancellation-dialog\",\r\n  templateUrl: \"./order-cancellation-dialog.component.html\",\r\n  styleUrls: [\"./order-cancellation-dialog.component.css\"]\r\n})\r\nexport class OrderCancellationDialogComponent implements OnInit {\r\n  //#region << Variable >>\r\n  dDLList: DDLModel;\r\n  model: CancellationLookupModel;\r\n  reason = new FormControl(\"\", [Validators.required]);\r\n\r\n  //#endregion\r\n\r\n  //#region <<Constructor>>\r\n  constructor(\r\n    private _dialog: MatDialog,\r\n    public readonly _dialogRef: MatDialogRef<OrderCancellationDialogComponent>,\r\n    private readonly _orderCancellationService: OrderCancellationService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _alertService: AlertService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any\r\n  ) {\r\n    \r\n    this.model = new CancellationLookupModel();\r\n    if (data) {\r\n      this.model.OrderId = data;\r\n    }\r\n  }\r\n  //#endregion\r\n\r\n  //#region << Methods>>\r\n  ngOnInit() {\r\n    this.GetDDLList();\r\n    this.GetByLoggedInDepartment();\r\n  }\r\n\r\n  GetByLoggedInDepartment() {\r\n    this._orderCancellationService.GetByLoggedInDepartment().subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          const temp = <DepartmentSetupCancellationModel>data.Data;\r\n          if (temp.IsAutoSMS) {\r\n            this.model.IsAutoSMS = temp.IsAutoSMS;\r\n          }\r\n          if (temp.IsAutoEmail) {\r\n            this.model.IsAutoEmail = temp.IsAutoEmail;\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.ddlCancellationOrderKey).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  SaveClick() {\r\n    \r\n    this.reason.markAsTouched();\r\n    if (this.reason.valid) {\r\n      if (this.model.OrderId) {\r\n        this._orderCancellationService\r\n          .SaveCancellationOrder(this.model)\r\n          .subscribe(\r\n            data => {\r\n              if (data.IsSuccess) {\r\n                this._alertService.success(data.Message);\r\n                this._dialogRef.close(true);\r\n              } else {\r\n                this._alertService.error(data.Message);\r\n              }\r\n            },\r\n            error => {\r\n              console.log(error);\r\n              this._alertService.error(error.message);\r\n            }\r\n          );\r\n      } else {\r\n        this._alertService.error(GlobalMessagesModel.CancellationIdNotExist);\r\n      }\r\n    }\r\n  }\r\n\r\n  onNoClick() {\r\n    this._dialogRef.close();\r\n  }\r\n  //#endregion\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXItZGV0YWlsLXJlcG9ydC9vcmRlci1kZXRhaWwtcmVwb3J0LmNvbXBvbmVudC5jc3MifQ== */\"","import { MatTableDataSource, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { MatSort } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { ColumnHeaderModel, DDLModel, DdlItemModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { OrderReportSearchModel, OrderGenerateOrderReportSearchResultModel } from 'src/app/Shared/Model/orderlist.model';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-order-detail-report',\r\n  templateUrl: './order-detail-report.component.html',\r\n  styleUrls: ['./order-detail-report.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class OrderDetailReportComponent implements OnInit {\r\n  indexModel: OrderReportSearchModel;\r\n  dDLList: DDLModel;\r\n  ddlSubType : DdlItemModel[] = [];\r\n  dataSource: any;\r\n  listModel: OrderGenerateOrderReportSearchResultModel[];\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"SectorName\",\r\n    \"TypeName\",\r\n    \"DocNumber\",\r\n    \"Title\",\r\n    \"RefNo\",\r\n    \"LinkToScheme\",\r\n    \"LinkWith\",\r\n    \"Remark\",\r\n    \"Attachment\",\r\n  ];\r\n\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  constructor(\r\n    private _parentComponent: AppComponent,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    public readonly _commonService: CommonService,\r\n    private readonly _route: ActivatedRoute,\r\n  ) {\r\n    this._parentComponent.setpagelayout(\"Gov. Document Detail Report :\", \"\", \"\", \"\");\r\n    this.indexModel = new OrderReportSearchModel();\r\nif(this._route.snapshot.params.dept){\r\n  this.indexModel.DepartmentCode =String(this._route.snapshot.params.dept);\r\n  this.GetList();\r\n}\r\n\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetDDLList();\r\n  }\r\n\r\n  GetList() {\r\n    this._orderEntryService.OrderDetailReport(this.indexModel).subscribe(\r\n      (data) => {\r\n        \r\n        if (data.IsSuccess) {\r\n          this.listModel = <OrderGenerateOrderReportSearchResultModel[]>data.Data;\r\n          this.dataSource = new MatTableDataSource<OrderGenerateOrderReportSearchResultModel>(this.listModel);\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      },\r\n      (error) => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url, name) {\r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n\r\n\r\nprint() {\r\n  let printContents , popupWin ;\r\n  printContents = document.getElementById(\"orderdetailprint\").outerHTML;\r\n  popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=100%,width=auto\");\r\n    popupWin.document.open();\r\n     popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Order Detail Report</title>\r\n            <style>\r\n            table th,table td{\r\n              border: 1px solid black;\r\n            }\r\n            table{\r\n              border-collapse: collapse;\r\n            }\r\n            span{\r\n              font-weight: bold;\r\n              margin-bottom: 10px;\r\n            }\r\n            </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n}\r\n\r\nsearchClick() {\r\n\r\n  if (this.indexModel.FromDateOfEntry) {\r\n    const uTCFromDate = new Date(\r\n      Date.UTC(new Date( this.indexModel.FromDateOfEntry).getFullYear(), new Date( this.indexModel.FromDateOfEntry).getMonth(), new Date( this.indexModel.FromDateOfEntry).getDate())\r\n      ).toISOString();\r\n      this.indexModel.FromDateOfEntry = uTCFromDate;\r\n  }\r\n\r\n  if (this.indexModel.ToDateOfEntry) {\r\n    const uTCToDate = new Date(\r\n      Date.UTC(new Date( this.indexModel.ToDateOfEntry).getFullYear(), new Date( this.indexModel.ToDateOfEntry).getMonth(), new Date( this.indexModel.ToDateOfEntry).getDate())\r\n      ).toISOString();\r\n      this.indexModel.ToDateOfEntry = uTCToDate;\r\n  }\r\n  if (this.indexModel.DateOfIssue) {\r\n    const uTCToDate = new Date(\r\n      Date.UTC(new Date( this.indexModel.DateOfIssue).getFullYear(), new Date( this.indexModel.DateOfIssue).getMonth(), new Date( this.indexModel.DateOfIssue).getDate())\r\n      ).toISOString();\r\n      this.indexModel.DateOfIssue = uTCToDate;\r\n  }\r\n  this.GetList();\r\n}\r\n\r\n\r\nGetDDLList() {\r\n  \r\n    this._commonService.GetAllDDL(AppSetting.OrderDetailDDLKeys).subscribe(\r\n      data => {\r\n        \r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetSubType(departmentCode, typecode) {\r\n    \r\n    if (departmentCode && typecode) {\r\n      this._commonService.GetOrderSubTypeByTypeAndDepartment(departmentCode, typecode).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this.ddlSubType = <DdlItemModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlSubType = null;\r\n    }\r\n  }\r\n\r\n  Reset(){\r\n    this.indexModel = new OrderReportSearchModel();\r\n    this.listModel=[];\r\n    //this.GetList();\r\n  }\r\n\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9vcmRlci1yZXBvcnQvb3JkZXItZGVwYXJ0bWVudC1yZXBvcnQvb3JkZXItZGVwYXJ0bWVudC1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXItcmVwb3J0L29yZGVyLWRlcGFydG1lbnQtcmVwb3J0L29yZGVyLWRlcGFydG1lbnQtcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRyLm1hdC1mb290ZXItcm93IHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXX0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { DateWiseSearchModel } from 'src/app/Shared/Model/general-model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { MatTableDataSource, MatSort, MatPaginator, DateAdapter, MAT_DATE_FORMATS } from '@angular/material';\r\nimport { OrderDepartmentCountReportModel } from 'src/app/Shared/Model/Master/jankalyanLogMaster.model';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\n\r\n@Component({\r\n  selector: 'app-order-department-report',\r\n  templateUrl: './order-department-report.component.html',\r\n  styleUrls: ['./order-department-report.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class OrderDepartmentReportComponent implements OnInit {\r\n\r\n  //#region  Variable\r\n\r\n  listModel: OrderDepartmentCountReportModel[];\r\n  model: DateWiseSearchModel;\r\n  dataSource: any;\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"DepartmentTitle\",\r\n    \"DeActiveOrderCount\",\r\n    \"ActiveOrderCount\",\r\n\"Action\"\r\n  ];\r\n\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n\r\n  ];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  totalActiveDepartmentOrderCount: number;\r\n  totalDeActiveDepartmentOrderCount: number;\r\n\r\n  //#endregion\r\n\r\n  //#region Constructor\r\n  constructor( private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private _parentComponent: AppComponent,) {\r\n      this._parentComponent.setpagelayout(\"Gov. Document Department count Report :\", \"\", \"\", \"\");\r\n      this.model = new DateWiseSearchModel();\r\n    }\r\n\r\n\r\n  //#endregion\r\n\r\n  //#region Method\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getTotalRecord() {\r\n    \r\n    this.totalActiveDepartmentOrderCount = this.listModel\r\n      .map((t) => t.ActiveOrderCount)\r\n      .reduce((acc, value) => acc + value, 0);\r\n\r\n      this.totalDeActiveDepartmentOrderCount = this.listModel\r\n      .map((t) => t.DeActiveOrderCount)\r\n      .reduce((acc, value) => acc + value, 0);\r\n\r\n  }\r\n\r\n  GetList() {\r\n    \r\n    this._orderEntryService.GetOrderDepartmentCountReport(this.model).subscribe(\r\n      data => {\r\n        \r\n        if (data.IsSuccess)\r\n         {\r\n          this.listModel = <OrderDepartmentCountReportModel[]>data.Data;\r\n          this.dataSource = new MatTableDataSource<OrderDepartmentCountReportModel>(this.listModel);\r\n          if (this.model.IsPostBack === false) {\r\n            this.dataSource.paginator = this.paginator;\r\n            // this.totalRecords = data.Data.TotalRecords;\r\n            this.dataSource.sort = this.sort;\r\n            this.getTotalRecord();\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  searchClick() {\r\n    \r\n    if (this.model.EntryFromDate) {\r\n      const uTCFromDate = new Date(\r\n        Date.UTC(\r\n          new Date(this.model.EntryFromDate).getFullYear(),\r\n          new Date(this.model.EntryFromDate).getMonth(),\r\n          new Date(this.model.EntryFromDate).getDate()\r\n        )\r\n      ).toISOString();\r\n      this.model.EntryFromDate = uTCFromDate;\r\n    }\r\n\r\n    if (this.model.EntryToDate) {\r\n      const uTCToDate = new Date(\r\n        Date.UTC(\r\n          new Date(this.model.EntryToDate).getFullYear(),\r\n          new Date(this.model.EntryToDate).getMonth(),\r\n          new Date(this.model.EntryToDate).getDate()\r\n        )\r\n      ).toISOString();\r\n      this.model.EntryToDate = uTCToDate;\r\n    }\r\n\r\n    this.GetList();\r\n  }\r\n\r\n  clearClick() {\r\n    \r\n    this.model = new DateWiseSearchModel();\r\n    this.model.EntryFromDate = null;\r\n    this.model.EntryToDate = null;\r\n  }\r\n\r\n  SearchByKeyword(event) {\r\n    \r\n    this.GetList();\r\n  }\r\n\r\n\r\nprint() {\r\n  let printContents , popupWin ;\r\n  printContents = document.getElementById(\"orderprint\").outerHTML;\r\n  popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=100%,width=auto\");\r\n    popupWin.document.open();\r\n     popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Summary Report</title>\r\n            <style>\r\n            table th,table td{\r\n              border: 1px solid black;\r\n            }\r\n            table{\r\n              border-collapse: collapse;\r\n            }\r\n            span{\r\n              font-weight: bold;\r\n              margin-bottom: 10px;\r\n            }\r\n            </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n}\r\n\r\nSortData(event) {\r\n  \r\n  this.model.OrderBy = event.active;\r\n  this.model.OrderByAsc =\r\n    event.direction === AppSetting.orderByDscAsc\r\n      ? AppSetting.orderByAsc\r\n      : AppSetting.orderByDsc;\r\n  this.model.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\nonPaginateChange(event) {\r\n  this.model.Page = event.pageIndex + 1;\r\n  this.model.PageSize = event.pageSize;\r\n  this.model.IsPostBack = true;\r\n  this.GetList();\r\n}\r\n\r\n\r\n  //#endregion\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXItcmVwb3J0L29yZGVyLWRvY3VtZW50dHlwZS1zdW1tYXJ5LXJlcG9ydC9vcmRlci1kb2N1bWVudHR5cGUtc3VtbWFyeS1yZXBvcnQuY29tcG9uZW50LmNzcyJ9 */\"","import { MatSort, MatTableDataSource } from '@angular/material';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { OrderSummaryTypeReportWithLastTransactionModel, OrderSummaryReportFilterModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { IndexModel } from 'src/app/Shared/Model/general-model';\r\nimport { ColumnHeaderModel, DDLModel, DdlItemModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-order-documenttype-summary-report',\r\n  templateUrl: './order-documenttype-summary-report.component.html',\r\n  styleUrls: ['./order-documenttype-summary-report.component.css']\r\n})\r\nexport class OrderDocumenttypeSummaryReportComponent implements OnInit {\r\n//#region Variable\r\nlistModel: OrderSummaryTypeReportWithLastTransactionModel[];\r\nindexModel: IndexModel;\r\nfilterModel: OrderSummaryReportFilterModel;\r\ndataSource: any;\r\ntotalOrderCount: number;\r\ntotalActiveOrderCount: number;\r\ntotalDeActiveOrderCount: number;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"DepartmentTitle\",\r\n  \"Type\",\r\n   \"LastTransactionDate\",\r\n  \"OrderCount\",\r\n  \"ActiveOrderCount\",\r\n  \"DeActiveOrderCount\",\r\n  \"Action\"\r\n];\r\n\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n\r\n   { Value: \"Type\", Text: \"Type\" }\r\n];\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\ndDLList: DDLModel;\r\nddlDepartment: DdlItemModel[] = [];\r\n\r\n//#endregion Variable\r\n\r\n//#region constructor\r\nconstructor(\r\n  private readonly _alertService: AlertService,\r\n  private readonly _orderEntryService: OrderEntryService,\r\n  private _parentComponent: AppComponent,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _route: ActivatedRoute,\r\n) {\r\n  \r\n  this._parentComponent.setpagelayout(\"Gov. Document Type Summary Report With Last Transaction Date List :\", \"\", \"\", \"\");\r\n  this.indexModel = new IndexModel();\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n\r\n  if(this._route.snapshot.params.dpt){\r\n    \r\n    this.filterModel.DepartmentCode =String(this._route.snapshot.params.dpt);\r\n    this.GetList();\r\n  }\r\n}\r\n\r\n//#endregion constructor\r\n\r\n//#region Methods\r\n\r\nngOnInit() {\r\n\r\n  this.GetDDLList();\r\n}\r\n\r\n\r\nGetDepartmentByDepartmentCategory(code,admCode) {\r\n  \r\n   this.filterModel.DepartmentCode=0;\r\n  this._commonService\r\n  .GetDepartmentByDepartmentCategory(code,admCode)\r\n  .subscribe(\r\n    data => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <DdlItemModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n\r\n}\r\n\r\n/** Gets the total record of all Order */\r\ngetTotalRecord() {\r\n  this.totalOrderCount = this.listModel\r\n    .map((t) => t.OrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalActiveOrderCount = this.listModel\r\n    .map((t) => t.ActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalDeActiveOrderCount = this.listModel\r\n    .map((t) => t.DeActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderSummary).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetList() {\r\n  this._orderEntryService.GetOrderTypeSummaryReportWithLastTransaction(this.filterModel).subscribe(\r\n  // this._orderEntryService.GetOrderSummaryReportWithLastTransaction(this.filterModel).subscribe(\r\n    (data) => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.listModel = <OrderSummaryTypeReportWithLastTransactionModel[]>data.Data;\r\n        this.dataSource = new MatTableDataSource<OrderSummaryTypeReportWithLastTransactionModel>(\r\n          this.listModel\r\n        );\r\n        this.dataSource.sort = this.sort;\r\n        this.getTotalRecord();\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nsearchClick() {\r\n  if (this.filterModel.CreatedFromDate) {\r\n    const uTCFromDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedFromDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedFromDate).getMonth(),\r\n        new Date(this.filterModel.CreatedFromDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedFromDate = uTCFromDate;\r\n  }\r\n\r\n  if (this.filterModel.CreatedToDate) {\r\n    const uTCToDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedToDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedToDate).getMonth(),\r\n        new Date(this.filterModel.CreatedToDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedToDate = uTCToDate;\r\n  }\r\n\r\n  this.GetList();\r\n}\r\n\r\nclearClick() {\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n  this.listModel=[];\r\n}\r\n\r\nprint() {\r\n  let printContents , popupWin ;\r\n  printContents = document.getElementById(\"orderprint\").outerHTML;\r\n  popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=100%,width=auto\");\r\n    popupWin.document.open();\r\n     popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Order Summary Report With Last Transaction Date</title>\r\n            <style>\r\n            table th,table td{\r\n              border: 1px solid black;\r\n            }\r\n            table{\r\n              border-collapse: collapse;\r\n            }\r\n            span{\r\n              font-weight: bold;\r\n              margin-bottom: 10px;\r\n            }\r\n            </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n}\r\n\r\nonRedirect(url){\r\n  \r\n   var temp = '/order/summaryreport/orderDetailReport/' + url;\r\n  window.history.pushState('', '', '/order/summaryreport/orderDetailReport/' + url);\r\n  // var temp = window.location.href;\r\n}\r\n\r\n//#endregion Methods\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\ntr:nth-child(even) {\\r\\n  background-color: rgb(224, 224, 224);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9vcmRlci1yZXBvcnQvb3JkZXItcmVwb3J0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxvQ0FBb0M7QUFDdEMiLCJmaWxlIjoic3JjL2FwcC9jb250ZW50L29yZGVyL29yZGVyLXJlcG9ydC9vcmRlci1yZXBvcnQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxudHIubWF0LWZvb3Rlci1yb3cge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG50cjpudGgtY2hpbGQoZXZlbikge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYigyMjQsIDIyNCwgMjI0KTtcclxufVxyXG4iXX0= */\"","import { MatSort } from \"@angular/material\";\r\nimport { MatTableDataSource } from \"@angular/material\";\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { OrderEntryService } from \"src/app/Shared/Service/orderentry.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport {\r\n  OrderReportListModel,\r\n  DepartmentCategoryReportFilterModel\r\n} from \"src/app/Shared/Model/orderlist.model\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport {\r\n  ColumnHeaderModel,\r\n  DDLModel,\r\n  DdlItemModel\r\n} from \"src/app/Shared/Model/commonddl.model\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { DepartmentCategoryEnum } from 'src/app/Shared/Enum/Common.enum';\r\n\r\n@Component({\r\n  selector: \"app-order-report\",\r\n  templateUrl: \"./order-report.component.html\",\r\n  styleUrls: [\"./order-report.component.css\"]\r\n})\r\nexport class OrderReportComponent implements OnInit {\r\n  listModel: OrderReportListModel[];\r\n  model: DepartmentCategoryReportFilterModel;\r\n  dDLList: DDLModel;\r\n  dataSource: any;\r\n  totalActRules: number;\r\n  totalCircular: number;\r\n  totalCitizenCharter: number;\r\n  totalNotification: number;\r\n  totalOrders: number;\r\n  totalPolicyGuidelines: number;\r\n  totalAnnualProgressReport: number;\r\n  totalBudget: number;\r\n  totalCovid: number;\r\n  totalPublication: number;\r\n  total: number;\r\n  ddlDepartment: DdlItemModel[] = [];\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"DepartmentTitle\",\r\n    \"ActRules\",\r\n    \"Circular\",\r\n    \"CitizenCharter\",\r\n    \"Notification\",\r\n    \"Order\",\r\n    \"PolicyGuidelines\",\r\n    \"AnnualProgressReport\",\r\n    \"Budget\",\r\n    \"Covid\",\r\n    \"Publication\",\r\n    \"Total\"\r\n  ];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    { Value: \"DepartmentTitle\", Text: \"Department\" }\r\n    //{ Value: \"ActRules\", Text: \"Act & Rules\" },\r\n    // { Value: \"Circular\", Text: \"Circular\" },\r\n    // { Value: \"CitizenCharter\", Text: \"Citizen & Charter\" },\r\n    // { Value: \"Notification\", Text: \"Notification\" },\r\n    // { Value: \"Order\", Text: \"Order\" },\r\n    // { Value: \"PolicyGuidelines\", Text: \"Policy & Guidelines\" },\r\n    // { Value: \"AnnualProgressReport\", Text: \"Annual Progress Report\" },\r\n    // { Value: \"Budget\", Text: \"Budget\" },\r\n    // { Value: \"Covid\", Text: \"Covid\" },\r\n    // { Value: \"Publication\", Text: \"Publication\" },\r\n    // { Value: \"Total\", Text: \"Total\" },\r\n  ];\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  constructor(\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private _parentApi: AppComponent\r\n  ) {\r\n    this._parentApi.setpagelayout(\"Gov. Document Detail\", \"\", \"\", \"\");\r\n    this.model = new DepartmentCategoryReportFilterModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetDDLList();\r\n    //this.model.DepartmentCategoryCode = String(DepartmentCategoryEnum.Category);\r\n     this.GetList();\r\n\r\n  }\r\n\r\n  GetDepartmentByDepartmentCategory(code,admCode) {\r\n    \r\n     this.model.DepartmentCode=0;\r\n    this._commonService\r\n    .GetDepartmentByDepartmentCategory(code,admCode)\r\n    .subscribe(\r\n      data => {\r\n        \r\n        if (data.IsSuccess) {\r\n          this.ddlDepartment = <DdlItemModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  clearClick() {\r\n    this.model = new DepartmentCategoryReportFilterModel();\r\n    this.listModel=[];\r\n    this.dataSource =null;\r\n  }\r\n\r\n  GetDDLList() {\r\n    \r\n    this._commonService\r\n      .GetAllDDL(AppSetting.DDlKeyForAllModuleReport)\r\n      .subscribe(\r\n        data => {\r\n          \r\n          if (data.IsSuccess) {\r\n            this.dDLList = <DDLModel>data.Data;\r\n\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  GetList() {\r\n    \r\n    this._orderEntryService.GetOrderReportList(this.model).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.listModel = <OrderReportListModel[]>data.Data;\r\n          this.getTotalRecord();\r\n          this.dataSource = new MatTableDataSource<OrderReportListModel>(\r\n            this.listModel\r\n          );\r\n          this.dataSource.sort = this.sort;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getTotalRecord() {\r\n    this.totalActRules = this.listModel\r\n      .map(t => t.ActRules)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalAnnualProgressReport = this.listModel\r\n      .map(t => t.AnnualProgressReport)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalBudget = this.listModel\r\n      .map(t => t.Budget)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalCircular = this.listModel\r\n      .map(t => t.Circular)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalCitizenCharter = this.listModel\r\n      .map(t => t.CitizenCharter)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalCovid = this.listModel\r\n      .map(t => t.Covid)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalNotification = this.listModel\r\n      .map(t => t.Notification)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalOrders = this.listModel\r\n      .map(t => t.Order)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalPolicyGuidelines = this.listModel\r\n      .map(t => t.PolicyGuidelines)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.totalPublication = this.listModel\r\n      .map(t => t.Publication)\r\n      .reduce((acc, value) => acc + value, 0);\r\n    this.total = this.listModel\r\n      .map(t => t.Total)\r\n      .reduce((acc, value) => acc + value, 0);\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9vcmRlci1yZXBvcnQvb3JkZXItc3VtbWFyeS1yZXBvcnQvb3JkZXItc3VtbWFyeS1yZXBvcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXItcmVwb3J0L29yZGVyLXN1bW1hcnktcmVwb3J0L29yZGVyLXN1bW1hcnktcmVwb3J0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbnRyLm1hdC1mb290ZXItcm93IHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXX0= */\"","import { DDLModel, DdlItemModel } from './../../../../Shared/Model/commonddl.model';\r\nimport { IndexModel } from './../../../../Shared/Model/general-model';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { OrderSummaryReportModel, OrderSummaryReportFilterModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { VcCreationService } from 'src/app/Shared/Service/vc-creation.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { VCSummeryReportSearchModel, ReportSummeryViewModel } from 'src/app/Shared/Model/vccreationView.model';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-order-summary-report',\r\n  templateUrl: './order-summary-report.component.html',\r\n  styleUrls: ['./order-summary-report.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class OrderSummaryReportComponent implements OnInit {\r\n//#region Variable\r\nlistModel: OrderSummaryReportModel[];\r\nindexModel: IndexModel;\r\nfilterModel: OrderSummaryReportFilterModel;\r\ndataSource: any;\r\ntotalOrderCount: number;\r\ntotalActiveOrderCount: number;\r\ntotalDeActiveOrderCount: number;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"DepartmentTitle\",\r\n  \"Type\",\r\n  \"SubType\",\r\n  \"OrderCount\",\r\n  \"ActiveOrderCount\",\r\n  \"DeActiveOrderCount\",\r\n  \"Action\"\r\n];\r\n\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  { Value: \"SubType\", Text: \"Sub Type\" },\r\n   { Value: \"Type\", Text: \"Type\" }\r\n];\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\ndDLList: DDLModel;\r\nddlDepartment: DdlItemModel[] = [];\r\n\r\n//#endregion Variable\r\n\r\n//#region constructor\r\nconstructor(\r\n  private readonly _alertService: AlertService,\r\n  private readonly _orderEntryService: OrderEntryService,\r\n  private _parentComponent: AppComponent,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _route: ActivatedRoute,\r\n) {\r\n  \r\n  this._parentComponent.setpagelayout(\"Gov. Document Summary Report List :\", \"\", \"\", \"\");\r\n  this.indexModel = new IndexModel();\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n\r\n  if(this._route.snapshot.params.dpt){\r\n    \r\n    this.filterModel.DepartmentCode =String(this._route.snapshot.params.dpt);\r\n    this.GetList();\r\n  }\r\n}\r\n\r\n//#endregion constructor\r\n\r\n//#region Methods\r\n\r\nngOnInit() {\r\n\r\n  this.GetDDLList();\r\n}\r\n\r\nGetDepartmentByDepartmentCategory(code,admCode) {\r\n  \r\n //if (code ||admCode) {\r\n   this.filterModel.DepartmentCode=0;\r\n  this._commonService\r\n  .GetDepartmentByDepartmentCategory(code,admCode)\r\n  .subscribe(\r\n    data => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <DdlItemModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n//  } else {\r\n//   this.ddlDepartment = [];\r\n//  }\r\n}\r\n\r\n/** Gets the total record of all Order */\r\ngetTotalRecord() {\r\n  this.totalOrderCount = this.listModel\r\n    .map((t) => t.OrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalActiveOrderCount = this.listModel\r\n    .map((t) => t.ActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalDeActiveOrderCount = this.listModel\r\n    .map((t) => t.DeActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderSummary).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetList() {\r\n  this._orderEntryService.GetOrderSummaryReport(this.filterModel).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.listModel = <OrderSummaryReportModel[]>data.Data;\r\n        this.dataSource = new MatTableDataSource<OrderSummaryReportModel>(\r\n          this.listModel\r\n        );\r\n        this.dataSource.sort = this.sort;\r\n        this.getTotalRecord();\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nsearchClick() {\r\n  if (this.filterModel.CreatedFromDate) {\r\n    const uTCFromDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedFromDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedFromDate).getMonth(),\r\n        new Date(this.filterModel.CreatedFromDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedFromDate = uTCFromDate;\r\n  }\r\n\r\n  if (this.filterModel.CreatedToDate) {\r\n    const uTCToDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedToDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedToDate).getMonth(),\r\n        new Date(this.filterModel.CreatedToDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedToDate = uTCToDate;\r\n  }\r\n\r\n  this.GetList();\r\n}\r\n\r\nclearClick() {\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n  this.listModel=[];\r\n}\r\n\r\nprint() {\r\n  let printContents , popupWin ;\r\n  printContents = document.getElementById(\"orderprint\").outerHTML;\r\n  popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=100%,width=auto\");\r\n    popupWin.document.open();\r\n     popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Order Summary Report</title>\r\n            <style>\r\n            table th,table td{\r\n              border: 1px solid black;\r\n            }\r\n            table{\r\n              border-collapse: collapse;\r\n            }\r\n            span{\r\n              font-weight: bold;\r\n              margin-bottom: 10px;\r\n            }\r\n            </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n}\r\n\r\nonRedirect(url){\r\n  \r\n   var temp = '/order/summaryreport/orderDetailReport/' + url;\r\n  window.history.pushState('', '', '/order/summaryreport/orderDetailReport/' + url);\r\n  // var temp = window.location.href;\r\n}\r\n\r\n//#endregion Methods\r\n}\r\n","module.exports = \"table {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\ntr.mat-footer-row {\\r\\n  font-weight: bold;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29udGVudC9vcmRlci9vcmRlci1yZXBvcnQvb3JkZXItc3VtbWFyeS13aXRoLWxhc3R0cmFuc2RhdGUtcmVwb3J0L29yZGVyLXN1bW1hcnktd2l0aC1sYXN0dHJhbnNkYXRlLXJlcG9ydC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6InNyYy9hcHAvY29udGVudC9vcmRlci9vcmRlci1yZXBvcnQvb3JkZXItc3VtbWFyeS13aXRoLWxhc3R0cmFuc2RhdGUtcmVwb3J0L29yZGVyLXN1bW1hcnktd2l0aC1sYXN0dHJhbnNkYXRlLXJlcG9ydC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG50ci5tYXQtZm9vdGVyLXJvdyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\"","import { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { DateAdapter, MAT_DATE_FORMATS, MatSort, MatTableDataSource } from '@angular/material';\r\nimport { OrderSummaryReportWithLastTransactionModel, OrderSummaryReportFilterModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { IndexModel } from 'src/app/Shared/Model/general-model';\r\nimport { ColumnHeaderModel, DDLModel, DdlItemModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { OrderEntryService } from 'src/app/Shared/Service/orderentry.service';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AppSetting } from 'src/app/Shared/Model/appsetting';\r\n\r\n@Component({\r\n  selector: 'app-order-summary-with-lasttransdate-report',\r\n  templateUrl: './order-summary-with-lasttransdate-report.component.html',\r\n  styleUrls: ['./order-summary-with-lasttransdate-report.component.css'],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class OrderSummaryWithLasttransdateReportComponent implements OnInit {\r\n//#region Variable\r\nlistModel: OrderSummaryReportWithLastTransactionModel[];\r\nindexModel: IndexModel;\r\nfilterModel: OrderSummaryReportFilterModel;\r\ndataSource: any;\r\ntotalOrderCount: number;\r\ntotalActiveOrderCount: number;\r\ntotalDeActiveOrderCount: number;\r\ndisplayedColumns: string[] = [\r\n  \"index\",\r\n  \"DepartmentTitle\",\r\n  \"Type\",\r\n  \"SubType\",\r\n  \"LastTransactionDate\",\r\n  \"OrderCount\",\r\n  \"ActiveOrderCount\",\r\n  \"DeActiveOrderCount\",\r\n  \"Action\"\r\n];\r\n\r\nViewdisplayedColumns: ColumnHeaderModel[] = [\r\n  { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  { Value: \"SubType\", Text: \"Sub Type\" },\r\n   { Value: \"Type\", Text: \"Type\" }\r\n];\r\ncolumnsToDisplay: string[] = this.displayedColumns.slice();\r\n\r\n@ViewChild(MatSort, { static: true }) sort: MatSort;\r\ndDLList: DDLModel;\r\nddlDepartment: DdlItemModel[] = [];\r\n\r\n//#endregion Variable\r\n\r\n//#region constructor\r\nconstructor(\r\n  private readonly _alertService: AlertService,\r\n  private readonly _orderEntryService: OrderEntryService,\r\n  private _parentComponent: AppComponent,\r\n  public readonly _commonService: CommonService,\r\n  private readonly _route: ActivatedRoute,\r\n) {\r\n  \r\n  this._parentComponent.setpagelayout(\"Gov. Document Summary Report With Last Transaction Date List :\", \"\", \"\", \"\");\r\n  this.indexModel = new IndexModel();\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n\r\n  if(this._route.snapshot.params.dpt){\r\n    \r\n    this.filterModel.DepartmentCode =String(this._route.snapshot.params.dpt);\r\n    this.GetList();\r\n  }\r\n}\r\n\r\n//#endregion constructor\r\n\r\n//#region Methods\r\n\r\nngOnInit() {\r\n\r\n  this.GetDDLList();\r\n}\r\n\r\nGetDepartmentByDepartmentCategory(code,admCode) {\r\n  \r\n   this.filterModel.DepartmentCode=0;\r\n  this._commonService\r\n  .GetDepartmentByDepartmentCategory(code,admCode)\r\n  .subscribe(\r\n    data => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.ddlDepartment = <DdlItemModel[]>data.Data;\r\n      }\r\n    },\r\n    error => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n\r\n}\r\n\r\n/** Gets the total record of all Order */\r\ngetTotalRecord() {\r\n  this.totalOrderCount = this.listModel\r\n    .map((t) => t.OrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalActiveOrderCount = this.listModel\r\n    .map((t) => t.ActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n    this.totalDeActiveOrderCount = this.listModel\r\n    .map((t) => t.DeActiveOrderCount)\r\n    .reduce((acc, value) => acc + value, 0);\r\n}\r\n\r\nGetDDLList() {\r\n  this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderSummary).subscribe(\r\n    (data) => {\r\n      if (data.IsSuccess) {\r\n        this.dDLList = <DDLModel>data.Data;\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nGetList() {\r\n  this._orderEntryService.GetOrderSummaryReportWithLastTransaction(this.filterModel).subscribe(\r\n    (data) => {\r\n      \r\n      if (data.IsSuccess) {\r\n        this.listModel = <OrderSummaryReportWithLastTransactionModel[]>data.Data;\r\n        this.dataSource = new MatTableDataSource<OrderSummaryReportWithLastTransactionModel>(\r\n          this.listModel\r\n        );\r\n        this.dataSource.sort = this.sort;\r\n        this.getTotalRecord();\r\n      }\r\n    },\r\n    (error) => {\r\n      this._alertService.error(error.message);\r\n    }\r\n  );\r\n}\r\n\r\nsearchClick() {\r\n  if (this.filterModel.CreatedFromDate) {\r\n    const uTCFromDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedFromDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedFromDate).getMonth(),\r\n        new Date(this.filterModel.CreatedFromDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedFromDate = uTCFromDate;\r\n  }\r\n\r\n  if (this.filterModel.CreatedToDate) {\r\n    const uTCToDate = new Date(\r\n      Date.UTC(\r\n        new Date(this.filterModel.CreatedToDate).getFullYear(),\r\n        new Date(this.filterModel.CreatedToDate).getMonth(),\r\n        new Date(this.filterModel.CreatedToDate).getDate()\r\n      )\r\n    ).toISOString();\r\n    this.filterModel.CreatedToDate = uTCToDate;\r\n  }\r\n\r\n  this.GetList();\r\n}\r\n\r\nclearClick() {\r\n  this.filterModel = new OrderSummaryReportFilterModel();\r\n  this.listModel=[];\r\n}\r\n\r\nprint() {\r\n  let printContents , popupWin ;\r\n  printContents = document.getElementById(\"orderprint\").outerHTML;\r\n  popupWin = window.open(\"\", \"_blank\", \"top=0,left=0,height=100%,width=auto\");\r\n    popupWin.document.open();\r\n     popupWin.document.write(`\r\n      <html>\r\n        <head>\r\n          <title>Order Summary Report With Last Transaction Date</title>\r\n            <style>\r\n            table th,table td{\r\n              border: 1px solid black;\r\n            }\r\n            table{\r\n              border-collapse: collapse;\r\n            }\r\n            span{\r\n              font-weight: bold;\r\n              margin-bottom: 10px;\r\n            }\r\n            </style>\r\n        </head>\r\n    <body onload=\"window.print();window.close()\">${printContents}</body>\r\n      </html>`);\r\n    popupWin.document.close();\r\n}\r\n\r\nonRedirect(url){\r\n  \r\n   var temp = '/order/summaryreport/orderDetailReport/' + url;\r\n  window.history.pushState('', '', '/order/summaryreport/orderDetailReport/' + url);\r\n  // var temp = window.location.href;\r\n}\r\n\r\n//#endregion Methods\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { OrderComponent } from './order.component';\r\nimport { AddOrderComponent } from './add-order/add-order.component';\r\nimport { UpdateOrderComponent } from './update-order/update-order.component';\r\nimport { DetailOrderComponent } from './detail-order/detail-order.component';\r\nimport { DeleteOrderComponent } from './delete-order/delete-order.component';\r\nimport { AddOldOrderComponent } from './add-old-order/add-old-order.component';\r\nimport { UploadAttachmentComponent } from './upload-attachment/upload-attachment.component';\r\nimport { GenerateOrderComponent } from './generate-order/generate-order.component';\r\nimport { GenerateOrderAddUpdateComponent } from './generate-order/generate-order-add-update/generate-order-add-update.component';\r\nimport { GenerateOrderPreviewComponent } from './generate-order/generate-order-preview/generate-order-preview.component';\r\nimport { OrderReportComponent } from './order-report/order-report.component';\r\nimport { GenerateOrderAuthorityListComponent } from './generate-order/generate-order-authority-list/generate-order-authority-list.component';\r\nimport { OrderFinalApprovalListComponent } from './generate-order/order-final-approval-list/order-final-approval-list.component';\r\nimport { OrderDetailReportComponent } from './order-detail-report/order-detail-report.component';\r\nimport { OrderSummaryReportComponent } from './order-report/order-summary-report/order-summary-report.component';\r\nimport { OrderDepartmentReportComponent } from './order-report/order-department-report/order-department-report.component';\r\nimport { OrderSummaryWithLasttransdateReportComponent } from './order-report/order-summary-with-lasttransdate-report/order-summary-with-lasttransdate-report.component';\r\nimport { OrderDocumenttypeSummaryReportComponent } from './order-report/order-documenttype-summary-report/order-documenttype-summary-report.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OrderComponent,\r\n  },\r\n\r\n  {\r\n    path: 'add',\r\n    component: AddOrderComponent\r\n  },\r\n  {\r\n    path: 'addold',\r\n    component: AddOldOrderComponent\r\n  },\r\n  {\r\n    path: 'uploadattachment',\r\n    component: UploadAttachmentComponent\r\n  },\r\n  {\r\n    path: 'uploadattachment/:id',\r\n    component: UploadAttachmentComponent\r\n  },\r\n  {\r\n    path: 'update/:id',\r\n    component: UpdateOrderComponent\r\n  },\r\n  {\r\n    path: 'update/:id/:report',\r\n    component: UpdateOrderComponent\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: DetailOrderComponent\r\n  },\r\n  {\r\n    path: 'delete/:id',\r\n    component: DeleteOrderComponent\r\n  },\r\n  {\r\n    path: 'generateorder',\r\n    component: GenerateOrderComponent\r\n  },\r\n   {\r\n    path: 'generateorderadd/:id',\r\n    component: GenerateOrderAddUpdateComponent\r\n  },\r\n  {\r\n    path: 'generateorderadd',\r\n    component: GenerateOrderAddUpdateComponent\r\n  },\r\n  {\r\n   path: 'generateorderpreview/:id',\r\n   component: GenerateOrderPreviewComponent\r\n },\r\n {\r\n  path: 'orderReport',\r\n  component: OrderReportComponent\r\n},\r\n{\r\n\r\n  path: 'generateorderauthoritylist',\r\n  component: GenerateOrderAuthorityListComponent\r\n}\r\n,\r\n{\r\n path: 'generateorderauthoritylistesign',\r\n component: GenerateOrderAuthorityListComponent\r\n}\r\n,\r\n{\r\n path: 'generateauthoritylistesignex',\r\n component: GenerateOrderAuthorityListComponent\r\n},\r\n{\r\n path: 'generateaorderfinalapproval',\r\n component: OrderFinalApprovalListComponent\r\n}\r\n,\r\n{\r\n path: 'orderDetailReport/:dept',\r\n component: OrderDetailReportComponent\r\n},\r\n{\r\n  path: 'orderDetailReport',\r\n  component: OrderDetailReportComponent\r\n },\r\n{\r\n path: 'summaryreport',\r\n component: OrderSummaryReportComponent\r\n},\r\n{\r\n  path: 'summaryreport/:dpt',\r\n  component: OrderSummaryReportComponent\r\n },\r\n{\r\n path: 'orderdepartmentcountreport',\r\n component: OrderDepartmentReportComponent\r\n},\r\n{\r\n  path: 'summaryreportwithlasttrans',\r\n  component: OrderSummaryWithLasttransdateReportComponent\r\n },\r\n {\r\n   path: 'summaryreportwithlasttrans/:dpt',\r\n   component: OrderSummaryWithLasttransdateReportComponent\r\n  }\r\n  ,\r\n{\r\n  path: 'DepartmentTypesummaryreportwithlasttrans',\r\n  component: OrderDocumenttypeSummaryReportComponent\r\n },\r\n {\r\n   path: 'DepartmentTypesummaryreportwithlasttrans/:dpt',\r\n   component: OrderDocumenttypeSummaryReportComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class OrderRoutingModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvb3JkZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  OrderEntryListModel,\r\n  CustomDateSearchModel\r\n} from \"src/app/Shared/Model/orderlist.model\";\r\nimport { OrderEntryService } from \"src/app/Shared/Service/orderentry.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { MatTableDataSource, MatPaginator, MatSort, DateAdapter, MAT_DATE_FORMATS, MatDialog } from \"@angular/material\";\r\nimport { ColumnHeaderModel } from \"src/app/Shared/Model/commonddl.model\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport {\r\n  IndexModel,\r\n  PermissionModel,\r\n  CommonDocModel\r\n} from \"src/app/Shared/Model/general-model\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { OrderGenerateMasterListModel } from 'src/app/Shared/Model/generate-order.model';\r\nimport { AppDateAdapter, APP_DATE_FORMATS } from 'src/app/Shared/Model/format-datepicker';\r\nimport { OTPDialogComponent } from 'src/app/otp-dialog/otp-dialog.component';\r\nimport { GenerateOrderService } from 'src/app/Shared/Service/generate-order.service';\r\nimport { ConfirmationDialogComponent } from 'src/app/confirmation-dialog/confirmation-dialog.component';\r\nimport { UserDepartmentViewModel, UserViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: \"app-order\",\r\n  templateUrl: \"./order.component.html\",\r\n  styleUrls: [\"./order.component.css\"],\r\n  //providers: [OrderEntryService]\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class OrderComponent implements OnInit {\r\n  orderEntryList: OrderGenerateMasterListModel[];\r\n  dataSource: any;\r\n  preDate:Date|string;\r\n  displayedColumns: string[] = [\"index\", \"Title\" , \"DepartmentTitle\" , \"TypeName\" , \"ModifiedBy\" , \"Id\" , \"SectorName\" , \"BeneficiaryCategoryIds\" , \"Status\" , \"Lock\" , \"Action\"];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n   { Value: \"DepartmentTitle\", Text: \"Department\" },\r\n  // { Value: \"Title\", Text: \"Title\" },\r\n  // { Value: \"OrderNo\", Text: \"Document No.\" },\r\n  { Value: \"SectorName\", Text: \"Sector Name\" },\r\n\r\n\r\n];\r\n\r\n  searchColumns: ColumnHeaderModel[] = [\r\n     { Value: \"DepartmentTitle\", Text: \"Department Title\"},\r\n    { Value: \"Title\", Text: \"Title\" },\r\n    { Value: \"TypeName\", Text: \"Type\" },\r\n    { Value: \"OrderNo\", Text: \"Document No\" },\r\n    { Value: \"Date\", Text: \" Issue Date\" },\r\n    { Value: \"CreatedDate\", Text: \"Entry Date\" },\r\n   // { Value: \"Id\", Text: \" Software Entry No\" },\r\n    // { Value: \"Id\", Text: \" Order code\" }\r\n  ];\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  OrderPermission: PermissionModel = this._commonService.GetPagePermission(\r\n    \"/order\",\r\n    \"/order/add\",\r\n    \"/order/detail\",\r\n    \"/order/update\",\r\n    \"/order/delete\",\r\n    \"/order/lock\"\r\n  );\r\n  indexModel: CustomDateSearchModel;\r\n  totalRecords: number;\r\n  loginData: UserViewModel;\r\n\r\n  // helpDocUrl: string;\r\n  helpDocumentEnum = HelpDocumentEnum;\r\n  helpDocument:CommonDocModel;\r\n\r\n\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    public readonly _commonService: CommonService,\r\n    private readonly _dialog: MatDialog,\r\n    private readonly _authService: AuthenticationService,\r\n    private readonly _userService: UserService,\r\n    private _route: ActivatedRoute,\r\n  ) {\r\n\r\n\r\n    this.OrderPermission.AddPageAccess\r\n      ? this._parentApi.setpagelayout(\r\n          \"Government Documents  :\",\r\n          \"add\",\r\n          \"Add\",\r\n          \"order/addold\"\r\n        )\r\n      : this._parentApi.setpagelayout(\"Orders :\")\r\n\r\n\r\n    this.indexModel = new CustomDateSearchModel();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.GetList();\r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.GetHelpDocument();\r\n    this.getDepartment();\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetList() {\r\n    \r\n\r\n    if (this.indexModel.IsExportToExcel) {\r\n      this._orderEntryService\r\n      .ExportGovernmentDocumentData(\r\n        this.indexModel\r\n      )\r\n      .subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n              \r\n              const linkSource = data.Data;\r\n              const downloadLink = document.createElement(\"a\");\r\n              const fileName = \"Report\";\r\n              downloadLink.href = linkSource;\r\n              downloadLink.download = fileName;\r\n              downloadLink.target = \"blank\";\r\n              downloadLink.click();\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n          this.indexModel.IsExportToExcel=false;\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }else{\r\n    this._orderEntryService.GetOrderEntryList(this.indexModel).subscribe(\r\n      data => {\r\n      this.indexModel.SearchDate=this.preDate;\r\n        if (data.IsSuccess) {\r\n          this.orderEntryList = <OrderGenerateMasterListModel[]>data.Data.Data;\r\n         // this.helpDocUrl = data.Data.HelpDocUrl;\r\n          this.dataSource = new MatTableDataSource<OrderGenerateMasterListModel>(\r\n            this.orderEntryList\r\n          );\r\n          if (this.indexModel.IsPostBack === false) {\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n          }\r\n          this.totalRecords = data.Data.TotalRecords;\r\n        }\r\n        this.indexModel.IsExportToExcel=false;\r\n      },\r\n      error => {\r\n        this.indexModel.SearchDate=this.preDate;\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n    }\r\n  }\r\n\r\n  GetHelpDocument() {\r\n\r\n    this._commonService.GetHelpDocument(this.helpDocumentEnum.Order).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          \r\n          this.helpDocument=<CommonDocModel>data.Data;\r\n        }else{\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n  downloadPdf(Url,isHelpDoc : Boolean=false) {\r\n    \r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n      if (isHelpDoc) {\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Help Document\";\r\n        downloadLink.click();\r\n      }else{\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Blank Document\";\r\n        downloadLink.click();\r\n      }\r\n\r\n  }\r\n\r\n  // downloadPdf(Url) {\r\n  //   const linkSource = Url;\r\n  //   const downloadLink = document.createElement(\"a\");\r\n  //   downloadLink.href = linkSource;\r\n  //   downloadLink.download = \"Help Document\";\r\n  //   downloadLink.click();\r\n  // }\r\n\r\n  SortData(event) {\r\n    this.indexModel.OrderBy = event.active;\r\n    this.indexModel.OrderByAsc =\r\n      event.direction == AppSetting.orderByDscAsc\r\n        ? AppSetting.orderByAsc\r\n        : AppSetting.orderByDsc;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n    this.indexModel.IsPostBack = true;\r\n    this.GetList();\r\n  }\r\n\r\n  ChangeActiveStatusClick(id) {\r\n    this._orderEntryService.SetStatus(id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.GetList();\r\n          this._alertService.success(data.Message);\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  // ChangeActiveStatusClick(id) {\r\n    \r\n  //   this._commonService.GenerateOTP().subscribe(\r\n  //     data => {\r\n  //       if (data.IsSuccess) {\r\n\r\n  //         const _dialogRef = this._dialog.open(OTPDialogComponent, {\r\n  //           width: \"500px\",\r\n  //           disableClose:true\r\n  //         });\r\n  //         _dialogRef.afterClosed().subscribe((result: boolean) => {\r\n\r\n  //           if (result) {\r\n\r\n  //             this._orderEntryService.SetStatus(id).subscribe(\r\n  //               data => {\r\n  //                 if (data.IsSuccess) {\r\n  //                   this.GetList();\r\n  //                   this._alertService.success(data.Message);\r\n  //                 } else {\r\n  //                   this._alertService.error(data.Message);\r\n  //                 }\r\n  //               },\r\n  //               error => {\r\n  //                 this._alertService.error(error.message);\r\n  //               }\r\n  //             );\r\n\r\n  //           }\r\n  //         });\r\n  //       }else{\r\n  //         this._alertService.error(data.Message);\r\n  //       }\r\n  //     },\r\n  //     error => {\r\n  //       this._alertService.error(error.message);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  SearchByKeyword(searchValue) {\r\n    \r\n\r\n    this.indexModel.Search = searchValue;\r\n    if (searchValue === null) {\r\n      this.indexModel.SearchDate = null;\r\n      this.preDate=null;\r\n    }else{\r\n      if(this.indexModel.SearchDate){\r\n        this.preDate= this.indexModel.SearchDate;\r\n        this.indexModel.SearchDate = this.indexModel.SearchDate.toLocaleString();\r\n      }\r\n    }\r\n\r\n    if (this.indexModel.FromDate) {\r\n      let uTCFromDate = new Date(\r\n        Date.UTC(new Date( this.indexModel.FromDate).getFullYear(), new Date( this.indexModel.FromDate).getMonth(), new Date( this.indexModel.FromDate).getDate())\r\n        ).toISOString();\r\n        this.indexModel.FromDate=uTCFromDate;\r\n    }\r\n\r\n    if (this.indexModel.ToDate) {\r\n      let uTCToDate = new Date(\r\n        Date.UTC(new Date( this.indexModel.ToDate).getFullYear(), new Date( this.indexModel.ToDate).getMonth(), new Date( this.indexModel.ToDate).getDate())\r\n        ).toISOString();\r\n        this.indexModel.ToDate=uTCToDate;\r\n    }\r\n\r\n    this.GetList();\r\n  }\r\n\r\n  lockClick(id){\r\n    this._orderEntryService.LockToggle(id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.GetList();\r\n          this._alertService.success(data.Message);\r\n        } else {\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  OnDelete(id) {\r\n\r\n    const dialogRef = this._dialog.open(ConfirmationDialogComponent, {\r\n      width: '350px',\r\n      data: \"Do you want to delete this record?\"\r\n    });\r\n    dialogRef.afterClosed().subscribe(result => {\r\n\r\n      if (result) {\r\n        this._orderEntryService.DeleteOrder(id).subscribe(\r\n          data => {\r\n\r\n            if (\r\n              (data.IsSuccess)\r\n            ) {\r\n              this._alertService.success(data.Message);\r\n              this.GetList();\r\n              // this._router.navigate([\"order\"]);\r\n            }\r\n          },\r\n          error => {\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(error.message);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  Reset(){\r\n    this.indexModel=new CustomDateSearchModel();\r\n\r\n    this.GetList();\r\n  }\r\n\r\n  downloadCsv(){\r\n    this.indexModel.IsExportToExcel = true;\r\n    this.GetList();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AddOrderComponent } from './add-order/add-order.component';\r\nimport { UpdateOrderComponent } from './update-order/update-order.component';\r\nimport { DeleteOrderComponent } from './delete-order/delete-order.component';\r\nimport { DetailOrderComponent } from './detail-order/detail-order.component';\r\nimport { OrderRoutingModule } from './order-routing.module';\r\nimport { OrderComponent } from './order.component';\r\nimport { AppMaterialModule } from 'src/app/Shared/app-material/app-material.module';\r\nimport { RelatedtoDialogComponent } from './relatedto-dialog/relatedto-dialog.component';\r\nimport { AddOldOrderComponent } from './add-old-order/add-old-order.component';\r\nimport { UploadAttachmentComponent } from './upload-attachment/upload-attachment.component';\r\nimport { SchemeModule } from '../scheme/scheme.module';\r\nimport { GenerateOrderComponent } from './generate-order/generate-order.component';\r\nimport { GenerateOrderAddUpdateComponent } from './generate-order/generate-order-add-update/generate-order-add-update.component';\r\nimport { CKEditorModule } from 'ng2-ckeditor';\r\nimport { GenerateOrderPreviewComponent } from './generate-order/generate-order-preview/generate-order-preview.component';\r\nimport { GenerateOrderAuthorityListComponent } from './generate-order/generate-order-authority-list/generate-order-authority-list.component';\r\nimport { OrderReportComponent } from './order-report/order-report.component';\r\nimport { OrderCancellationDialogComponent } from './order-cancellation-dialog/order-cancellation-dialog.component';\r\nimport { ESignDialogComponent } from './generate-order/e-sign-dialog/e-sign-dialog.component';\r\nimport { OrderFinalApprovalListComponent } from './generate-order/order-final-approval-list/order-final-approval-list.component';\r\nimport { DispatchDialogComponent } from './generate-order/dispatch-dialog/dispatch-dialog.component';\r\nimport { OrderDetailReportComponent } from './order-detail-report/order-detail-report.component';\r\nimport { OrderSummaryReportComponent } from './order-report/order-summary-report/order-summary-report.component';\r\nimport { OrderDepartmentReportComponent } from './order-report/order-department-report/order-department-report.component';\r\nimport { OrderSummaryWithLasttransdateReportComponent } from './order-report/order-summary-with-lasttransdate-report/order-summary-with-lasttransdate-report.component';\r\nimport { OrderDocumenttypeSummaryReportComponent } from './order-report/order-documenttype-summary-report/order-documenttype-summary-report.component';\r\n\r\n@NgModule({\r\n  declarations: [OrderComponent,OrderReportComponent, AddOrderComponent, UpdateOrderComponent, DeleteOrderComponent, DetailOrderComponent,RelatedtoDialogComponent, AddOldOrderComponent, UploadAttachmentComponent, GenerateOrderComponent, GenerateOrderAddUpdateComponent, GenerateOrderPreviewComponent, GenerateOrderAuthorityListComponent, OrderCancellationDialogComponent, ESignDialogComponent, OrderFinalApprovalListComponent, DispatchDialogComponent, OrderDetailReportComponent, OrderSummaryReportComponent, OrderDepartmentReportComponent, OrderSummaryWithLasttransdateReportComponent, OrderDocumenttypeSummaryReportComponent],\r\n  imports: [\r\n    CommonModule,\r\n    OrderRoutingModule,\r\n    SchemeModule,\r\n\r\n    AppMaterialModule,\r\n    CKEditorModule\r\n  ],\r\n  entryComponents:[\r\n    RelatedtoDialogComponent,\r\n    OrderCancellationDialogComponent,\r\n    ESignDialogComponent,\r\n    DispatchDialogComponent\r\n  ]\r\n})\r\nexport class OrderModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvcmVsYXRlZHRvLWRpYWxvZy9yZWxhdGVkdG8tZGlhbG9nLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject, ViewChild } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { ResponseServiceModel, ResponseListModel, ResponseDialogModel, RequestDialogModel } from 'src/app/Shared/Model/service.model';\r\nimport { ColumnHeaderModel } from 'src/app/Shared/Model/commonddl.model';\r\nimport { CommonService } from 'src/app/Shared/Service/common.service';\r\nimport { AlertService } from 'src/app/Shared/Service/alert.service';\r\nimport { ConnectWithCMISFilterModel, IndexModel, ConnectWithCMISListModel } from 'src/app/Shared/Model/general-model';\r\nimport { OrderRelatedToModelResult } from 'src/app/Shared/Model/orderlist.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-relatedto-dialog',\r\n  templateUrl: './relatedto-dialog.component.html',\r\n  styleUrls: ['./relatedto-dialog.component.css'],\r\n  providers:[CommonService]\r\n})\r\n\r\nexport class RelatedtoDialogComponent implements OnInit {\r\n\r\n  responseReqModel: ConnectWithCMISFilterModel;\r\n  responseListModel: ConnectWithCMISListModel[] = [];\r\n  isRecord:boolean;\r\n  dataSource :any;\r\n\r\n  displayedColumns: string[] = [\r\n    \"index\",\r\n    \"Para_No\",\r\n    \"Announcement_Description\",\r\n    \"File_Number\",\r\n    \"Action\"\r\n  ];\r\n  ViewdisplayedColumns: ColumnHeaderModel[] = [\r\n    { Value: \"Para_No\", Text: \"Para No\" },\r\n    { Value: \"Announcement_Description\", Text: \"Description\" },\r\n    { Value: \"File_Number\", Text: \"File Number\" }\r\n  ];\r\n\r\n  columnsToDisplay: string[] = this.displayedColumns.slice();\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n\r\n  responseDialogModel:ResponseDialogModel;\r\n\r\n  indexModel: IndexModel;\r\n\r\n  constructor(    public _dialogRef: MatDialogRef<RelatedtoDialogComponent>,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {\r\n\r\n      this.indexModel = new IndexModel();\r\n    if (data) {\r\n      this.responseReqModel = <ConnectWithCMISFilterModel>data;\r\n      this.GetResultByParameterList();\r\n    }\r\n\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  GetResultByParameterList() {\r\n    this._commonService.GetConnectWithCMISData(this.responseReqModel).subscribe(\r\n      data => {\r\n               if (data.IsSuccess) {\r\n          if (data.Data.length>0) {\r\n            this.isRecord=false;\r\n            this.responseListModel= <ConnectWithCMISListModel[]>data.Data;\r\n            this.dataSource = new MatTableDataSource<any>(this.responseListModel);\r\n            this.dataSource.paginator = this.paginator;\r\n          }else{\r\n            this.isRecord=true;\r\n          }\r\n        }\r\n\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  RelatedToSelectResult(data){\r\n    const temp=data as ConnectWithCMISListModel\r\n    this.responseDialogModel = new ResponseDialogModel();\r\n    this.responseDialogModel.index = this.responseReqModel.Index;\r\n    this.responseDialogModel.resultModel=new OrderRelatedToModelResult();\r\n    this.responseDialogModel.resultModel.CMISNewTransCoreId = temp.CMISNewTransCoreId;\r\n    this.responseDialogModel.resultModel.filenumber = temp.File_Number;\r\n    this.responseDialogModel.resultModel.parano = temp.Para_No;\r\n    this.responseDialogModel.resultModel.modulename = this.responseReqModel.ModuleName;\r\n    this.responseDialogModel.resultModel.prj_description = temp.Announcement_Description;\r\n    this.responseDialogModel.resultModel.prj_ndept=this.responseReqModel.DepartmentName;\r\n    this.responseDialogModel.resultModel.prj_year=this.responseReqModel.YearText;\r\n    this.responseDialogModel.resultModel.prj_dept = String(this.responseReqModel.Department);\r\n    this._dialogRef.close(this.responseDialogModel);\r\n  }\r\n\r\n\r\n  onNoClick(): void {\r\n    this._dialogRef.close();\r\n  }\r\n\r\n  onPaginateChange(event) {\r\n    this.indexModel.Page = event.pageIndex + 1;\r\n    this.indexModel.PageSize = event.pageSize;\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvdXBkYXRlLW9yZGVyL3VwZGF0ZS1vcmRlci5jb21wb25lbnQuY3NzIn0= */\"","import { CommonDocModel, ConnectWithCMISFilterModel } from './../../../Shared/Model/general-model';\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport {\r\n  DDLModel,\r\n  DdlItemModel,\r\n  DocumentUrlModel\r\n} from \"src/app/Shared/Model/commonddl.model\";\r\nimport {\r\n  OrderEntryModel,\r\n  OrderRelatedToModel,\r\n  OrderRelatedToModelResult,\r\n  OrderWithRelatedToViewModel,\r\n  OrderAttachmentModel,\r\n  OrderTypeMasterModel\r\n} from \"src/app/Shared/Model/orderlist.model\";\r\nimport {\r\n  RequestServiceModel,\r\n  RequestDialogModel,\r\n  ResponseServiceModel,\r\n  ResponseDialogModel\r\n} from \"src/app/Shared/Model/service.model\";\r\nimport { Validators, FormControl } from \"@angular/forms\";\r\nimport { OrderEntryService } from \"src/app/Shared/Service/orderentry.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { Router, ActivatedRoute } from \"@angular/router\";\r\nimport { MatDialog, DateAdapter, MAT_DATE_FORMATS } from \"@angular/material\";\r\nimport { RelatedtoDialogComponent } from \"../relatedto-dialog/relatedto-dialog.component\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport { GlobalMessagesModel } from \"src/app/Shared/Model/common.messages\";\r\nimport { strictEqual } from \"assert\";\r\nimport {\r\n  AppDateAdapter,\r\n  APP_DATE_FORMATS\r\n} from \"src/app/Shared/Model/format-datepicker\";\r\nimport { HelpDocumentEnum } from 'src/app/Shared/Enum/helpdocument-module.enum';\r\nimport { OrderEnum, OrderDocumentNoValidationEnum } from 'src/app/Shared/Enum/order.enum';\r\nimport { UserDistrictViewModel, UserViewModel, UserDepartmentViewModel } from 'src/app/Shared/Model/user-model';\r\nimport { UserService } from 'src/app/Shared/Service/user.service';\r\nimport { AuthenticationService } from 'src/app/Shared/Service/authentication.service';\r\nimport { StatusEnum } from 'src/app/Shared/Enum/scheme.enum';\r\n\r\n@Component({\r\n  selector: \"app-update-order\",\r\n  templateUrl: \"./update-order.component.html\",\r\n  styleUrls: [\"./update-order.component.css\"],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: AppDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: APP_DATE_FORMATS }\r\n  ]\r\n})\r\nexport class UpdateOrderComponent implements OnInit {\r\n  dDLList: DDLModel;\r\n  model: OrderEntryModel;\r\n  relatedToOrderList: DdlItemModel[] = [];\r\n  ServiceModel: RequestServiceModel;\r\n\r\n  responseReqModel: ConnectWithCMISFilterModel;\r\n  tomorrow = new Date();\r\n  helpDocumentEnum = HelpDocumentEnum;\r\n  orderEnum = OrderEnum;\r\n  ddlSubType: DdlItemModel[] = [];\r\n  //helpDocument: string;\r\n  department = new FormControl(\"\", [Validators.required]);\r\n  date = new FormControl(\"\", [Validators.required]);\r\n  type = new FormControl(\"\", [Validators.required]);\r\n  title = new FormControl(\"\", [Validators.required]);\r\n  Sector = new FormControl(\"\", [Validators.required]);\r\n  SubType = new FormControl(\"\", [Validators.required]);\r\n  description = new FormControl(\"\", null);\r\n  district = new FormControl(null);\r\n  searchCriteria = new FormControl('', [Validators.required, Validators.minLength(50)]);\r\n  id: number;\r\n  relatedToOrderParameterList: OrderRelatedToModel[] = [];\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  tempDocumentUrlList: DocumentUrlModel[] = [];\r\n  fileValidationMsg: string;\r\n  orderRelatedTo: OrderRelatedToModel;\r\n  ddlDepartment: UserDepartmentViewModel[];\r\n\r\n  moduleNameItems: { [index: string]: any } = {};\r\n  yearItems: { [index: string]: any } = {};\r\n  departmentItems: { [index: string]: any } = {};\r\n  schemeItems: { [index: string]: any } = {};\r\n  fileSizeValidationMsg: string;\r\n  helpDocument: CommonDocModel;\r\n  ddlDistrict: UserDistrictViewModel[];\r\n  loginData: UserViewModel;\r\n  orderTypeData: OrderTypeMasterModel;\r\n  orderDocumentNoValidationEnum = OrderDocumentNoValidationEnum;\r\n  selectedAll = -1;\r\n  selectedBenAll = -1;\r\n  isShowAll: boolean;\r\n  callBackUrl:string;\r\n\r\n  constructor(\r\n    private _parentApi: AppComponent,\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private _router: Router,\r\n    private _dialog: MatDialog,\r\n    private readonly _route: ActivatedRoute,\r\n    private readonly _userService: UserService,\r\n    private readonly _authService: AuthenticationService,\r\n  ) {\r\n\r\n    this.callBackUrl=this._route.snapshot.params.report;\r\n    if (this.callBackUrl) {\r\n    var datas=JSON.parse(sessionStorage.getItem(\"EntryInJankalyan\")) ;\r\n      this._parentApi.setpagelayout(\r\n        \"Update Government Document :\",\r\n        \"keyboard_backspace\",\r\n        \"Back To Entry In Jankalyan Report\",\r\n        \"/master/\"+ this.callBackUrl + '/' + datas.DepartmentName +'/'+ datas.ModuleName + '/'+ datas.DepartmentCode + '/' + datas.ModuleId  + (datas.IsDashBoard? \"/dsb/\":'/report/') + datas.NumberOfEntry\r\n      );\r\n    } else {\r\n\r\n    this._parentApi.setpagelayout(\r\n      \"Update Government Document :\",\r\n      \"keyboard_backspace\",\r\n      \"Back To List\",\r\n      \"order\"\r\n    );\r\n  }\r\n    \r\n    this.model = new OrderEntryModel();\r\n    this.ServiceModel = new RequestServiceModel();\r\n    this.dDLList =new DDLModel();\r\n    this.tomorrow.setDate(this.tomorrow.getDate() + 1);\r\n    this.model.RelatedToOrderParameterList.push(new OrderRelatedToModel());\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n    this.id = this._route.snapshot.params.id;\r\n    this.model.LinkToScheme = AppSetting.LinkedToScheme;\r\n    this.fileSizeValidationMsg = \"( Max \" +   localStorage.getItem(\"FileValidation\") + \" MB.)\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.loginData = this._authService.GetCurrentUserDetail().UserViewModel;\r\n    this.GetDDLList();\r\n    //this.GetById();\r\n    this.GetHelpDocument();\r\n    this.getDistrict();\r\n    this.getDepartment();\r\n  }\r\n\r\n  getDepartment() {\r\n    this._userService.GetUserDepartment(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDepartment = <UserDepartmentViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  getDistrict() {\r\n    this._userService.GetUserDistrict(this.loginData.UserId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.ddlDistrict = <UserDistrictViewModel[]>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  GetSubType(departmentCode: number|string = 0, typecode, isDeptClick= false) {\r\n    \r\n    if (typecode) {\r\n      this._commonService.GetOrderSubTypeByTypeAndDepartment(Number(departmentCode), typecode).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this.ddlSubType = <DdlItemModel[]>data.Data;\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    } else {\r\n      this.ddlSubType = null;\r\n    }\r\n    if (isDeptClick) {\r\n      this.getSchemeList(this.isShowAll ? 0 : departmentCode);\r\n    }\r\n  }\r\n\r\n  showAllScheme(event) {\r\n    if (event.checked) {\r\n      this.isShowAll=true;\r\n      this.getSchemeList(0);\r\n    } else {\r\n      this.isShowAll=false;\r\n      this.getSchemeList(this.model.DepartmentCode);\r\n    }\r\n  }\r\n\r\n  getSchemeList(code) {\r\n      this._commonService.GetSchemeList(Number(code), StatusEnum.Active).subscribe(\r\n        (data) => {\r\n          if (data.IsSuccess) {\r\n            \r\n            this.dDLList.ddlSchemeName = data.Data;\r\n            if ( this.dDLList.ddlSchemeName) {\r\n              this.dDLList.ddlSchemeName.forEach(obj => {\r\n                this.schemeItems[obj.Value] = obj.Text;\r\n              });\r\n            }\r\n          }\r\n        },\r\n        (error) => {\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n  }\r\n\r\n  selectAll() {\r\n    \r\n    if (this.selectedAll < 0) {\r\n      this.model.DepartmentEffected = this.dDLList.ddlDepartment.map(\r\n        function(a) {\r\n          return a.Value;\r\n        }\r\n      );\r\n      this.selectedAll = 1;\r\n    } else {\r\n      this.selectedAll = -1;\r\n      this.model.DepartmentEffected = [];\r\n    }\r\n  }\r\n\r\n  selectBenificiaryAll() {\r\n    \r\n    if (this.selectedBenAll < 0) {\r\n      this.model.BeneficiaryCategory = this.dDLList.ddlBeneficiaryCategory.map(\r\n        function(a) {\r\n          return a.Value;\r\n        }\r\n      );\r\n      this.selectedBenAll = 1;\r\n    } else {\r\n      this.selectedBenAll = -1;\r\n      this.model.BeneficiaryCategory = [];\r\n    }\r\n  }\r\n\r\n  GetDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.DDLKeyForOrderEntry).subscribe(\r\n      data => {\r\n        \r\n        this.GetById();\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n\r\n          this.dDLList.ddlOrderModuleName.forEach(obj => {\r\n            this.moduleNameItems[obj.Value] = obj.Text;\r\n          });\r\n          if (this.dDLList.ddlCMISBudgetYear) {\r\n            this.dDLList.ddlCMISBudgetYear.forEach(obj => {\r\n              this.yearItems[obj.Value] = obj.Text;\r\n            });\r\n          }\r\n\r\n          this.dDLList.ddlDepartmentForCMISReport.forEach(obj => {\r\n            this.departmentItems[obj.Value] = obj.Text;\r\n          });\r\n\r\n          this.dDLList.ddlSchemeMaster.forEach(obj => {\r\n            this.schemeItems[obj.Value] = obj.Text;\r\n          });\r\n\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  modelChanged() {\r\n    \r\n    if(!this.model.EffectForm)\r\n    {\r\n      this.model.EffectForm = this.model.Date;\r\n    }\r\n}\r\n\r\n  onSelection() {\r\n    this.model.IndividualBeneficiaryScheme = \"\";\r\n    for (let index = 0; index < this.model.BenificiarySchemeIds.length; index++) {\r\n\r\n        if (!this.model.IndividualBeneficiaryScheme) {\r\n          this.model.IndividualBeneficiaryScheme =\r\n            index +\r\n            1 +\r\n            \". \" +\r\n            this.schemeItems[this.model.BenificiarySchemeIds[index]];\r\n        } else {\r\n          this.model.IndividualBeneficiaryScheme =\r\n            this.model.IndividualBeneficiaryScheme +\r\n            \"\\n\" +\r\n            (index + 1) +\r\n            \". \" +\r\n            this.schemeItems[this.model.BenificiarySchemeIds[index]];\r\n        }\r\n    }\r\n}\r\n\r\n  GetById() {\r\n    \r\n    this._orderEntryService.GetByID(this.id).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          \r\n          let temp = data.Data;\r\n          temp = <OrderWithRelatedToViewModel>data.Data;\r\n          this.model = <OrderEntryModel>temp.OrderMasterData;\r\n          this.checkValid(this.model.Type);\r\n          this.model.OfficeCode = Number(this.loginData.OfficeCode);\r\n          if (this.model.LinkToScheme) {\r\n            this.model.LinkToScheme = String(this.model.LinkToScheme);\r\n          }\r\n          if (this.model.DistrictCode) {\r\n            this.model.DistrictCode = String(this.model.DistrictCode);\r\n          }\r\n          if (temp.OrderMasterData.BeneficiaryCategoryIds) {\r\n            this.model.BeneficiaryCategory = temp.OrderMasterData.BeneficiaryCategoryIds.split(\r\n              \",\"\r\n            );\r\n          }\r\n          if (temp.OrderMasterData.DepartmentEffectedIds) {\r\n            this.model.DepartmentEffected = temp.OrderMasterData.DepartmentEffectedIds.split(\r\n              \",\"\r\n            );\r\n          }\r\n          if (temp.OrderMasterData.SectorIds) {\r\n            this.model.Sector = temp.OrderMasterData.SectorIds.split(\",\");\r\n          }\r\n          if (this.model.DepartmentCode) {\r\n            this.model.DepartmentCode = String(this.model.DepartmentCode);\r\n          }\r\n          if (this.model.BenificiarySchemeIds) {\r\n            this.model.BenificiarySchemeIds = temp.OrderMasterData.BenificiarySchemeIds.split(\r\n              \",\"\r\n            );\r\n          }\r\n          if (this.model.Type) {\r\n            this.GetSubType(Number(this.model.DepartmentCode), this.model.Type);\r\n            this.model.Type = String(this.model.Type);\r\n          }\r\n          if (this.model.SubTypeCode) {\r\n            this.model.SubTypeCode = String(this.model.SubTypeCode);\r\n          }\r\n          if (this.model.IssueBy) {\r\n            this.model.IssueBy = String(this.model.IssueBy);\r\n          }\r\n          if (this.model.Date) {\r\n            this.model.Date = new Date(this.model.Date);\r\n          }\r\n          if (this.model.MediaUrlList) {\r\n            this.documentUrlList = this.model.MediaUrlList;\r\n          }\r\n\r\n          this.model.RelatedToOrderParameterList = this.relatedToOrderParameterList;\r\n          if (temp.RelatedToData.length > 0) {\r\n            temp.RelatedToData.forEach(element => {\r\n              const tempR = new OrderRelatedToModel();\r\n\r\n              tempR.DepartmentId = element.DepartmentId;\r\n              tempR.ModuleName = element.ModuleName;\r\n              tempR.DepartmentName = element.DepartmentName;\r\n              tempR.ModuleId = element.ModuleId;\r\n              tempR.YearText = element.YearText;\r\n              tempR.YearValue = element.YearValue;\r\n              tempR.Id = element.Id;\r\n              tempR.RelatedToResult.filenumber = element.filenumber;\r\n              tempR.RelatedToResult.modulename = element.modulename;\r\n              tempR.RelatedToResult.parano = element.parano;\r\n              tempR.RelatedToResult.pm_projecthdrid = element.pm_projecthdrid;\r\n              tempR.RelatedToResult.prj_dept = element.prj_dept;\r\n              tempR.RelatedToResult.prj_description = element.prj_description;\r\n              tempR.RelatedToResult.prj_ndept = element.prj_ndept;\r\n              tempR.RelatedToResult.prj_year = element.pprj_year;\r\n              tempR.RelatedToResult.rowno = element.rowno;\r\n\r\n              this.model.RelatedToOrderParameterList.push(tempR);\r\n            });\r\n          }\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url, name) {\r\n    \r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n  // GetHelpDocument() {\r\n\r\n  //   this._commonService.GetHelpDocument(this.helpDocumentEnum.Order).subscribe(\r\n  //     data => {\r\n  //       if (data.IsSuccess) {\r\n  //         this.helpDocument = data.Data;\r\n  //       } else {\r\n  //         this._alertService.error(data.Message);\r\n  //       }\r\n  //     },\r\n  //     error => {\r\n  //       this._alertService.error(error.message);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  // downloadHelpPdf(Url) {\r\n  //   const linkSource = Url;\r\n  //   const downloadLink = document.createElement(\"a\");\r\n\r\n  //   downloadLink.href = linkSource;\r\n  //   downloadLink.download = \"Help Document\";\r\n  //   downloadLink.click();\r\n  // }\r\n\r\n\r\n  GetHelpDocument() {\r\n\r\n    this._commonService.GetHelpDocument(this.helpDocumentEnum.Order).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          \r\n          this.helpDocument = <CommonDocModel>data.Data;\r\n        }else{\r\n          this._alertService.error(data.Message);\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadHelpPdf(Url, isHelpDoc : Boolean= false) {\r\n    \r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n      if (isHelpDoc) {\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Help Document\";\r\n        downloadLink.click();\r\n      }else{\r\n        downloadLink.href = linkSource;\r\n        downloadLink.download = \"Blank Document\";\r\n        downloadLink.click();\r\n      }\r\n\r\n  }\r\n\r\n  Saveclick() {\r\n    \r\n    this.date.markAsTouched();\r\n    this.type.markAsTouched();\r\n    this.title.markAsTouched();\r\n     this.description.markAsTouched();\r\n    this.department.markAsTouched();\r\n    this.SubType.markAsTouched();\r\n    this.Sector.markAsTouched();\r\n    this.district.markAsTouched();\r\n    this.searchCriteria.markAsTouched();\r\n    // // stop here if form is invalid\r\n    if (\r\n      this.date.valid &&\r\n      this.district.valid &&\r\n      this.department.valid &&\r\n      this.type.valid &&\r\n      this.title.valid &&\r\n      this.description.valid &&\r\n      !this.fileValidationMsg &&\r\n      this.searchCriteria.valid\r\n      && this.Sector.valid && this.SubType.valid\r\n    ) {\r\n      if (this.model.Date) {\r\n        const uTCDate = new Date(\r\n          Date.UTC(new Date( this.model.Date).getFullYear(), new Date( this.model.Date).getMonth(), new Date( this.model.Date).getDate())\r\n          ).toISOString();\r\n          this.model.Date = uTCDate;\r\n      }\r\n      if (this.model.EffectForm) {\r\n        const uTCDate = new Date(\r\n          Date.UTC(new Date( this.model.EffectForm).getFullYear(), new Date( this.model.EffectForm).getMonth(), new Date( this.model.EffectForm).getDate())\r\n          ).toISOString();\r\n          this.model.EffectForm = uTCDate;\r\n      }\r\n      this._orderEntryService.AddOrderEntry(this.model).subscribe(\r\n        data => {\r\n          \r\n          if (data.IsSuccess) {\r\n            this._parentApi.SuccessMessage(data.Message);\r\n\r\n            this._router.navigate([\"/order\"]);\r\n          } else {\r\n            this._commonService.ScrollingTop();\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        error => {\r\n          \r\n          this._commonService.ScrollingTop();\r\n          console.log(error);\r\n          this._alertService.error(error.message);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  AddMoreItems() {\r\n    if (this.orderRelatedTo.ModuleId) {\r\n      this.orderRelatedTo.ModuleName = this.moduleNameItems[\r\n        this.orderRelatedTo.ModuleId\r\n      ];\r\n    }\r\n    if (this.orderRelatedTo.YearValue) {\r\n      this.orderRelatedTo.YearText = this.yearItems[\r\n        this.orderRelatedTo.YearValue\r\n      ];\r\n    }\r\n    if (this.orderRelatedTo.DepartmentId) {\r\n      this.orderRelatedTo.DepartmentName = this.departmentItems[\r\n        this.orderRelatedTo.DepartmentId\r\n      ];\r\n    }\r\n    this.model.RelatedToOrderParameterList.push(this.orderRelatedTo);\r\n    this.orderRelatedTo = new OrderRelatedToModel();\r\n  }\r\n\r\n  RemoveClick(index) {\r\n    this.model.RelatedToOrderParameterList.splice(index, 1);\r\n  }\r\n\r\n  GetRelatedToResult(ModuleName,DepartmentId, DepartmentName, YearText, index) {\r\n    this.responseReqModel = new ConnectWithCMISFilterModel();\r\n    if (YearText) {\r\n      this.responseReqModel.YearText = YearText;\r\n    }\r\n    if (DepartmentName) {\r\n      this.responseReqModel.DepartmentName = DepartmentName;\r\n    }\r\n    if (DepartmentId) {\r\n      this.responseReqModel.Department = DepartmentId;\r\n    }\r\n    if (ModuleName) {\r\n      this.responseReqModel.ModuleName = ModuleName;\r\n    }\r\n\r\n    this.responseReqModel.Index = index;\r\n\r\n    const _dialogRef = this._dialog.open(RelatedtoDialogComponent, {\r\n      width: \"1000px\",\r\n      data: this.responseReqModel\r\n    });\r\n    _dialogRef.afterClosed().subscribe((result: ResponseDialogModel) => {\r\n      if (result) {\r\n        this.model.RelatedToOrderParameterList[result.index].RelatedToResult = <\r\n          OrderRelatedToModelResult\r\n          >result.resultModel;\r\n      }\r\n    });\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.tempDocumentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n      if (files.item(index).type.match(\"application/pdf\")) {\r\n        if (files.item(index).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\")))) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e: any) => {\r\n            this.tempDocumentUrlList.push(new DocumentUrlModel());\r\n            this.tempDocumentUrlList[index].Url = <string>reader.result;\r\n            this.tempDocumentUrlList[index].Extension = files[index].name.split(\r\n              \".\"\r\n            )[1];\r\n            if (this.tempDocumentUrlList[index].Extension === \"pdf\") {\r\n              this.tempDocumentUrlList[index].DisplayName = files[index].name;\r\n            }\r\n            this.model.AttachmentList.push(new OrderAttachmentModel());\r\n            this.model.AttachmentList[index].AttachmentsName =\r\n              files[index].name;\r\n            this.model.AttachmentList[index].Path = <string>reader.result;\r\n          };\r\n          reader.readAsDataURL(files[index]);\r\n        } else {\r\n          this.model.AttachmentList = [];\r\n          this.fileValidationMsg = this.fileSizeValidationMsg;\r\n          return;\r\n        }\r\n      } else {\r\n        this.model.AttachmentList = [];\r\n        this.fileValidationMsg = \"only *pdf\";\r\n        return;\r\n      }\r\n    }\r\n    this.documentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    this.documentUrlList = this.tempDocumentUrlList;\r\n    this.fileValidationMsg = \"\";\r\n    // this.model.File = files;\r\n  }\r\n\r\n  ClearFileList() {\r\n    this.fileValidationMsg = \"\";\r\n    this.model.File = null;\r\n    this.documentUrlList = [];\r\n  }\r\n\r\n  RemoveImageFile(i) {\r\n    \r\n        this.documentUrlList.splice(i, 1);\r\n       }\r\n\r\n       checkValid(data) {\r\n        \r\n    this.orderTypeData = this.dDLList.OrderWithRequiredType.find(x => x.Code === Number(data));\r\n    if (this.orderTypeData.IsDateMandatory) {\r\n    this.date.setValidators([Validators.required]);\r\n    this.date.updateValueAndValidity();\r\n    } else {\r\n      this.date.setValidators(null);\r\n    this.date.updateValueAndValidity();\r\n    }\r\n      }\r\n\r\n}\r\n\r\n\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRlbnQvb3JkZXIvdXBsb2FkLWF0dGFjaG1lbnQvdXBsb2FkLWF0dGFjaG1lbnQuY29tcG9uZW50LmNzcyJ9 */\"","import { OrderEntryModel } from \"./../../../Shared/Model/orderlist.model\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  UploadAttachmentModel,\r\n  OrderAttachmentModel,\r\n\r\n} from \"src/app/Shared/Model/orderlist.model\";\r\nimport { Validators, FormControl } from \"@angular/forms\";\r\nimport { OrderEntryService } from \"src/app/Shared/Service/orderentry.service\";\r\nimport { AlertService } from \"src/app/Shared/Service/alert.service\";\r\nimport { AppComponent } from \"src/app/app.component\";\r\nimport { CommonService } from \"src/app/Shared/Service/common.service\";\r\nimport { AppSetting } from \"src/app/Shared/Model/appsetting\";\r\nimport {\r\n  DDLModel,\r\n  DocumentUrlModel\r\n} from \"src/app/Shared/Model/commonddl.model\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: \"app-upload-attachment\",\r\n  templateUrl: \"./upload-attachment.component.html\",\r\n  styleUrls: [\"./upload-attachment.component.css\"]\r\n})\r\nexport class UploadAttachmentComponent implements OnInit {\r\n  model: UploadAttachmentModel;\r\n  dDLList: DDLModel;\r\n  fileValidationMsg: string;\r\n  uploadId: number;\r\n  newmodel: OrderEntryModel;\r\n  documentUrlList: DocumentUrlModel[] = [];\r\n  file = new FormControl(\"\", [Validators.required]);\r\n  orderId = new FormControl(\"\", [Validators.required]);\r\n  tempDocumentUrlList: DocumentUrlModel[] = [];\r\n  fileSizeValidationMsg: string;\r\n  constructor(\r\n    private readonly _orderEntryService: OrderEntryService,\r\n    private readonly _alertService: AlertService,\r\n    private readonly _commonService: CommonService,\r\n    private readonly _parentApi: AppComponent,\r\n    private readonly _route: ActivatedRoute\r\n  ) {\r\n    \r\n    this._parentApi.setpagelayout(\"Upload Order Attachment :\", \"\", \"\", \"\");\r\n    this.model = new UploadAttachmentModel();\r\n    this.uploadId = this._route.snapshot.params.id;\r\n    this.model.OrderId = String(this.uploadId);\r\n    this.fileSizeValidationMsg=\"Attachment must be less than \"+   localStorage.getItem(\"FileValidation\") + \" MB.\";\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getDDLList();\r\n    if (this.model.OrderId) {\r\n      this.GetById();\r\n    }\r\n\r\n  }\r\n\r\n  getDDLList() {\r\n    this._commonService.GetAllDDL(AppSetting.DDLKeyUploadAttachment).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          this.dDLList = <DDLModel>data.Data;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.tempDocumentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    for (let index = 0; index < files.length; index++) {\r\n      if (files.item(index).type.match(\"application/pdf\")) {\r\n        if (files.item(index).size < this._commonService.ConvertMbintoByte(Number(localStorage.getItem(\"FileValidation\")))) {\r\n          const reader = new FileReader();\r\n          reader.onload = (e: any) => {\r\n            this.tempDocumentUrlList.push(new DocumentUrlModel());\r\n            this.tempDocumentUrlList[index].Url = <string>reader.result;\r\n            this.tempDocumentUrlList[index].Extension = files[index].name.split(\r\n              \".\"\r\n            )[1];\r\n            if (this.tempDocumentUrlList[index].Extension === \"pdf\") {\r\n              this.tempDocumentUrlList[index].DisplayName = files[index].name;\r\n            }\r\n            this.model.AttachmentList.push(new OrderAttachmentModel());\r\n            this.model.AttachmentList[index].AttachmentsName =\r\n              files[index].name;\r\n            this.model.AttachmentList[index].Path = <string>reader.result;\r\n          };\r\n          reader.readAsDataURL(files[index]);\r\n        } else {\r\n          this.model.AttachmentList = [];\r\n          this.fileValidationMsg = this.fileSizeValidationMsg;\r\n          return;\r\n        }\r\n      } else {\r\n        this.model.AttachmentList = [];\r\n        this.fileValidationMsg = \"only *pdf\";\r\n        return;\r\n      }\r\n    }\r\n    this.documentUrlList = [];\r\n    this.model.AttachmentList = [];\r\n    this.documentUrlList = this.tempDocumentUrlList;\r\n    this.fileValidationMsg = \"\";\r\n    // this.model.File = files;\r\n  }\r\n\r\n\r\n  saveclick() {\r\n    this.file.markAsTouched();\r\n    this.orderId.markAsTouched();\r\n    // // stop here if form is invalid\r\n    if (this.file.valid && this.orderId.valid) {\r\n      this._orderEntryService.UploadAttachment(this.model).subscribe(\r\n        data => {\r\n          if (data.IsSuccess) {\r\n            this._alertService.success(data.Message);\r\n          } else {\r\n            this._alertService.error(data.Message);\r\n          }\r\n        },\r\n        error => {\r\n          this._alertService.error(error.error.ExceptionMessage);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  GetById() {\r\n    \r\n    this._orderEntryService.GetByID(this.uploadId).subscribe(\r\n      data => {\r\n        if (data.IsSuccess) {\r\n          \r\n          var temp = data.Data;\r\n          this.newmodel = <OrderEntryModel>data.Data.OrderMasterData;\r\n          this.documentUrlList= this.newmodel.MediaUrlList;\r\n        }\r\n      },\r\n      error => {\r\n        this._alertService.error(error.message);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadPdf(Url, name) {\r\n    \r\n    const linkSource = Url;\r\n    const downloadLink = document.createElement(\"a\");\r\n    const fileName = name;\r\n\r\n    downloadLink.href = linkSource;\r\n    downloadLink.download = fileName;\r\n    downloadLink.target = \"blank\";\r\n    downloadLink.click();\r\n\r\n  }\r\n\r\n  RemoveImageFile(i) {\r\n    \r\n        this.documentUrlList.splice(i, 1);\r\n       // this.Imeges.slice(i, 1);\r\n      }\r\n\r\n}\r\n"],"sourceRoot":""}